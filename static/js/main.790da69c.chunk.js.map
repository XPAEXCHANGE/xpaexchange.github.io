{"version":3,"sources":["i18n/i18n.js","actions/modal.js","constants/actionTypesUser.js","constants/actionTypesBook.js","constants/languageType.js","utils/rpc.js","constants/actionTypesNews.js","components/tokenList/tokenList.js","store/configureStore.js","components/header/header.js","utils/format.js","actions/user.js","constants/actionTypeMortgage.js","reducers/book.js","reducers/user.js","reducers/modal.js","reducers/news.js","reducers/mortgage.js","reducers/index.js","utils/Etherscan.js","epics/book.js","epics/user.js","epics/index.js","store/configureStore.prod.js","components/main/main.js","utils/asyncComponent.js","App.js","routes/routes.js","index.js","utils/OrderbookParser.js","actions/book.js","constants/actionTypesModal.js"],"names":["options","order","lookupQuerystring","lookupCookie","lookupLocalStorage","lookupFromPathIndex","lookupFromSubdomainIndex","caches","excludeCacheFor","cookieMinutes","cookieDomain","htmlTag","document","documentElement","lngDetector","LanguageDetector","i18n","use","XHR","init","whitelist","fallbackLng","ns","defaultNS","debug","interpolation","escapeValue","load","lowerCaseLng","backend","loadPath","detection","updateLoading","data","type","types","updateMessage","ACCOUNT_GET$","ACCOUNT_UPDATE","MYBOOKS_GET$","MYBOOKS_UPDATE","MYBOOKS_ADD","MYBOOKS_CANCEL","MYBOOKS_CHANGE","USER_GET$","USER_UPDATE","HISTORY_GET$","HISTORY_UPDATE","MYTRANSACTION_CHANGE","MYTRANSACTION_UPDATE","KEEP","DOWNLOADED","FROM_CHANGE","TO_CHANGE","BOOK_GET$","BOOK_UPDATE","TOKENLIST_GET","SUMMARY_GET$","SUMMARY_UPDATE","TRADELIST_GET","RECENTTRANSACTION_GET$","RECENTTRANSACTION_UPDATE","KLINE_GET$","KLINE_UPDATE","TIMEUINT_CHANGE","FILLBOOK_GET$","language","name","xpaExchange","finalConfig","serverUrl","richAddress","ethAddress","XPAAsset","XPA","parser","createElement","href","minGasPrice","cash","assetToken","provider","Web3","providers","HttpProvider","useExtension","web3","OrderbookParser","setExtensionAddress","callback","eth","getAccounts","err","accs","defaultAccount","length","window","location","reload","replace","startExtension","login","ethereum","removeAllListeners","on","accounts","enable","setWeb3Provider","Date","now","headers","value","echashcash","pathname","setProvider","sha3","str","utils","zero","l","rs","Array","fill","join","calAmount","amount","decimal","BN","test","tenFill","toString","ecRequest","Url","hash","Promise","resolve","reject","xhr","XMLHttpRequest","url","open","onreadystatechange","readyState","DONE","response","onerror","status","statusText","hashcash","setRequestHeader","send","JSON","stringify","checkReceipt","param","func","getTransactionReceipt","error","res","console","log","jsonrpc","method","params","id","then","result","parse","reduce","prev","blockNumber","setTimeout","getNonce","address","a","getTransactionCount","bnTen","getDecimal","token","substr","call","to","Number","e","getAllowance","userAddress","contract","getGasPrice","getUserBalance","array","body","promises","forEach","push","getBalance","balanceHex","all","balances","map","d","subHex","getGasLimit","retry","from","estimateGas","sendRawTransaction","nonce","gasPrice","gasLimit","key","sendTransaction","bnHex","gas","privateKey","ethereumjs","Buffer","txParams","chainId","tx","Tx","sign","serializedTx","serialize","calcFee","fee","catch","agent","fromDecimal","toDecimal","n","g","des","price","num","ap","approve","observerAllowance","allowance","observerApprove","eciban","toIBAN","observerEstimatGas","transaction","receipt","_receipt","parseInt","limit","createStream","raw","estimateCancel","cancelOrder","cancelStream","showMeMoney","testAddress","getMortgageRate","getHighestMortgageRate","getUsableXPA","getClosingLine","getMortgagePrice","Object","keys","rejex","i","getEquvialentAmount","getAmount","withdrawFee","offsetFee","estimateMortgage","mortgage","allow","estimateAct","doAct","estimateOffset","doOffset","mailTo","SET_NEWS","TokenList","props","state","filter","base","favorite","localStorage","getItem","favoriteToggle","bind","handleClick","t","basic","this","tokenList","find","setState","update","$set","item","stopPropagation","indexOf","$push","setItem","addressId","val","target","list","tradeList","select","listArray","searchStyle","favoriteData","toLowerCase","isFavorite","fav","baseAddress","onClick","className","aria-hidden","formatNumber","latest","String","growth","k","changeToken","onChange","src","alt","renderMenu","React","Component","defaultProps","translate","module","exports","require","Header","withRouter","lang","menu","showMenu","showList","showContract","changeHeader","renderLanguage","renderSummary","renderContract","closeList","dash","addEventListener","nextProp","nextState","removeEventListener","lan","tar","changeLanguage","contains","desc","obj","myTransaction","actions","userActions","myTransactionChange","able","total","act","ref","el","contractBtn","onMouseEnter","onMouseLeave","match","path","summary","max","min","renderList","production","guide","accMul","arg1","arg2","m","s1","s2","split","float","int","maxFloatLen","de","parseFloat","Math","floor","toFixed","warn","formatTime","timestamp","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","isFloat","times","num1","num2","dot1","dot2","Num1","Num2","fixedFloor","scnToStr","x","abs","substring","input","index","idx","tmpArr","l1","l2","sellAmount","fAmount","fFill","fDecimal","sub","sellDisplayPrice","tDecimal","buyAmount","mul","buyDisplayPrice","div","getRateByPrice","userGet$","userUpdate","myBooksGet$","myBooksUpdate","myBooksAdd","myBooksCancel","myBooksChange","myTransactionUpdate","accountGet$","accountUpdate","historyGet$","historyUpdate","changeKeep","CHANGE_MORTGAGE_RATE","CHANGE_EQUIVALENT_AMOUNT","CHANGE_USABLE","CHANGE_LOAN","CHANGE_REMAINING","CHANGE_USABLE_XPA","MORTGAGE_LOGOUT","CHANGE_MORTGAGE_PRICE","initialState","buy","sell","kLine","timeunit","user","account","myBooks","keep","myHistory","loading","message","mortgageRate","equivalentAmount","usable","loan","remaining","closingLine","usableXPA","rootReducer","combineReducers","book","action","$unshift","cancel","modal","news","Etherscan","contractAddress","request","reverse","_data","fromToken","PARAM_LEN","toToken","no","transactionHash","fromAmount","timeStamp","action$","state$","pipe","ofType","switchMap","Rxfrom","getAll","concatMap","orders","concat","tk","arrenge","sort","b","gt","curr","add","filled","v","displayPrice","undefined","of","mergeMap","bookUpdate","wallet","catchError","obs","merge","arr","values","recentTransactionUpdate","getTime","kLineGet$","final","summaryUpdate","lt","timeParse","dbObj","once","snapshot","startday","data5ma","data10ma","initialData","high","low","close","kLineData","tmpFrom","tmpTo","j","p","previ","kLineUpdate","getFillOrderLogs","books","tradList","tokens","staticCurrencies","currencies","sc","currency","yesterdayRate","ordersChunck","yesterdayOrders","chunck","c","rate","tradeListGet","rpc","r","fromAddress","toAddress","sellOrders","cacheBooks","butOrders","displayAmount","rootEpic","combineEpics","booksEpic","userEpic","epicMiddleware","createEpicMiddleware","configureStore","middleware","store","createStore","compose","applyMiddleware","thunk","devToolsExtension","f","run","Main","context","children","contextTypes","router","PropTypes","object","isRequired","asyncComponent","getComponent","mounted","AsyncComponent","query","search","routes","exact","component","default","nomatch","render","App","history","createBrowserHistory","routerMiddleware","ReactDOM","getElementById","END_RESULT","padEnd","OrdernookParser","_web3","_contract","padStart","_result","_amount","_next","_getOrderBooks","_getNextOrderPrice","_getAll","_from","_to","_orders","changeFrom","changeTo","bookGet$","tokenListGet","summaryGet$","recentTransactionGet$","timeunitChange","getFillBook$","UPDATE_LOADING","UPDATE_MESSAGE"],"mappings":"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","file":"static/js/main.790da69c.chunk.js","sourcesContent":["import i18n from 'i18next';\nimport XHR from 'i18next-xhr-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\nconst options = {\n    // order and from where user language should be detected\n    order: ['querystring', 'cookie', 'localStorage', 'navigator', 'htmlTag', 'path', 'subdomain'],\n\n    // keys or params to lookup language from\n    lookupQuerystring: 'lng',\n    lookupCookie: 'i18next',\n    lookupLocalStorage: 'i18nextLng',\n    lookupFromPathIndex: 0,\n    lookupFromSubdomainIndex: 0,\n\n    // cache user language on\n    caches: ['localStorage', 'cookie'],\n    excludeCacheFor: ['cimode'], // languages to not persist (cookie, localStorage)\n\n    // optional expire and domain for set cookie\n    cookieMinutes: 10,\n    cookieDomain: 'myDomain',\n\n    // optional htmlTag with lang attribute, the default is:\n    htmlTag: document.documentElement\n};\n\nconst lngDetector = new LanguageDetector(null, options);\n\ni18n.use(XHR)\n    .use(lngDetector)\n    .init({\n        whitelist: [\n            'en-us', 'zh-tw', 'zh-cn', 'ko-kr', 'ja-jp'\n        ],\n\n        fallbackLng: 'en-us', // 未偵測到時的後備語系\n\n        ns: ['common'], // 語系的 loading namespace 如語系檔案名稱 common.js\n\n        defaultNS: 'common', // 預設的 namespace name\n\n        debug: false,\n\n        interpolation: {\n            escapeValue: false // not needed for react!!\n        },\n\n        load: 'currentOnly',\n\n        lowerCaseLng: true,\n\n        backend: {\n            // 設定語系檔案的 server 路徑, 會以GET的方式跟 server 要檔案\n            // lng = 語系代碼 ns = namespace\n            loadPath: '/locales/{{lng}}/{{ns}}.json'\n        },\n\n        detection: {\n            lookupLocalStorage: 'i18nextLng'\n        },\n\n    });\n\nexport default i18n;\n","import * as types from '../constants/actionTypesModal';\n\nexport function updateLoading(data)\n{\n    return {\n        type: types.UPDATE_LOADING,\n        data\n    };\n}\n\nexport function updateMessage(data)\n{\n    return {\n        type: types.UPDATE_MESSAGE,\n        data\n    };\n}\n","export const ACCOUNT_GET$ = 'ACCOUNT_GET$';\nexport const ACCOUNT_UPDATE = 'ACCOUNT_UPDATE';\nexport const MYBOOKS_GET$ = 'MYBOOKS_GET$';\nexport const MYBOOKS_UPDATE = 'MYBOOKS_UPDATE';\nexport const MYBOOKS_ADD = 'MYBOOKS_ADD';\nexport const MYBOOKS_CANCEL = 'MYBOOKS_CANCEL';\nexport const MYBOOKS_CHANGE = 'MYBOOKS_CHANGE';\nexport const USER_GET$ = 'USER_GET$';\nexport const USER_UPDATE = 'USER_UPDATE';\nexport const HISTORY_GET$ = 'HISTORY_GET$';\nexport const HISTORY_UPDATE = 'HISTORY_UPDATE';\nexport const MYTRANSACTION_CHANGE = 'MYTRANSACTION_CHANGE';\nexport const MYTRANSACTION_UPDATE = 'MYTRANSACTION_UPDATE';\nexport const KEEP = 'KEEP';\nexport const DOWNLOADED = 'DOWNLOADED';\nexport const CHANGE_HREF = 'CHANGE_HREF';\n\n","export const FROM_CHANGE = 'FROM_CHANGE';\nexport const TO_CHANGE = 'TO_CHANGE';\nexport const BOOK_GET$ = 'BOOK_GET$';\nexport const BOOK_UPDATE = 'BOOK_UPDATE';\nexport const TOKENLIST_GET = 'TOKENLIST_GET';\nexport const SUMMARY_GET$ = 'SUMMARY_GET$';\nexport const SUMMARY_UPDATE = 'SUMMARY_UPDATE';\nexport const TRADELIST_GET = 'TRADELIST_GET';\nexport const RECENTTRANSACTION_GET$ = 'RECENTTRANSACTION_GET$';\nexport const RECENTTRANSACTION_UPDATE = 'RECENTTRANSACTION_UPDATE';\nexport const KLINE_GET$ = 'KLINE_GET$';\nexport const KLINE_UPDATE = 'KLINE_UPDATE';\nexport const TIMEUINT_CHANGE = 'TIMEUINT_CHANGE';\nexport const FILLBOOK_GET$ = 'FILLBOOK_GET$'","export const language = [\n    { type: '繁體中文', name: 'zh-tw' },\n    { type: '简体中文', name: 'zh-cn' },\n    { type: 'English', name: 'en-us' },\n    { type: '한국어', name: 'ko-kr' },\n    { type: '日本語', name: 'ja-jp' }\n];\n","/* eslint-disable no-undef */\nimport Web3 from 'web3';\nimport { subHex, tenFill, bnHex, bnTen } from './format';\nimport OrderbookParser from './OrderbookParser';\n\nconst xpaExchange = finalConfig.xpaExchange;\nconst serverUrl = finalConfig.serverUrl;\nconst richAddress = '0xa8b8057f02e1d21ccf5707a1d18747a3976c119a';\nconst ethAddress = finalConfig.ethAddress;\nconst XPAAsset = finalConfig.XPAAsset;\n\nconst XPA = finalConfig.XPA;\n\nconst parser = document.createElement('a');\nparser.href = serverUrl;\n// const hashcash = echashcash(parser.pathname);\n\nconst approveGasLimit = '0xc350';\nconst minGasPrice = '0x02540be400';\nconst cash = { ...finalConfig.assetToken, XPA };\nconst provider = new Web3.providers.HttpProvider(serverUrl);\n\nlet timestamp = null;\nlet useExtension = false;\nlet web3 = new Web3(provider);\n\nOrderbookParser.init(web3, xpaExchange);\n\nconst ethEnabled = () => {\n    if (window.ethereum) {\n        window.web3 = new Web3(window.ethereum);\n        window.ethereum.enable();\n        return true;\n    }\n    return false;\n}\n\nexport const setExtensionAddress = (callback) => {\n    web3.eth.getAccounts((err, accs) => {\n        if (typeof callback === 'function' && accs[0]) {\n            web3.eth.defaultAccount = accs[0];\n            if (accs.length === 0) return window.location.reload();\n            callback(accs[0].replace('0x', ''));\n        }\n    });\n}\n\nexport const startExtension = (login) => {\n    window.ethereum.removeAllListeners();\n    window.ethereum.on('accountsChanged', function (accounts) {\n        if (typeof login === 'function' && accounts.length > 0) {\n            login(accounts[0].replace('0x', ''));\n        }\n    });\n    if (ethEnabled()) {\n        web3 = window.web3;\n        useExtension = true;\n    }\n    return;\n    \n}\n\n\nexport const setWeb3Provider = () => {\n    if (useExtension) return;\n    // if (!timestamp || Date.now() - timestamp > 10 * 1000)\n    // {    \n    timestamp = Date.now();\n    provider.headers = [{ name: 'hashcash', value: echashcash(parser.pathname) }];\n    web3.setProvider(provider);\n    // }\n};\n\nconst sha3 = (str) => {\n    return Web3.utils.sha3(str);\n};\n\n\n/**\n * 把字補齊到 l 的長度\n * @param  {[String]} str [String]\n * @param  {[type]} l   [number]\n * @return {[type]}     [String]\n */\nfunction zero(str, l) {\n    let rs = str;\n    if (str.length < l) {\n        rs = new Array(l - str.length).fill(0).join('') + rs;\n    }\n    return rs;\n}\n\n/**\n * 把 arraybuffer 轉成字串\n * @param  {[type]} arrayBuffer [二進制資料緩衝]\n * @return {[type]}            [String]\n */\n// function arrayBufferToHex(arrayBuffer)\n// {\n//     if (typeof arrayBuffer !== 'object' || arrayBuffer === null || typeof arrayBuffer.byteLength !== 'number')\n//     {\n//         throw new TypeError('Expected input to be an ArrayBuffer');\n//     }\n//     let view = new Uint8Array(arrayBuffer);\n//     let result = '';\n//     let value;\n//     for (let i = 0; i < view.length; i += 1)\n//     {\n//         value = view[i].toString(16);\n//         result += (value.length === 1 ? `0${value}` : value);\n//     }\n//     return result;\n// }\n\n/**\n * 產生數量16進位\n * @param  {[string]} amount [數量]\n * @param  {[string]} amount [數量]\n * @param  {[number]} decial [單位]\n * @return {[number]}\n */\nfunction calAmount(amount, decimal) {\n    const BN = Web3.utils.BN;\n    if (/0x/.test(amount)) {\n        return amount.replace('0x', '');\n    }\n    else {\n        return new BN(tenFill(amount, decimal)).toString(16);\n    }\n}\n\n/**\n * [取資料]\n * @param  {[type]} data [params => object]\n * @return {[type]}      [promise]\n */\nfunction ecRequest(data, Url, hash) {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        const url = Url || serverUrl;\n        const method = 'POST';\n        xhr.open(method, url);\n        xhr.onreadystatechange = () => {\n            if (xhr.readyState === XMLHttpRequest.DONE) {\n                resolve(xhr.response);\n            }\n        };\n        xhr.onerror = () => {\n            reject({\n                status: this.status,\n                statusText: xhr.statusText\n            });\n        };\n\n        const hashcash = echashcash(parser.pathname);\n        xhr.setRequestHeader('Content-Type', 'application/json');\n        xhr.setRequestHeader('hashcash', hash || hashcash);\n        xhr.send(JSON.stringify(data));\n    });\n}\n\nconst checkReceipt = (param) => {\n    const retry = 50;\n    const wait = 7000;\n\n    const func = useExtension ? () => new Promise((resolve, reject) => {\n        web3.eth.getTransactionReceipt(param, (error, res) => {\n            console.log('Error: '. error);\n            console.log('Result: '. res);\n            if (error) return resolve();\n            resolve(res);\n        })\n    }) : () => new Promise((resolve, reject) => {\n        const data = {\n            jsonrpc: '2.0',\n            method: 'eth_getTransactionReceipt',\n            params: [param],\n            id: 7\n        };\n        ecRequest(data).then((res) => {\n            const result = JSON.parse(res);\n            resolve(result);\n        })\n    })\n\n\n    console.log('check receipt ******************', param);\n\n    return new Array(retry).fill(0).reduce((prev) => {\n        return prev.then((rs) => {\n            if (rs) {\n                return Promise.resolve(rs);\n            }\n            else {\n                return func().then((res) => {\n                    \n                    if ( res === null || res.error || !(res.blockNumber > 0)) {\n                        console.log(`re check receipt ${res}`);\n                        return new Promise((resolve) => {\n                            setTimeout(() => {\n                                resolve();\n                            }, wait);\n                        });\n                    }\n                    else {\n                        return Promise.resolve(res);\n                    }\n                });\n            }\n        });\n    }, Promise.resolve());\n};\n\n/**\n * [取得 user addres nonce = > 錢包目前交易次數的流水號]\n * @param  {[type]} address [description]\n * @return {[type]}         [description]\n */\nasync function getNonce(address) {\n    // const number = await web3.eth.getTransactionCount(`0x${address}`, 'pending');\n    // return Promise.resolve(`0x${number.toString(16)}`);\n    if (useExtension) {\n        return new Promise((resolve, reject) => {\n            web3.eth.getTransactionCount(`0x${address}`, (error, result) => {\n                if (error) {\n                    reject(error);\n                } else {\n                    console.log('Nonce: ', result)\n                    resolve('0x' + bnTen(result).toString(16));\n                }\n            })\n        })\n    } else {\n        const params = [`0x${address}`, 'latest'];\n        const data = {\n            jsonrpc: '2.0',\n            method: 'eth_getTransactionCount',\n            params,\n            id: 7\n        };\n        return ecRequest(data).then((res) => {\n\n            return Promise.resolve(JSON.parse(res).result);\n        });\n    }\n}\n\n/**\n * [取token最小單位]\n * @param  {[type]} token [object => { ...rest }]\n * @return {[type]}       [description]\n */\nexport function getDecimal(token) {\n    if (token.address === ethAddress) {\n        return Promise.resolve(18);\n    }\n    else {\n        const data = `${sha3('decimals()').substr(0, 10)}000000000000000000000000`;\n        if (useExtension) {\n\n            return new Promise((resolve, reject) => {\n                web3.eth.call({\n                    to: token.address,\n                    data\n                }, (error, result) => {\n                    if (error) {\n                        reject(error);\n                    } else {\n                        resolve(Number(result));\n                    }\n                })\n            })\n        } else {\n            const param = {\n                jsonrpc: '2.0',\n                method: 'eth_call',\n                params: [{\n                    to: token.address,\n                    data,\n                }, 'latest'],\n                id: 7\n            };\n            return new Promise((resolve, reject) => {\n                ecRequest(param).then((res) => {\n                    try {\n                        resolve(JSON.parse(res).result);\n                    } catch (e) {\n                        reject(e);\n                    }\n                })\n            })\n\n        }\n    }\n}\n\nfunction getAllowance(userAddress, token, contract) {\n    const data = `${sha3('allowance(address,address)').substr(0, 10)}${zero(userAddress.replace('0x', ''), 64)}${zero(contract.replace('0x', ''), 64)}`;\n\n    if (useExtension) {\n        return new Promise((resolve, reject) => {\n            web3.eth.call({\n                to: token.address,\n                data\n            }, (error, result) => {\n                console.log(error, result);\n                if (error) {\n                    reject(error);\n                } else {\n                    resolve(result);\n                }\n            })\n        })\n    } else {\n        const param = {\n            jsonrpc: '2.0',\n            method: 'eth_call',\n            params: [{\n                to: token.address,\n                data,\n            }, 'latest'],\n            id: 7\n        };\n        return new Promise((resolve, reject) => {\n            ecRequest(param).then((res) => {\n                try {\n                    resolve(JSON.parse(res).result);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            })\n\n        })\n    }\n}\n\n/**\n * [取得 gas 的價格]\n * @return {[type]} [description]\n */\nexport function getGasPrice() {\n    if (useExtension) {\n        return new Promise((resolve, reject) => {\n            web3.eth.getGasPrice((error, result) => {\n                if (error) {\n                    reject(error);\n                } else {\n                    console.log('Gas Price:', result);\n                    resolve('0x' + bnTen(result).toString(16));\n                }\n            })\n        })\n    } else {\n        const data = {\n            jsonrpc: '2.0',\n            method: 'eth_gasPrice',\n            params: [],\n            id: 7\n        };\n        return new Promise((resolve, reject) => {\n            ecRequest(data).then(res => {\n                try {\n                    resolve(JSON.parse(res).result);\n                } catch(e) {\n                    reject(e);\n                }\n            })\n        })\n    }\n\n}\n\nexport function getUserBalance(array, address) {\n    const body = [];\n\n    if (useExtension) {\n        const promises = [];\n        array.forEach((token) => {\n            if (token.address === ethAddress) {\n                promises.push(\n                    new Promise((resolve, reject) => {\n                        web3.eth.getBalance(address, (error, result) => {\n                            if (error) {\n                                reject(error);\n                            } else {\n                                const balanceHex = bnTen(result).toString(16);\n\n                                resolve(balanceHex);\n                            }\n                        })\n                    })\n                )\n            } else {\n                promises.push(\n                    new Promise((resolve, reject) => {\n                        web3.eth.call({\n                            to: token.address,\n                            data: `${sha3('balanceOf(address)').substr(0, 10)}000000000000000000000000${address}`\n                        }, (error, result) => {\n                            if (error) {\n                                reject(error);\n                            } else {\n                                resolve(result.replace('0x', ''))\n                            }\n                        })\n                    })\n\n                )\n            }\n        })\n        return Promise.all(promises);\n    } else {\n\n        array.forEach((token) => {\n            if (token.address === ethAddress) {\n                const data = {\n                    jsonrpc: '2.0',\n                    method: 'eth_getBalance',\n                    params: [`0x${address}`, 'latest'],\n                    id: 7\n                };\n                body.push(data);\n            }\n            else {\n                const data = {\n                    jsonrpc: '2.0',\n                    method: 'eth_call',\n                    params: [{\n                        data: `${sha3('balanceOf(address)').substr(0, 10)}000000000000000000000000${address}`,\n                        to: token.address,\n                    }, 'latest'],\n                    id: 7\n                };\n                body.push(data);\n            }\n        });\n\n        return new Promise((resolve, reject) => {\n            return ecRequest(body).then((res) => {\n                try {\n                    const balances = JSON.parse(res).map(d => subHex(d.result));\n                    resolve(balances);\n\n                } catch (e) {\n                    reject(e);\n                }\n\n            })\n        })\n\n    }\n}\n\n\n// UNNECESSARY\n/**\n * [取得 user 所有 token 的餘額]\n * @param  {[type]} array   [token array]\n * @param  {[type]} address [user address]\n * @return {[type]}         [description]\n */\nexport function getUserPendingBalance(array, address) {\n    const body = [];\n    array.forEach((token) => {\n        if (token.address === ethAddress) {\n            const data = {\n                jsonrpc: '2.0',\n                method: 'eth_getBalance',\n                params: [`0x${address}`, 'pending'],\n                id: 7\n            };\n            body.push(data);\n        }\n        else {\n            const data = {\n                jsonrpc: '2.0',\n                method: 'eth_call',\n                params: [{\n                    data: `${sha3('balanceOf(address)').substr(0, 10)}000000000000000000000000${address}`,\n                    to: token.address,\n                }, 'pending'],\n                id: 7\n            };\n\n            body.push(data);\n        }\n    });\n    return ecRequest(body);\n}\n\n/**\n * [取得 gas limit]\n * @param  {[type]} from  [ex: xpa address]\n * @param  {[type]} to    [ex: eth address]\n * @param  {[type]} value [要付的 eth]\n * @param  {[type]} data  [加密完的交易資料]\n * @param  {[type]} retry [重複次數]\n * @return {[type]}       [description]\n */\nfunction getGasLimit(userAddress, to, value, data, retry) {\n    const param = {\n        from: userAddress,\n        to,\n        value,\n        data\n    }\n    if (useExtension) {\n        return new Promise((resolve, reject) => {\n            web3.eth.estimateGas(param, (error, result) => {\n                if (error) {\n                    reject(error);\n                } else {\n                    console.log('Gas Limit', result);\n                    resolve('0x' + bnTen(result).toString(16));\n                }\n            });\n        });\n    } else {\n        let retryCounter = retry > 0 ? retry : 5;\n        const waiting = 5000;\n\n        const body = {\n            jsonrpc: '2.0',\n            method: 'eth_estimateGas',\n            params: [param],\n            id: 7\n        };\n        return new Array(retryCounter).fill(0).reduce((prev) => {\n            return prev.then((rs) => {\n                if (rs) {\n                    return Promise.resolve(rs);\n                }\n                else {\n                    return ecRequest(body).then((res) => {\n                        const result = JSON.parse(res);\n                        if (result.error) {\n                            return new Promise((resolve) => {\n                                setTimeout(() => {\n                                    console.log('waiting', waiting, result.error);\n                                    resolve();\n                                }, waiting);\n                            });\n                        }\n                        else {\n                            console.log('success', res);\n                            return Promise.resolve(JSON.parse(res).result);\n                        }\n                    });\n                }\n            });\n        }, Promise.resolve());\n    }\n\n}\n\n/**\n * [送出 raw 交易資料]\n * @param  {[type]} nonce    [description]\n * @param  {[type]} gasPrice [description]\n * @param  {[type]} from     [description]\n * @param  {[type]} to       [description]\n * @param  {[type]} key      [description]\n * @param  {[type]} data     [description]\n * @param  {[type]} value    [description]\n * @return {[type]}          [description]\n */\nfunction sendRawTransaction(nonce, gasPrice, gasLimit, to, key, data, value) {\n    console.log('nonce: ', nonce, 'gasPrice: ', gasPrice, 'gasLimit', gasLimit);\n\n    if (useExtension) {\n        return new Promise((resolve, reject) => {\n            web3.eth.getAccounts((err, accs) => {\n                if (err) {\n                    reject(err);\n                } else {\n                    if (accs.length < 1) return reject('Acount not found');\n                    web3.eth.sendTransaction({\n                        from: accs[0],\n                        data,\n                        to,\n                        value,\n                        gasPrice: bnHex(gasPrice.replace('0x', '')).toString(),\n                        gas: gasLimit,\n                        nonce: Number(nonce)\n                    }, (error, hash) => {\n                        if (error) {\n                            reject(error);\n                        } else {\n                            resolve(hash);\n                        }\n                    });\n                }\n            });\n        });\n    } else {\n        const privateKey = ethereumjs.Buffer.Buffer.from(key, 'hex');\n        const txParams = {\n            nonce,\n            gasPrice,\n            gasLimit,\n            to,\n            value,\n            data,\n            chainId: 1\n        };\n        const tx = new ethereumjs.Tx(txParams);\n        tx.sign(privateKey);\n        const serializedTx = tx.serialize();\n        const rawTx = `0x${serializedTx.toString('hex')}`;\n        const params = [rawTx];\n        const body = {\n            jsonrpc: '2.0',\n            method: 'eth_sendRawTransaction',\n            params,\n            id: 7\n        };\n        return ecRequest(body).then((res) => Promise.resolve(JSON.parse(res).result))\n    }\n}\n\nexport function calcFee(userAddress, to) {\n\n    const data = `0xa028d749${zero(userAddress.replace('0x', ''), 64)}${zero(to.amount, 64)}${zero('1', 64)}`;\n\n    if (useExtension) {\n        return new Promise((resolve, reject) => {\n            web3.eth.call({\n                to: xpaExchange,\n                data\n            }, (error, res) => {\n                if (error) {\n                    reject(error);\n                } else {\n                    const result = res.substr(66, 64);\n                    const fee = bnHex(result).toString()\n                    resolve(Number(fee));\n                }\n            })\n        })\n    } else {\n        const data = {\n            jsonrpc: '2.0',\n            method: 'eth_call',\n            params: [{\n                to: xpaExchange,\n                data,\n            }, 'latest'],\n            id: 7\n        };\n\n        return ecRequest(data).then((res) => {\n            const result = JSON.parse(res).result;\n            const fee = result.substr(66, 64);\n            return Number(`0x${fee}`);\n        })\n            .catch(console.log);\n    }\n}\n\n/**\n * [取得Gas]\n * @param  {[type]} from        [description]\n * @param  {[type]} to          [description]\n * @param  {[type]} userAddress [description]\n * @param  {[type]} key         [私鑰]\n * @param  {[type]} arr         [能買賣到的單]\n * @return {[type]}             [description]\n */\nexport const estimateGas = (from, to, userAddress, key, agent) => {\n    let nonce;\n    let gasPrice = minGasPrice;\n    let fromDecimal = 18;\n    let toDecimal = 18;\n    let data = '';\n    let value = '0x0';\n\n    if (from.address === ethAddress && to.address !== ethAddress) // from ETH to token\n    {\n        return getNonce(userAddress).then((n) => {\n            nonce = n;\n            return getGasPrice();\n        })\n            .then((g) => {\n                gasPrice = Number(g) >= Number(minGasPrice) ? g : minGasPrice;\n                return getDecimal(to);\n            })\n            .then((des) => {\n                toDecimal = des;\n                data = `${sha3('userTakeOrder(address,address,uint256,uint256,address)')\n                    .substr(0, 10)}${zero('0', 64)}${zero(to.address.replace('0x', ''), 64)}${zero(from.price, 64)}${zero(from.amount, 64)}${agent ? zero('0', 64) : zero(agent.replace('0x', ''), 64)}`;\n                value = `0x${from.amount}`;\n                return getGasLimit(`0x${userAddress}`, xpaExchange, value, data, 50);\n            })\n            .then((num) => {\n                const gasLimit = num;\n\n                return {\n                    nonce,\n                    gasPrice,\n                    gasLimit,\n                    fromDecimal,\n                    toDecimal,\n                    from,\n                    to,\n                    key,\n                    data,\n                    value,\n                    agent\n                };\n            })\n            .catch((err) => {\n                console.log(err);\n                return false;\n            });\n    }\n    else {\n        return getNonce(userAddress).then((n) => {\n            nonce = n;\n            return getGasPrice();\n        })\n            .then((g) => {\n                gasPrice = Number(g) >= Number(minGasPrice) ? g : minGasPrice;\n                return getDecimal(from);\n            })\n            .then((des) => {\n                fromDecimal = Number(des);\n                return getDecimal(to);\n            })\n            .then((des) => {\n                toDecimal = Number(des);\n                return getAllowance(`0x${userAddress}`, from, xpaExchange);\n            })\n            .then((ap) => {\n                console.log('allowance', ap);\n                data = `${sha3('userTakeOrder(address,address,uint256,uint256,address)')\n                    .substr(0, 10)}${zero(from.address.replace('0x', ''), 64)}${zero(to.address.replace('0x', ''), 64)}${zero(from.price, 64)}${zero(from.amount, 64)}${agent ? '' : zero(agent.replace('0x', ''), 64)}`;\n                if (Number(ap) === 0) {\n                    return getGasLimit(`0x${userAddress}`, xpaExchange, value, data, 50);\n                }\n                else {\n                    const approve = `${sha3('approve(address,uint256)')\n                        .substr(0, 10)}${zero(xpaExchange.replace('0x', ''), 64)}${zero('0', 64)}`;\n\n                    return sendRawTransaction(nonce, gasPrice, approveGasLimit, from.address, key, approve, '0x0').then((res) => {\n                        return checkReceipt(res);\n                    })\n                        .then(() => {\n                            return getGasLimit(`0x${userAddress}`, from.address, '0x0', data, 50);\n                        });\n                }\n            })\n            .then((num) => {\n                const gasLimit = num;\n                return {\n                    nonce,\n                    gasPrice,\n                    gasLimit,\n                    from,\n                    to,\n                    key,\n                    data,\n                    value,\n                    fromDecimal,\n                    toDecimal,\n                    agent,\n                    userAddress\n                };\n            })\n            .catch((err) => {\n                console.log(err);\n                return false;\n            });\n    }\n};\n\nexport const observerAllowance = (from, userAddress) => {\n    return getAllowance(userAddress, from, xpaExchange)\n        .then((allowance) => {\n            return allowance;\n        })\n        .catch(() => {\n            return false;\n        });\n};\n\nexport const observerCheckApprove = (userAddress, data) => {\n    return getGasLimit(`0x${userAddress}`, xpaExchange, '0x0', data, 50).then((unit) => {\n        return unit;\n    });\n};\n\nexport const observerApprove = (from) => {\n    const approve = `${sha3('approve(address,uint256)')\n        .substr(0, 10)}${zero(xpaExchange.replace('0x', ''), 64)}${zero(from.amount, 64)}`;\n\n    return `iban:${eciban.toIBAN(from.address)}?data=${approve}&value=0&amount=0`;\n};\n\nexport const observerEstimatGas = (from, to, userAddress, agent, reduce) => {\n    let fromDecimal = 18;\n    let toDecimal = 18;\n    let data;\n    let value = '0x0';\n    let approve;\n\n    if (from.address === ethAddress && to.address !== ethAddress) // from ETH to token\n    {\n        return getDecimal(to)\n            .then((des) => {\n                data = `${sha3('userTakeOrder(address,address,uint256,uint256,address)').substr(0, 10)}${zero(from.address.replace('0x', ''), 64)}${zero(to.address.replace('0x', ''), 64)}${zero(from.price, 64)}${zero(from.amount, 64)}${agent ? zero('0', 64) : zero(agent.replace('0x', ''), 64)}`;\n                value = `0x${from.amount}`;\n                return getGasLimit(`0x${userAddress}`, xpaExchange, value, data, 50);\n            })\n            .then((num) => {\n                const gasLimit = num;\n\n                return {\n                    gasLimit,\n                    from,\n                    to,\n                    data,\n                    value,\n                    agent\n                };\n            })\n            .catch((err) => {\n                console.log(err);\n                return false;\n            });\n    }\n    else {\n        return getDecimal(from)\n            .then((des) => {\n                fromDecimal = Number(des);\n                return getDecimal(to);\n            })\n            .then((des) => {\n                toDecimal = Number(des);\n                return observerApprove(from);\n            })\n            .then((ap) => {\n                data = `${sha3('userTakeOrder(address,address,uint256,uint256,address)').substr(0, 10)}${zero(from.address.replace('0x', ''), 64)}${zero(to.address.replace('0x', ''), 64)}${zero(from.price, 64)}${zero(from.amount, 64)}${agent ? zero('0', 64) : zero(agent.replace('0x', ''), 64)}`;\n                approve = ap;\n                return getGasLimit(`0x${userAddress}`, xpaExchange, value, data, 50);\n            })\n            .then((num) => {\n                const gasLimit = num;\n                return {\n                    gasLimit,\n                    from,\n                    to,\n                    data,\n                    value,\n                    fromDecimal,\n                    toDecimal,\n                    agent,\n                    userAddress,\n                    approve,\n                };\n            })\n            .catch((err) => {\n                console.log(err);\n                return false;\n            });\n    }\n};\n\n/**\n * [執行掛單]\n * @param  {[type]} from        [description]\n * @param  {[type]} to          [description]\n * @param  {[type]} userAddress [description]\n * @param  {[type]} key         [私鑰]\n * @param  {[type]} arr         [能買賣到的單]\n * @return {[type]}             [description]\n */\nexport async function transaction(tx) {\n    console.log(tx);\n    let _receipt;\n    if (tx.from.address === ethAddress && tx.to.address !== ethAddress) // from ETH to token\n    {\n        return sendRawTransaction(tx.nonce, tx.gasPrice, tx.gasLimit, xpaExchange, tx.key, tx.data, tx.value)\n            .then((receipt) => {\n                _receipt = receipt;\n                return checkReceipt(receipt);\n            })\n            .then(() => {\n                return _receipt;\n            })\n            .catch(() => {\n                return false;\n            });\n    }\n    else {\n        const approve = `${sha3('approve(address,uint256)')\n            .substr(0, 10)}${zero(xpaExchange.replace('0x', ''), 64)}${zero(tx.from.amount, 64)}`;\n        console.log('data', approve);\n        return sendRawTransaction(tx.nonce, tx.gasPrice, approveGasLimit, tx.from.address, tx.key, approve, '0x0')\n            .then((res) => {\n                return checkReceipt(res);\n            }).then(() => {\n                tx.nonce = `0x${(parseInt(tx.nonce, 16) + 1).toString(16)}`;\n                return getGasLimit(`0x${tx.userAddress}`, xpaExchange, '0x0', tx.data, 50);\n            })\n            .then((res) => {\n                const limit = res;\n                console.log('new limit', limit);\n                return sendRawTransaction(tx.nonce, tx.gasPrice, limit, xpaExchange, tx.key, tx.data, '0x0');\n            })\n            .then((receipt) => {\n                _receipt = receipt;\n                return checkReceipt(receipt);\n            })\n            .then(() => {\n                return _receipt;\n            })\n            .catch((err) => {\n                console.log(err);\n                return false;\n            });\n    }\n}\n\n\n// export const checkApprove = (userAddress, from) =>\n// {\n//     return getAllowance(`0x${userAddress}`, from, xpaExchange).then((res) =>\n//     {\n//         console.log(res);\n//         return JSON.parse(res).result;\n//     });\n// };\n\n/**\n * [產生交易的 qrcode 資料]\n * @param  {[type]} from [description]\n * @param  {[type]} to   [description]\n * @param  {[type]} arr  [description]\n * @return {[type]}      [description]\n */\nexport function createStream(tx) {\n    // let approve;\n    console.log(tx);\n    if (tx.from.address === ethAddress && tx.to.address !== ethAddress) {\n        return Promise.resolve({ raw: `iban:${eciban.toIBAN(xpaExchange)}?data=${tx.data}&value=${Number(tenFill(bnHex(tx.from.amount).toString(), -18))}&amount=${Number(tenFill(bnHex(tx.from.amount).toString(), -18))}` });\n    }\n    else {\n        // approve = `${sha3('approve(address,uint256)').substr(0, 10)}${zero(xpaExchange.replace('0x', ''), 64)}${zero(calAmount(tx.from.amount, tx.fromDecimal), 64)}`;\n        return Promise.resolve({ approve: tx.approve, raw: `iban:${eciban.toIBAN(xpaExchange)}?data=${tx.data}&value=0&amount=0` });\n    }\n}\n\n// export function initDecimal(array)\n// {\n//     const body = [];\n//     const result = [];\n//     array.forEach((token) =>\n//     {\n//         if (token.address === ethAddress)\n//         {\n//             result.push(18);\n//         }\n//         else\n//         {\n//             const data = {\n//                 jsonrpc: '2.0',\n//                 method: 'eth_call',\n//                 params: [{\n//                     to: token.address,\n//                     data: `${sha3('decimals()')).substr(0, 10)}000000000000000000000000`,\n//                 }, 'latest'],\n//                 id: 7\n//             };\n//             body.push(data);\n//         }\n//     });\n//     return ecRequest(body).then((res) =>\n//     {\n//         JSON.parse(res).forEach((r) =>\n//         {\n//             result.push(parseInt(r.result, 16));\n//         });\n//         return new Promise((resolve) =>\n//         {\n//             resolve(result);\n//         });\n//     });\n// }\n\nexport function estimateCancel(from, to, userAddress, key, agent) {\n    let gasPrice = minGasPrice;\n    let data;\n    data = `${sha3('userCancelOrder(address,address,uint256,uint256,address)')\n        .substr(0, 10)}${zero(from.address.replace('0x', ''), 64)}${zero(to.address.replace('0x', ''), 64)}${zero(from.price, 64)}${zero(from.amount, 64)}${agent ? zero('0', 64) : zero(agent.replace('0x', ''), 64)}`;\n\n    return getGasPrice()\n        .then((g) => {\n            gasPrice = Number(g) >= Number(minGasPrice) ? g : minGasPrice;\n            return getGasLimit(`0x${userAddress}`, xpaExchange, '0x0', data, 50);\n        })\n        .then((res) => {\n            return {\n                gasLimit: res,\n                key,\n                userAddress,\n                data,\n                gasPrice\n            };\n        })\n        .catch((err) => {\n            console.log(err);\n        });\n}\n\nexport function cancelOrder(tx) {\n    let nonce;\n    let _receipt;\n\n    return getNonce(tx.userAddress).then((n) => {\n        nonce = n;\n        return sendRawTransaction(nonce, tx.gasPrice, tx.gasLimit, xpaExchange, tx.key, tx.data, '0x0');\n    })\n        .then((receipt) => {\n            _receipt = receipt;\n            checkReceipt(receipt);\n        })\n        .then(() => {\n            return _receipt;\n        })\n        .catch(false);\n}\n\nexport function cancelStream(tx) {\n    return (`iban:${eciban.toIBAN(xpaExchange)}?data=${tx.data}`);\n}\n\nexport function showMeMoney(testAddress, userAddress, key) {\n    let nonce;\n    let gasPrice = minGasPrice;\n    let data;\n    return getNonce(testAddress).then((n) => {\n        nonce = n;\n        return getGasPrice();\n    })\n        .then((g) => {\n            gasPrice = Number(g) >= Number(minGasPrice) ? g : minGasPrice;\n            data = `${sha3('showMeTheMoney(address)').substr(0, 10)}${zero(userAddress.replace('0x', ''), 64)}`;\n            return getGasLimit(`0x${testAddress}`, richAddress, '0x0', data, 5);\n        })\n        .then((res) => {\n            return sendRawTransaction(nonce, gasPrice, res, richAddress, key, data, '0x0');\n        });\n}\n\n// export async function getAssets()\n// {\n//     const result = await web3.eth.call({\n//         to: XPAAsset,\n//         data: `0x66acdd34${zero('0', 64)}`\n//     });\n//     console.log('all assets: ', result);\n//     return result;\n// }\n\nexport async function getMortgageRate(userAddress) {\n    return new Promise((resolve, reject) => {\n        setWeb3Provider();\n        web3.eth.call({\n            to: XPAAsset,\n            data: `${sha3('getMortgageRate(address)').substr(0, 10)}${zero(userAddress.replace('0x', ''), 64)}`,\n        }, (error, result) => {\n            if (error) {\n                reject(reject)\n            } else {\n                resolve(subHex(result));\n            }\n        });\n    })\n}\n\nexport async function getHighestMortgageRate() {\n    setWeb3Provider();\n    return new Promise((resolve, reject) => {\n        web3.eth.call({\n            to: XPAAsset,\n            data: `${sha3('getHighestMortgageRate()').substr(0, 10)}`,\n        }, (error, result) => {\n            if (error) {\n                reject(error);\n            } else {\n                resolve(result)\n            }\n        });\n    })\n}\n\nexport async function getUsableXPA(userAddress) {\n    setWeb3Provider();\n    return new Promise((resolve, reject) => {\n        web3.eth.call({\n            to: XPAAsset,\n            data: `${sha3('getUsableXPA(address)').substr(0, 10)}${zero(userAddress.replace('0x', ''), 64)}`\n        }, (error, result) => {\n            if (error) {\n                reject(error);\n            } else {\n                resolve(subHex(result));\n            }\n        });\n    })\n}\n\nexport async function getClosingLine() {\n    setWeb3Provider();\n    return new Promise((resolve, reject) => {\n        web3.eth.call({\n            to: XPAAsset,\n            data: `${sha3('getClosingLine()').substr(0, 10)}`\n        }, (error, result) => {\n            if (error) {\n                reject(error);\n            } else {\n                resolve(result);\n            }\n        });\n    })\n}\n\nexport function getMortgagePrice() {\n    const promises = [];\n    const result = {};\n    setWeb3Provider();\n\n    const call = (key) => {\n        return new Promise((resolve, rejex) => {\n            return web3.eth.call({\n                to: XPAAsset,\n                data: `${Web3.utils.sha3('getPrice(address)').substr(0, 10)}${zero(cash[key].replace('0x', ''), 64)}`\n            }, 'latest', (error, result) => {\n                if (error) {\n                    reject(error);\n                } else {\n                    resolve(result)\n                }\n            });\n        })\n\n    };\n\n    Object.keys(cash).map((key) => {\n        if (key === 'XPA') {\n            return null;\n        }\n        else {\n            result[key] = '';\n            return promises.push(call(key));\n        }\n    });\n\n    return Promise.all(promises).then((res) => {\n        Object.keys(result).forEach((d, i) => {\n            result[d] = subHex(res[i]);\n        });\n\n        return result;\n    });\n}\n\nexport async function getEquvialentAmount(userAddress) {\n    setWeb3Provider();\n    return new Promise((resolve, reject) => {\n        web3.eth.call({\n            to: XPAAsset,\n            data: `0x6790aee8${zero(userAddress.replace('0x', ''), 64)}`\n        }, (error, result) => {\n            if (error) {\n                reject(error)\n            } else {\n                resolve(subHex(result));\n            }\n        });\n    })\n}\n\nexport function getAmount(userAddress, type) {\n    let method;\n    const promises = [];\n    const result = {};\n    setWeb3Provider();\n\n    if (type === 'usable') {\n        method = 'getUsableAmount';\n    }\n    else if (type === 'loan') {\n        method = 'getLoanAmount';\n    }\n    else {\n        method = 'getRemainingAmount';\n    }\n\n    const call = (key) => {\n        return new Promise((resolve, reject) => {\n            web3.eth.call({\n                to: XPAAsset,\n                data: `${sha3(`${method}(address,address)`).substr(0, 10)}${zero(userAddress.replace('0x', ''), 64)}${zero(cash[key].replace('0x', ''), 64)}`\n            }, 'latest', (error, result) => {\n                if (error) {\n                    reject(error);\n                } else {\n                    resolve(result);\n                }\n            });\n        })\n    };\n\n    Object.keys(cash).map((key) => {\n        if (key === 'XPA') {\n            return null;\n        }\n        else {\n            result[key] = '';\n            return promises.push(call(key));\n        }\n    });\n\n    return Promise.all(promises).then((res) => {\n        Object.keys(result).forEach((d, i) => {\n            result[d] = subHex(res[i]);\n        });\n\n        return result;\n    });\n}\n\nasync function withdrawFee() {\n    setWeb3Provider();\n    return new Promise((resolve, reject) => {\n        web3.eth.call({\n            to: XPAAsset,\n            data: `${sha3('withdrawFeeRate()').substr(0, 10)}`\n        }, (error, result) => {\n            if (error) {\n                reject(error);\n            } else {\n                resolve(parseInt(result, 16));\n            }\n        });\n    })\n}\n\nasync function offsetFee() {\n    setWeb3Provider();\n\n    return new Promise((resolve, reject) => {\n        web3.eth.call({\n            to: XPAAsset,\n            data: `${sha3('offsetFeeRate()').substr(0, 10)}`\n        }, (error, result) => {\n            if (error) {\n                reject(error);\n            } else {\n                resolve(result);\n            }\n        });\n    })\n}\n\nexport function estimateMortgage(from, to, userAddress, key, agent) {\n    let fromDecimal = 18;\n    let nonce;\n    let gasPrice = minGasPrice;\n    let value = '0x0';\n    let data;\n    const gasLimit = '0x13880';\n\n    return getNonce(userAddress).then((n) => {\n        nonce = n;\n        return getGasPrice();\n    }).then((g) => {\n        gasPrice = Number(g) >= Number(minGasPrice) ? g : minGasPrice;\n        console.log('gasPrice', gasPrice);\n        return getAllowance(`0x${userAddress}`, from, XPAAsset);\n    })\n        .then((ap) => {\n            console.log('allowance is', JSON.parse(ap).result);\n            data = `${sha3('mortgage(address)')\n                .substr(0, 10)}${agent ? zero('0', 64) : zero(agent.replace('0x', ''), 64)}`;\n            if (Number(JSON.parse(ap).result) === 0) {\n                return Promise.resolve();\n            }\n            else {\n                const approve = `${sha3('approve(address,uint256)')\n                    .substr(0, 10)}${zero(XPAAsset.replace('0x', ''), 64)}${zero('0', 64)}`;\n                console.log('approve 0');\n                return sendRawTransaction(nonce, gasPrice, approveGasLimit, from.address, key, approve, '0x0').then((res) => {\n                    return checkReceipt(res);\n                })\n                    .then(() => {\n                        return Promise.resolve();\n                    });\n            }\n        })\n        .then(() => {\n            return {\n                nonce,\n                gasPrice,\n                gasLimit,\n                from,\n                to,\n                key,\n                data,\n                value,\n                fromDecimal,\n                userAddress,\n            };\n        })\n        .catch((err) => {\n            console.log(err);\n            return false;\n        });\n}\n\nexport function mortgage(tx) {\n    console.log(tx);\n    const approve = `${sha3('approve(address,uint256)')\n        .substr(0, 10)}${zero(XPAAsset.replace('0x', ''), 64)}${zero(calAmount(tx.from.amount, 18), 64)}`;\n\n    console.log(approve);\n    return sendRawTransaction(tx.nonce, tx.gasPrice, approveGasLimit, tx.from.address, tx.key, approve, '0x0')\n        .then((res) => {\n            return checkReceipt(res);\n        }).then(() => {\n            return getAllowance(`0x${tx.userAddress}`, tx.from, XPAAsset);\n        })\n        .then((allow) => {\n            console.log(allow);\n            tx.nonce = `0x${(parseInt(tx.nonce, 16) + 1).toString(16)}`;\n            return getGasLimit(`0x${tx.userAddress}`, XPAAsset, '0x0', tx.data, 50);\n        })\n        .then((res) => {\n            const limit = res;\n            return sendRawTransaction(tx.nonce, tx.gasPrice, limit, XPAAsset, tx.key, tx.data, '0x0');\n        })\n        .then((res) => {\n            return checkReceipt(res);\n        })\n        .then(() => {\n            console.log('mortgage success');\n            return true;\n        })\n        .catch((err) => {\n            console.log(err);\n            return false;\n        });\n}\n\nexport async function estimateAct(from, userAddress, key, method, agent) {\n    let nonce;\n    let gasPrice = minGasPrice;\n    console.log(from, method);\n    let data;\n    if (from.cash === 'XPA') {\n        data = `${sha3('withdrawXPA(uint256,address)').substr(0, 10)}${zero(calAmount(from.amount, 18), 64)}${agent ? zero('0', 64) : zero(agent.replace('0x', ''), 64)}`;\n    }\n    else {\n        data = `${sha3(`${method === 'withdraw' ? 'withdraw' : 'repayment'}(address,uint256,address)`).substr(0, 10)}${zero(cash[from.cash].replace('0x', ''), 64)}${zero(calAmount(from.amount, 18), 64)}${agent ? zero('0', 64) : zero(agent.replace('0x', ''), 64)}`;\n    }\n    let fee = 0;\n    if (method === 'withdraw') {\n        fee = await withdrawFee();\n    }\n\n    return getNonce(userAddress).then((n) => {\n        nonce = n;\n        return getGasPrice();\n    })\n        .then((g) => {\n            gasPrice = Number(g) >= Number(minGasPrice) ? g : minGasPrice;\n            return getGasLimit(`0x${userAddress}`, XPAAsset, '0x0', data, 50);\n        })\n        .then((num) => {\n            const gasLimit = num;\n\n            return {\n                nonce,\n                gasPrice,\n                gasLimit,\n                from,\n                key,\n                data,\n                userAddress,\n                approve: method === 'withdraw' ? false : true,\n                fee\n            };\n        })\n        .catch((err) => {\n            console.log(err);\n            return false;\n        });\n}\n\nexport function doAct(tx) {\n    let _receipt;\n\n    if (tx.approve) {\n        const approve = `${sha3('approve(address,uint256)').substr(0, 10)}${zero(XPAAsset.replace('0x', ''), 64)}${zero(calAmount(tx.from.amount, 18), 64)}`;\n        return sendRawTransaction(tx.nonce, tx.gasPrice, approveGasLimit, cash[tx.from.cash], tx.key, approve, '0x0')\n            .then((res) => {\n                return checkReceipt(res);\n            }).then(() => {\n                tx.nonce = `0x${(parseInt(tx.nonce, 16) + 1).toString(16)}`;\n                return getGasLimit(`0x${tx.userAddress}`, XPAAsset, '0x0', tx.data, 50);\n            })\n            .then((res) => {\n                const limit = res;\n                return sendRawTransaction(tx.nonce, tx.gasPrice, limit, XPAAsset, tx.key, tx.data, '0x0');\n            })\n            .then((receipt) => {\n                _receipt = receipt;\n                return checkReceipt(receipt);\n            })\n            .then(() => {\n                return _receipt;\n            })\n            .catch((err) => {\n                console.log(err);\n                return false;\n            });\n    }\n    else {\n        return sendRawTransaction(tx.nonce, tx.gasPrice, tx.gasLimit, XPAAsset, tx.key, tx.data, '0x0')\n            .then((receipt) => {\n                _receipt = receipt;\n                return checkReceipt(receipt);\n            })\n            .then(() => {\n                return _receipt;\n            })\n            .catch((err) => {\n                console.log(err);\n                return false;\n            });\n    }\n}\n\nexport async function estimateOffset(userAddress, key, type) {\n    let nonce;\n    let gasPrice = minGasPrice;\n    const contract = XPAAsset;\n    const data = `${sha3('offset(address,address)').substr(0, 10)}${zero(userAddress.replace('0x', ''), 64)}${zero(cash[type].replace('0x', ''), 64)}`;\n    const fee = await offsetFee();\n    return getNonce(userAddress).then((n) => {\n        nonce = n;\n        return getGasPrice();\n    })\n        .then((g) => {\n            gasPrice = Number(g) >= Number(minGasPrice) ? g : minGasPrice;\n            return getGasLimit(`0x${userAddress}`, contract, '0x0', data, 50);\n        })\n        .then((num) => {\n            const gasLimit = num;\n            return {\n                nonce,\n                gasPrice,\n                gasLimit,\n                data,\n                userAddress,\n                contract,\n                key,\n                fee\n            };\n        })\n        .catch((err) => {\n            console.log(err);\n            return false;\n        });\n}\n\nexport function doOffset(tx) {\n    return sendRawTransaction(tx.nonce, tx.gasPrice, tx.gasLimit, tx.contract, tx.key, tx.data, '0x0')\n        .then((res) => {\n            return checkReceipt(res);\n        })\n        .then(() => {\n            return true;\n        })\n        .catch((err) => {\n            console.log(err);\n            return false;\n        });\n}\n\nexport const mailTo = (body) => {\n    const hash = echashcash('/mailto/support@xpa.exchange');\n    return ecRequest(body, 'https://betarpc.xpa.exchange/mailto/support@xpa.exchange', hash)\n        .then(() => {\n            return true;\n        })\n        .catch(() => {\n            return false;\n        });\n};\n\n","export const SET_NEWS = 'SET_NEWS';\n","import React from 'react';\nimport { translate } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport { bnHex, tenFill, formatNumber } from '../../utils/format';\nimport './tokenList.scss';\n\nclass TokenList extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            filter: '',\n            // eslint-disable-next-line no-undef\n            base: { token: 'ETH', address: finalConfig.ethAddress, decimal: 18 },\n            favorite: JSON.parse(localStorage.getItem('favorite')) || []\n        };\n\n        this.favoriteToggle = this.favoriteToggle.bind(this);\n        this.filter = this.filter.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    changeToken(t)\n    {\n        let basic = {};\n\n        if (t === 'FAV')\n        {\n            basic = { token: 'FAV', address: '' };\n        }\n        else\n        {\n            basic = this.props.tokenList.find(d => d.token === t && d.basic === true);\n            // console.log(t, basic);\n        }\n        this.setState(update(this.state, {\n            base: { $set: basic },\n        }));\n    }\n\n    favoriteToggle(item, e)\n    {\n        e.stopPropagation();\n\n        // 沒存\n        if (this.state.favorite.indexOf(item.id) === -1)\n        {\n            this.setState(update(this.state, {\n                favorite: { $push: [item.id] }\n            }), () => {\n                localStorage.setItem('favorite', JSON.stringify(this.state.favorite));\n            });\n        }\n        else // 有存, 取消\n        {\n            let addressId = this.state.favorite.filter((val) => {\n                return val !== item.id;\n            });\n\n            this.setState(update(this.state, {\n                favorite: { $set: addressId }\n            }), () => {\n                localStorage.setItem('favorite', JSON.stringify(this.state.favorite));\n            });\n        }\n    }\n\n    filter(e)\n    {\n        this.setState(update(this.state, {\n            filter: { $set: e.target.value }\n        }));\n    }\n\n    handleClick()\n    {\n        if (this.state.filter !== '')\n        {\n            this.setState(update(this.state, {\n                filter: { $set: '' }\n            }));\n        }\n    }\n\n    renderMenu()\n    {\n        const { tradeList, select, tokenList, t } = this.props;\n        const { base, filter, favorite } = this.state;\n\n        let listArray = [];\n        let list;\n        let searchStyle = '';\n\n        if (!tradeList[base.token] && base.token !== 'FAV')\n        {\n            return null;\n        }\n\n        // favoriteData\n        let favoriteData = [];\n        if (favorite.length > 0)\n        {\n            for (let key in tradeList)\n            {\n                for (let val of tradeList[key])\n                {\n                    if (favorite.indexOf(val.id) !== -1)\n                    {\n                        favoriteData.push(val);\n                    }\n                }\n            }\n        }\n\n        // filter\n        if (filter !== '')\n        {\n            if (base.token !== 'FAV')\n            {\n                listArray = tradeList[base.token].filter(l => l.token.toLowerCase().indexOf(filter.toLowerCase()) > -1);\n            }\n            else\n            {\n                // 我的最愛\n                listArray = favoriteData.filter(l => l.token.toLowerCase().indexOf(filter.toLowerCase()) > -1);\n            }\n        }\n        else\n        {\n            listArray = (base.token !== 'FAV') ? tradeList[base.token] : favoriteData;\n        }\n\n        if (listArray.length > 0)\n        {\n            list = listArray.map((l, i) =>\n            {\n                const isFavorite = (this.state.favorite.indexOf(l.id) !== -1) ? 'checked' : '';\n                const fav = tokenList.find(d => d.token === l.base && d.basic === true);\n                // if(!fa)\n                // {\n                //     localStorage.clear\n                // }\n                const from = tokenList.find(d => d.address === l.address) || { decimal: 18 };\n                const to = tokenList.find(d => d.address === base.address) || { decimal: 18 };\n                const baseAddress = (base.token === 'FAV' && fav) ? fav.address : base.address;\n                return (\n                    <li key={i + l.id} onClick={() => { select({ type: l.base, baseAddress, id: l.id, decimal: 18 }); }}>\n                        <div>\n                            <i onClick={(e) => { this.favoriteToggle(l, e); }} className={`fa fa-star ${isFavorite}`} aria-hidden=\"true\" />\n                        </div>\n                        <div className=\"desc\"><span>{l.token}</span>/{l.base}</div>\n                        <div className=\"price\">{formatNumber(8, tenFill(bnHex(l.latest).toString(), from.decimal - 18 - to.decimal))}</div>\n                        <div className={String(l.growth).indexOf('-') > -1 ? 'ratio red' : 'ratio green'}>{l.growth}%</div>\n                    </li>\n                );\n            });\n        }\n        else\n        {\n            // list = <div className=\"no-result\">{t('header.noResult')}</div>;\n            list = null;\n            if (filter !== '')\n            {\n                searchStyle = 'no-result';\n            }\n        }\n\n        const type = Object.keys(tradeList).map((k) =>\n        {\n            return (\n                <div key={k} onClick={() => this.changeToken(`${k}`)} className={this.state.base.token === `${k}` ? 'active' : ''}>{k}</div>\n            );\n        });\n\n        return (\n            <div>\n                <div className=\"search\">\n                    <input\n                        type=\"text\"\n                        className={searchStyle === 'no-result' ? searchStyle : ''}\n                        onChange={this.filter}\n                        value={filter}\n                    />\n                    <img src={`/img/icon/${filter === '' ? 'ic-search.svg' : 'ic-del.svg'}`} alt=\"search\" onClick={this.handleClick} />\n                </div>\n                <div className=\"option\">\n                    <div onClick={() => this.changeToken('FAV')} className={base.token === 'FAV' ? 'active' : ''}>{this.props.t('table.star')}</div>\n                    {type}\n                </div>\n                <li className=\"list-title\">\n                    <div />\n                    <div />\n                    <div>{t('header.lastPrice')}</div>\n                    <div>{t('header.change')}</div>\n                </li>\n                <ul className=\"list\">\n                    {list}\n                </ul>\n            </div>\n        );\n    }\n\n    render()\n    {\n        return (\n            <div className=\"c_tokenList\">\n                {this.renderMenu()}\n            </div>\n        );\n    }\n}\n\nTokenList.defaultProps = {\n    t: () => {},\n};\n\nTokenList.propTypes = {\n    tradeList: PropTypes.object.isRequired,\n    select: PropTypes.func.isRequired,\n    t: PropTypes.func,\n    tokenList: PropTypes.array.isRequired,\n};\n\nexport default translate()(TokenList);\n","if (process.env.NODE_ENV === 'production')\n{\n    module.exports = require('./configureStore.prod');\n}\nelse\n{\n    module.exports = require('./configureStore.dev');\n}\n","/* eslint-disable no-undef */\nimport React from 'react';\nimport update from 'immutability-helper';\nimport { translate } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router';\n\n// import Language from '../language/language';\nimport { language } from '../../constants/languageType';\nimport i18n from '../../i18n/i18n';\nimport { formatNumber, bnHex, tenFill } from '../../utils/format';\nimport TokenList from '../tokenList/tokenList';\n\nimport './header.scss';\n\n@withRouter\nclass Header extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            lang: localStorage.getItem('i18nextLng'),\n            menu: ['exchange', 'mortgage', 'currency'],\n            showMenu: false,\n            showList: false,\n            showContract: false\n        };\n        this.changeHeader = this.changeHeader.bind(this);\n        this.renderMenu = this.renderMenu.bind(this);\n        this.renderLanguage = this.renderLanguage.bind(this);\n        this.renderSummary = this.renderSummary.bind(this);\n        this.renderContract = this.renderContract.bind(this);\n        this.select = this.select.bind(this);\n        this.closeList = this.closeList.bind(this);\n    }\n\n    // addToken()\n    // {\n    //     if (!this.state.add)\n    //     {\n    //         this.setState(update(this.state, {\n    //             add: { $set: true }\n    //         }));\n    //     }\n    //     else\n    //     {\n    //         if (this.state.new_token === '') return console.log('not add');\n    //         this.props.addTokenIO(this.state.new_token);\n    //         Io.emit('newToken', { address: this.state.new_token });\n    //         this.setState(update(this.state, {\n    //             add: { $set: false },\n    //             modal: { $set: true },\n    //         }));\n    //         this.address.value = '';\n\n    //         setTimeout(() =>\n    //         {\n    //             this.setState(update(this.state, {\n    //                 modal: { $set: false },\n    //                 new_token: { $set: '' }\n    //             }));\n    //         }, 3000);\n    //     }\n    // }\n\n    // enterToken(e)\n    // {\n    //     this.setState(update(this.state, {\n    //         new_token: { $set: e.target.value }\n    //     }));\n    // }\n\n    componentDidMount()\n    {\n        if (this.props.dash)\n        {\n            window.addEventListener('click', this.closeList);\n        }\n    }\n\n    shouldComponentUpdate(nextProp, nextState)\n    {\n        if (this.props.dash || this.state.showMenu !== nextState.showMenu || this.state.lang !== nextState.lang)\n        {\n            return true;\n        }\n        else\n        {\n            return false;\n        }\n    }\n\n    componentWillUnmount()\n    {\n        if (this.props.dash)\n        {\n            window.removeEventListener('click', this.closeList);\n        }\n    }\n\n    changeHeader(lan)\n    {\n        const tar = language.find(l => l.type === lan);\n        i18n.changeLanguage(tar.name);\n        this.setState(update(this.state, {\n            lang: { $set: localStorage.getItem('i18nextLng') }\n        }));\n    }\n\n    closeList(e)\n    {\n        if ((this.list && !this.list.contains(e.target)) && !this.desc.contains(e.target))\n        {\n            this.setState(update(this.state, {\n                showList: { $set: false }\n            }));\n        }\n\n        // if (!this.contractBtn.contains(e.target) && !this.contract.contains(e.target))\n        // {\n        //     this.setState(update(this.state, {\n        //         showContract: { $set: false }\n        //     }));\n        // }\n    }\n\n    select(obj)\n    {\n        const { myTransaction, select, actions } = this.props;\n        select(obj);\n        this.setState(update(this.state, {\n            showList: { $set: false }\n        }));\n        actions.userActions.myTransactionChange({\n            price: '',\n            amount: '',\n            able: false,\n            total: '-',\n            act: myTransaction.act\n        });\n    }\n\n    renderContract()\n    {\n        const { t } = this.props;\n\n        return (\n            <div\n                className=\"contract\"\n                ref={(el) => { this.contractBtn = el; }}\n                onMouseEnter={() => { this.setState(update(this.state, { showContract: { $set: true } })); }}\n                onMouseLeave={() => { this.setState(update(this.state, { showContract: { $set: false } })); }}\n            >\n                <i className=\"fa fa-file-text-o\" aria-hidden=\"true\" />\n                <p>{t('header.contract')}</p>\n                <i className=\"fa fa-chevron-down\" aria-hidden=\"true\" />\n                <div className={this.state.showContract ? 'open' : ''} ref={(el) => { this.contract = el; }}>\n                    <div>\n                        <span>Etherscan {t('header.contract')}</span>\n                    </div>\n                    <div>\n                        <a className=\"link\" target=\"_blank\" href=\"https://etherscan.io/address/0x8ea74569c1b9bbb13780114b6b5e93396910070a\">\n                            <div>{finalConfig.xpaExchange}</div>\n                            <div>— the current smart contart</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    renderLanguage()\n    {\n        return language.map((item) =>\n        {\n            return (\n                <div key={item.name} className={this.state.lang === item.name ? 'active' : ''} onClick={() => { this.changeHeader(item.type); }}>\n                    <a>{item.type}</a>\n                    {this.state.lang === item.name ? <i className=\"fa fa-check\" aria-hidden=\"true\" /> : null}\n                </div>\n            );\n        });\n    }\n\n    renderList()\n    {\n        const { tradeList, actions, tokenList } = this.props;\n        return (\n            <div className={this.state.showList ? 'token show' : 'token'} ref={(el) => { this.list = el; }}>\n                <TokenList\n                    tradeList={tradeList}\n                    select={this.select}\n                    actions={actions}\n                    tokenList={tokenList}\n                />\n            </div>\n        );\n    }\n\n    renderMenu()\n    {\n        const { t } = this.props;\n        return this.state.menu.map((item) =>\n        {\n            return (\n                <div key={item} className={this.props.match.path.replace('/', '') === item ? 'active' : ''}>\n                    <Link to={item}>\n                        {t(`header.${item}`)}\n                    </Link>\n                </div>\n            );\n        });\n    }\n\n    renderSummary()\n    {\n        const { from, to, tradeList, t } = this.props;\n        if (Object.keys(tradeList) < 1) return null;\n        const summary = tradeList[to.token] ? tradeList[to.token].find(d => d.address === from.address) : {\n            latest: 0,\n            growth: 0,\n            max: 0,\n            min: 0,\n            amount: 0\n        };\n\n        return (\n            <div className=\"summary\">\n                {this.renderList()}\n                <div className=\"desc\" ref={(el) => { this.desc = el; }} onClick={() => { this.setState(update(this.state, { showList: { $set: !this.state.showList }, showMenu: { $set: false } })); }}>\n                    <div>\n                        <span>{from.token}/{to.token}</span>\n                        <span>{t('header.chooseToken')}</span>\n                    </div>\n                    <i className=\"fa fa-chevron-down\" aria-hidden=\"true\" />\n                </div>\n                <div className=\"rate\">\n                    <span>\n                        {formatNumber(8, tenFill(bnHex(summary.latest).toString(), from.decimal - 18 - to.decimal))}\n                    </span>\n                    <span className={summary.growth >= 0 ? 'up' : 'down'}>\n                        {formatNumber(4, summary.growth)}%\n                    </span>\n                </div>\n                <div className=\"infor\">\n                    <div>\n                        <p>\n                            {t('header.24hrHigh')}\n                        </p>\n                        <span>\n                            {formatNumber(8, tenFill(bnHex(summary.max).toString(), from.decimal - 18 - to.decimal)) || 0}\n                        </span>\n                    </div>\n                    <div>\n                        <p>\n                            {t('header.24hrLow')}\n                        </p>\n                        <span>\n                            {formatNumber(8, tenFill(bnHex(summary.min).toString(), from.decimal - 18 - to.decimal)) || 0}\n                        </span>\n                    </div>\n                    <div>\n                        <p>\n                            {t('header.24hrVolume')}\n                        </p>\n                        <span>\n                            {formatNumber(8, tenFill(bnHex(summary.amount).toString(), -from.decimal))} {from.token}\n                        </span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    render()\n    {\n        const { lang } = this.state;\n        const { t } = this.props;\n\n        const production = finalConfig.production;\n\n        const guide = () =>\n        {\n            switch (lang)\n            {\n                case 'zh-cn':\n                    return 'https://www.weibo.com/ttarticle/p/show?id=2309404226836979686902';\n                case 'zh-tw':\n                    return 'https://medium.com/@xpa_76300/xpa-exchange-%E6%96%B0%E6%89%8B%E4%B8%8A%E8%B7%AF-e85247bae3b';\n                default:\n                    return 'https://medium.com/tideisun-blog/xpa-exchange-a-gif-guide-to-making-a-trade-4eda6f7c3c76';\n            }\n        };\n\n        return (\n            <header className=\"c_header\">\n                <div className={this.state.showList || this.state.showContract ? 'header-desktop block' : 'header-desktop'}>\n                    {!production ? <img className=\"beta\" src=\"/img/Beta-Ribbon.png\" alt=\"beta\" /> : ''}\n                    <h1>\n                        <Link to=\"/\">\n                            <div className=\"logo\"><img src=\"/img/logo_xpaex.png\" alt=\"xpa\" /></div>\n                            XPA<span className=\"small-title\">Exchange</span>\n                        </Link>\n                        {/* <span className=\"chain\">Contract: {finalConfig.xpaExchange}</span> */}\n                    </h1>\n                    {/* <div className=\"controls\">\n                        <a\n                            href={guide()}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                            <i className=\"fa fa-bookmark-o\" aria-hidden=\"true\" style={{ fontSize: '16px', paddingBottom: '3px' }} />\n                            <span>{t('header.guide')}</span>\n                        </a>\n                    </div>\n\n                    {!production ?\n                        <div className=\"controls\">\n                            <Link to=\"mortgage\">\n                                <i className=\"fa fa-university\" />\n                                <span>{t('header.mortgage')}</span>\n                            </Link>\n                        </div> : ''}\n                    <Language changeHeader={this.changeHeader} /> */}\n                    {this.props.dash ? this.renderSummary() : null }\n                    <div className=\"empty\" />\n                    {this.props.dash ? this.renderContract() : null }\n                    <div className=\"menu\" onClick={() => { this.setState(update(this.state, { showMenu: { $set: true }, showList: { $set: false } })); }}>\n                        <span />\n                        <span />\n                        <span />\n                    </div>\n                    <div className={this.state.showMenu ? 'cover show' : 'cover'} onClick={() => { this.setState(update(this.state, { showMenu: { $set: false } })); }} />\n                    <div className={this.state.showMenu ? 'control show' : 'control'}>\n                        <div className=\"group\">\n                            {this.renderMenu()}\n                        </div>\n                        <div className=\"group\">\n                            {this.renderLanguage()}\n                        </div>\n                        <div>\n                            <div>\n                                <a href={guide()} target=\"_blank\">{t('header.help')}</a>\n                            </div>\n                        </div>\n                        <div className=\"version\">\n                            <div>\n                                <a>v1.5.2</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </header>\n        );\n    }\n}\n\nHeader.defaultProps = {\n    t: () => {},\n    match: {},\n    from: {},\n    to: {},\n    dash: false,\n    tradeList: {},\n    tokenList: [],\n    actions: {},\n    select: () => {},\n    myTransaction: {}\n};\n\nHeader.propTypes = {\n    t: PropTypes.func,\n    match: PropTypes.object,\n    from: PropTypes.object,\n    to: PropTypes.object,\n    dash: PropTypes.bool,\n    tradeList: PropTypes.object,\n    tokenList: PropTypes.array,\n    actions: PropTypes.object,\n    select: PropTypes.func,\n    myTransaction: PropTypes.object,\n};\n\nexport default translate()(Header);\n","\n// limit number length smaller then l\nimport Web3 from 'web3';\n\nconst BN = Web3.utils.BN;\n\nfunction accMul(arg1, arg2)\n{\n    let m = 0;\n    const s1 = arg1.toString();\n    const s2 = arg2.toString();\n    try\n    {\n        m += s1.split('.')[1].length;\n    }\n    catch (e)\n    {}\n    try\n    {\n        m += s2.split('.')[1].length;\n    }\n    catch (e)\n    {}\n\n    return (Number(s1.replace('.', '')) * Number(s2.replace('.', ''))) / (10 ** m);\n}\n\nexport function formatNumber(l, num, max)\n{\n    const float = (`${num}`).split('.')[1];\n    const int = (`${num}`).split('.')[0];\n    const total = `${num}`.length - 1;\n    const maxFloatLen = max || 9;\n    if (!num) return num;\n    if (typeof num === 'string') num = Number(num);\n    try\n    {\n        if (total < l && (l - int.length) >= 0)\n        {\n            // const de = l - int.length;\n            const de = l;\n            return parseFloat((Math.floor(accMul(num, (10 ** de))) / (10 ** de)).toFixed(de));\n        }\n        else if (total < l && (l - total >= 0))\n        {\n            // const de = l - total;\n            const de = l;\n            return parseFloat((Math.floor(accMul(num, (10 ** de))) / (10 ** de)).toFixed(de));\n        }\n        else\n        {\n            if (total > l && !float)\n            {\n                return num.toFixed(0);\n            }\n            const de = l - int.length > 0 ? l - int.length : 0;\n            if (float && float.length >= maxFloatLen && float.length > l)\n            {\n                return parseFloat(num.toFixed(de));\n            }\n            return parseFloat((Math.floor(accMul(num, (10 ** de))) / (10 ** de)).toFixed(de));\n        }\n    }\n    catch (err)\n    {\n        console.warn(err);\n        return num;\n    }\n\n    // if (!num) return num;\n    // try\n    // {\n    //     return parseFloat((Math.floor(accMul(num, (10 ** l))) / (10 ** l)).toFixed(l));\n    // }\n    // catch (err)\n    // {\n    //     // console.warn(err);\n    //     return num;\n    // }\n}\n\nexport function formatTime(timestamp, type)\n{\n    const date = new Date(timestamp);\n    const d = [\n        date.getFullYear(),\n        date.getMonth() + 1,\n        date.getDate(),\n        date.getHours(),\n        date.getMinutes(),\n        date.getSeconds(),\n    ];\n    if (String(d[4]).length < 2)\n    {\n        d[4] = `0${d[4]}`;\n    }\n    if (String(d[5]).length < 2)\n    {\n        d[5] = `0${d[5]}`;\n    }\n\n    switch (type)\n    {\n        case 'time':\n            return `${d[3]}:${d[4]}:${d[5]}`;\n        case 'date':\n            return `${d[1]}-${d[2]} ${d[3]}:${d[4]}:${d[5]}`;\n        default:\n            return `${d[0]}-${d[1]}-${d[2]} ${d[3]}:${d[4]}:${d[5]}`;\n    }\n}\n\nconst isFloat = (n) =>\n{\n    return Number(n) === n && n % 1 !== 0;\n};\n\nexport function times(num1, num2)\n{\n    let dot1 = String(num1).split('.')[1];\n    let dot2 = String(num2).split('.')[1];\n    const Num1 = Number(num1);\n    const Num2 = Number(num2);\n\n    if (dot1)\n    {\n        dot1 = dot1.length <= 6 ? 6 : 10;\n    }\n    else\n    {\n        dot1 = 0;\n    }\n\n    if (dot2)\n    {\n        dot2 = dot2.length <= 6 ? 6 : 10;\n    }\n    else\n    {\n        dot2 = 0;\n    }\n\n    const fixedFloor = (num) => {\n        return parseFloat(num.toFixed(9));\n    };\n\n    if (isFloat(Num1) && isFloat(Num2))\n    {\n        return fixedFloor(((Num1 * (10 ** dot1)) * (Num2 * (10 ** dot2))) / ((10 ** dot1) * (10 ** dot2)));\n    }\n    else if (!isFloat(Num1) && isFloat(Num2))\n    {\n        return fixedFloor((Num1 * (Num2 * (10 ** dot2))) / (10 ** dot2));\n    }\n    else if (isFloat(Num1) && !isFloat(Num2))\n    {\n        return fixedFloor(((Num1 * (10 ** dot1)) * Num2) / (10 ** dot1));\n    }\n    else\n    {\n        return Num1 * Num2;\n    }\n}\n\n// 科學符號轉字串 Scientific notation To String\nexport function scnToStr(x)\n{\n    if (Math.abs(x) < 1.0)\n    {\n        let e = parseInt(x.toString().split('e-')[1], 10);\n        if (e)\n        {\n            x *= (10 ** (e - 1));\n            x = `0.${(new Array(e)).join('0')}${x.toString().substring(2)}`;\n        }\n    }\n    else\n    {\n        let e = parseInt(x.toString().split('+')[1], 10);\n        if (e > 20)\n        {\n            e -= 20;\n            x /= (10 ** e);\n            x += (new Array(15)).join('0');\n        }\n    }\n    return String(x);\n}\n\nexport const subHex = (input) =>\n{\n    let index = 0;\n    if (!input || input.length < 1) return input;\n    let result = input.replace('0x', '');\n    for (let i = 0; i < result.length; i += 1)\n    {\n        if (result[i] === '0')\n        {\n            index = i + 1;\n        }\n        else\n        {\n            break;\n        }\n    }\n\n    result = result.substr(index, result.length);\n    return result ? result : '0';\n};\n\nexport const bnHex = (str) =>\n{\n    if (!str || str === '-') return new BN('0', 16);\n    return new BN(str, 16);\n};\n\nexport const bnTen = (str) =>\n{\n    if (!str || str === '-') return new BN('0', 10);\n    return new BN(str, 10);\n};\n\nexport const tenFill = (n, idx) =>\n{\n    if (typeof n === 'number')\n    {\n        n = n.toString();\n    }\n    const tmpArr = n.split('.');\n    const abs = Math.abs(idx);\n\n    if (tmpArr.length < 2)\n    {\n        tmpArr.push('');\n    }\n\n    const l1 = tmpArr[0].length;\n    const l2 = tmpArr[1].length;\n    if (idx > 0)\n    {\n        tmpArr[0] += tmpArr[1].substr(0, abs);\n        tmpArr[1] = tmpArr[1].substr(abs);\n        if (abs >= l2)\n        {\n            tmpArr[0] += new Array(abs - l2).fill(0).join('');\n        }\n    }\n    else if (idx < 0)\n    {\n        tmpArr[1] = tmpArr[0].substr(idx) + tmpArr[1];\n        tmpArr[0] = tmpArr[0].substr(0, tmpArr[0].length + idx);\n        if (abs >= l1)\n        {\n            tmpArr[1] = new Array(abs - l1).fill(0).join('') + tmpArr[1];\n        }\n    }\n\n    if (tmpArr[0].length === 0)\n    {\n        tmpArr[0] = '0';\n    }\n\n    let index;\n    for (index = tmpArr[1].length; index > 0; index -= 1)\n    {\n        if (tmpArr[1][index - 1] !== '0')\n        {\n            break;\n        }\n    }\n    tmpArr[1] = tmpArr[1].substr(0, index);\n    return tmpArr[1].length > 0 ? tmpArr.join('.') : tmpArr[0];\n};\n\nexport const sellAmount = (fAmount, fFill, fDecimal) =>\n{\n    return tenFill(bnHex(fAmount)\n        .sub(bnHex(fFill))\n        .toString(), -fDecimal);\n};\n\nexport const sellDisplayPrice = (price, fDecimal, tDecimal) =>\n{\n    return tenFill(bnHex(price).toString(), fDecimal - tDecimal - 18);\n};\n\nexport const buyAmount = (fAmount, fill, price, fDecimal) =>\n{\n    return tenFill(bnHex(fAmount)\n        .sub(bnHex(fill))\n        .mul(bnHex(price))\n        .toString(), -fDecimal - 18);\n};\n\nexport const buyDisplayPrice = (price, fDecimal, tDecimal) =>\n{\n    return tenFill(bnTen(tenFill(1, 36))\n        .div(bnHex(price))\n        .toString(), fDecimal - tDecimal - 18);\n};\n\n/**\n * Get exchange rate from price in contract transaction record\n * @param  {String} price  The price in transaction, should be hex and should be 10 to power of 18\n * @returns {String}          \n*/\nexport const getRateByPrice = (price) => {\n    return bnTen(tenFill(1, 36)).div(bnHex(price)).toString(16)\n}","import * as types from '../constants/actionTypesUser';\n\nexport function userGet$(data)\n{\n    return {\n        type: types.USER_GET$,\n        data\n    };\n}\n\nexport function userUpdate(data)\n{\n    return {\n        type: types.USER_UPDATE,\n        data\n    };\n}\n\nexport function myBooksGet$(data)\n{\n    return {\n        type: types.MYBOOKS_GET$,\n        data\n    };\n}\n\nexport function myBooksUpdate(data)\n{\n    return {\n        type: types.MYBOOKS_UPDATE,\n        data\n    };\n}\n\nexport function myBooksAdd(data)\n{\n    return {\n        type: types.MYBOOKS_ADD,\n        data\n    };\n}\n\nexport function myBooksCancel(data)\n{\n    return {\n        type: types.MYBOOKS_CANCEL,\n        data\n    };\n}\n\nexport function myBooksChange(data)\n{\n    return {\n        type: types.MYBOOKS_CHANGE,\n        data\n    };\n}\n\nexport function myTransactionChange(data)\n{\n    return {\n        type: types.MYTRANSACTION_CHANGE,\n        data\n    };\n}\n\nexport function myTransactionUpdate(data)\n{\n    return {\n        type: types.MYTRANSACTION_UPDATE,\n        data\n    };\n}\n\nexport function accountGet$()\n{\n    return {\n        type: types.ACCOUNT_GET$,\n    };\n}\n\nexport function accountUpdate(data)\n{\n    return {\n        type: types.ACCOUNT_UPDATE,\n        data\n    };\n}\n\nexport function historyGet$(data)\n{\n    return {\n        type: types.HISTORY_GET$,\n        data\n    };\n}\n\nexport function historyUpdate(data)\n{\n    return {\n        type: types.HISTORY_UPDATE,\n        data\n    };\n}\n\n// export function getBalance(index, value)\n// {\n//     const data = { index, value };\n//     return {\n//         type: types.GET_BALANCE,\n//         data\n//     };\n// }\n\nexport function changeKeep(data)\n{\n    if (data)\n    {\n        return {\n            type: types.KEEP,\n            data\n        };\n    }\n    else\n    {\n        return {\n            type: types.DOWNLOADED,\n            data\n        };\n    }\n}\n","export const CHANGE_MORTGAGE_RATE = 'CHANGE_MORTGAGE_RATE';\nexport const CHANGE_EQUIVALENT_AMOUNT = 'CHANGE_EQUIVALENT_AMOUNT';\nexport const CHANGE_USABLE = 'CHANGE_USABLE';\nexport const CHANGE_LOAN = 'CHANGE_LOAN';\nexport const CHANGE_REMAINING = 'CHANGE_REMAINING';\nexport const CHANGE_CLOSING_LINE = 'CHANGE_CLOSING_LINE';\nexport const MAPPING_ASSETS = 'MAPPING_ASSETS';\nexport const CHANGE_USABLE_XPA = 'CHANGE_USABLE_XPA';\nexport const MORTGAGE_LOGOUT = 'MORTGAGE_LOGOUT';\nexport const CHANGE_MORTGAGE_PRICE = 'CHANGE_MORTGAGE_PRICE';\n\n","/* eslint-disable no-undef */\nimport update from 'immutability-helper';\nimport * as types from '../constants/actionTypesBook';\n\nconst initialState = {\n    from: { token: 'XPA', address: finalConfig.XPA, decimal: 18 },\n    to: { token: 'ETH', address: finalConfig.ethAddress, decimal: 18 },\n    buy: [],\n    sell: [],\n    tokenList: [],\n    summary: {},\n    tradeList: {},\n    transaction: [],\n    kLine: [],\n    timeunit: 60 * 60 * 1000\n};\n\nexport default function book(state = initialState, action = {})\n{\n    switch (action.type)\n    {\n        case types.FROM_CHANGE:\n            return update(state, {\n                from: { $set: action.data }\n            });\n        case types.TO_CHANGE:\n            return update(state, {\n                to: { $set: action.data }\n            });\n        case types.BOOK_UPDATE:\n            return update(state, {\n                sell: { $set: action.data.sell },\n                buy: { $set: action.data.buy }\n            });\n        case types.TOKENLIST_GET:\n            return update(state, {\n                tokenList: { $set: action.data }\n            });\n        case types.SUMMARY_UPDATE:\n            return update(state, {\n                summary: { $set: action.data }\n            });\n        case types.TRADELIST_GET:\n            return update(state, {\n                tradeList: { $set: action.data }\n            });\n        // case types.ADD_TRADELIST:\n        //     return update(state, {\n        //         tradeList: {\n        //             star: { $set: [action.data] }\n        //         }\n        //     });\n        case types.RECENTTRANSACTION_UPDATE:\n            return update(state, {\n                transaction: { $set: action.data }\n            });\n        case types.KLINE_UPDATE:\n            return update(state, {\n                kLine: { $set: action.data }\n            });\n        case types.TIMEUINT_CHANGE:\n            return update(state, {\n                timeunit: { $set: action.data }\n            });\n        default:\n            return state;\n    }\n}\n","import update from 'immutability-helper';\nimport * as types from '../constants/actionTypesUser';\n\nconst initialState = {\n    user: {},\n    account: [],\n    myBooks: [],\n    myTransaction: {\n        price: '',\n        amount: '',\n        total: '-',\n        able: false,\n        act: 'buy'\n    },\n    keep: false,\n    myHistory: []\n};\n\nexport default function user(state = initialState, action = {})\n{\n    switch (action.type)\n    {\n        case types.USER_UPDATE:\n            return update(state, {\n                user: { $set: action.data }\n            });\n        case types.MYBOOKS_UPDATE:\n            return update(state, {\n                myBooks: { $set: action.data }\n            });\n        case types.MYBOOKS_ADD:\n            return update(state, {\n                myBooks: { $unshift: [action.data] }\n            });\n        case types.MYBOOKS_CANCEL:\n            return update(state, {\n                myBooks: {\n                    [action.data]: {\n                        status: { $set: 'cancel' }\n                    }\n                }\n            });\n        case types.MYBOOKS_CHANGE:\n            return update(state, {\n                myBooks: {\n                    [action.data]: {\n                        cancel: { $set: true }\n                    }\n                }\n            });\n        // case types.GET_BALANCE:\n        //     return update(state, {\n        //         account: {\n        //             [action.data.index]: {\n        //                 usable: { $set: action.data.value },\n        //             }\n        //         }\n        //     });\n        case types.MYTRANSACTION_CHANGE:\n            return update(state, {\n                myTransaction: {\n                    $set: action.data\n                }\n            });\n        case types.MYTRANSACTION_UPDATE:\n            return update(state, {\n                myTransaction: {\n                    [action.data.type]: { $set: action.data.value }\n                }\n            });\n        case types.ACCOUNT_UPDATE:\n            return update(state, {\n                account: { $set: action.data }\n            });\n        case types.KEEP:\n            return update(state, {\n                keep: { $set: true }\n            });\n\n        case types.DOWNLOADED:\n            return update(state, {\n                keep: { $set: false }\n            });\n        case types.HISTORY_UPDATE:\n            return update(state, {\n                myHistory: { $set: action.data }\n            });\n        default:\n            return state;\n    }\n}\n","import update from 'immutability-helper';\nimport * as types from '../constants/actionTypesModal';\n\nconst initialState = {\n    loading: false,\n    message: ''\n};\n\nexport default function modal(state = initialState, action = {})\n{\n    switch (action.type)\n    {\n        case types.UPDATE_LOADING:\n            return update(state, {\n                loading: { $set: action.data }\n            });\n        case types.UPDATE_MESSAGE:\n            return update(state, {\n                message: { $set: action.data }\n            });\n        default:\n            return state;\n    }\n}\n","import update from 'immutability-helper';\nimport * as types from '../constants/actionTypesNews';\n\nconst initialState = [];\n\nexport default function user(state = initialState, action = {})\n{\n    switch (action.type)\n    {\n        case types.SET_NEWS:\n            return update(state, { $set: action.data });\n\n        default:\n            return state;\n    }\n}\n","/* eslint-disable no-undef */\nimport update from 'immutability-helper';\nimport * as types from '../constants/actionTypeMortgage';\n\nconst cash = { ...finalConfig.assetToken };\nObject.keys(cash).forEach((k) =>\n{\n    cash[k] = 0;\n});\n\nconst initialState = {\n    mortgageRate: 0,\n    equivalentAmount: 0,\n    usable: { ...cash },\n    loan: { ...cash },\n    remaining: { ...cash },\n    price: { ...cash },\n    closingLine: 0,\n    usableXPA: 0\n};\n\nexport default function mortgage(state = initialState, action = {})\n{\n    switch (action.type)\n    {\n        case types.CHANGE_MORTGAGE_RATE:\n            return update(state, {\n                mortgageRate: { $set: action.data }\n            });\n        case types.CHANGE_EQUIVALENT_AMOUNT:\n            return update(state, {\n                equivalentAmount: { $set: action.data }\n            });\n        case types.CHANGE_USABLE:\n            return update(state, {\n                usable: { $set: action.data }\n            });\n        case types.CHANGE_LOAN:\n            return update(state, {\n                loan: { $set: action.data }\n            });\n        case types.CHANGE_REMAINING:\n            return update(state, {\n                remaining: { $set: action.data }\n            });\n        // case types.CHANGE_CLOSING_LINE:\n        //     return update(state, {\n        //         closingLine: { $set: action.data }\n        //     });\n        case types.CHANGE_USABLE_XPA:\n            return update(state, {\n                usableXPA: { $set: action.data }\n            });\n        case types.CHANGE_MORTGAGE_PRICE:\n            return update(state, {\n                price: { $set: action.data }\n            });\n        case types.MORTGAGE_LOGOUT:\n            return update(state, {\n                mortgageRate: { $set: '-' },\n                equivalentAmount: { $set: 0 },\n                usable: { $set: cash },\n                loan: { $set: cash },\n                remaining: { $set: cash },\n                closingLine: { $set: 0 },\n                usableXPA: { $set: 0 }\n            });\n        default:\n            return state;\n    }\n}\n\n","import { combineReducers } from 'redux';\nimport book from './book';\nimport user from './user';\nimport modal from './modal';\nimport news from './news';\nimport mortgage from './mortgage';\n\nconst rootReducer = combineReducers({\n    book,\n    user,\n    modal,\n    news,\n    mortgage\n});\n\nexport default rootReducer;\n","\nconst ENDPOINT = 'https://api.etherscan.io/api';\nconst TOPIC_FILLORDER = '0x7df4b7671e89cf44d438b410348aefa7f1fec4753f50d093449fa17b0660051d';\n\nconst apiKey = 'SH6JBSKW5GBSI8NJJD6JY837NIIRSFNZX3';\n\n// TODO:\nconst genesisBlock = 544607;\n\nfunction request(data, Url) {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        const url = Url || serverUrl;\n        const method = 'POST';\n        xhr.open(method, url);\n        xhr.onreadystatechange = () => {\n            if (xhr.readyState === XMLHttpRequest.DONE) {\n                resolve(xhr.response);\n            }\n        };\n        xhr.onerror = () => {\n            reject({\n                status: this.status,\n                statusText: xhr.statusText\n            });\n        };\n\n        xhr.setRequestHeader('Content-Type', 'application/json');\n        xhr.send(JSON.stringify(data));\n    });\n}\n\nclass Etherscan {\n    /**\n     * Get contract logs\n     * @param  {String} contractAddress    The XPA Exchange address\n     * @returns {Promise}          \n    */\n    static getFillOrderLogs(contractAddress) {\n        console.log('xpa', contractAddress);\n        const url = `${ENDPOINT}?module=logs&action=getLogs&fromBlock=${genesisBlock}&toBlock=lastest&address=${contractAddress}&topic0=${TOPIC_FILLORDER}&apiKey=${apiKey}`\n        \n        return new Promise((resolve, reject) => {\n            request({}, url).then((res) => {\n                const { result } = JSON.parse(res);\n                const PARAM_LEN = 64;\n                const ADDRESS_LEN = 40;\n                const order = result.reverse().map((tx) => {\n                    const { data } = tx;\n                    const _data = data.replace('0x', '');\n\n                    const fromToken = '0x' + _data.substr(0, PARAM_LEN).substr(PARAM_LEN - ADDRESS_LEN, ADDRESS_LEN);\n                    const toToken = '0x' + _data.substr(PARAM_LEN * 1, PARAM_LEN).substr(PARAM_LEN - ADDRESS_LEN, ADDRESS_LEN);\n                    const price = _data.substr(PARAM_LEN * 2, PARAM_LEN);\n                    const user = _data.substr(PARAM_LEN  * 3, PARAM_LEN);\n                    const amount = _data.substr(PARAM_LEN * 4, PARAM_LEN);\n\n                    return {\n                        no: tx.transactionHash,\n                        fromAmount: amount,\n                        fromToken,\n                        price,\n                        toToken,\n                        type: 'trade', // or 'take' ?\n                        user,\n                        timestamp: parseInt(tx.timeStamp) * 1000\n                    }\n                })\n                resolve(order);\n            }).catch(e => reject(e))\n        })\n    }\n}\n\nexport default Etherscan","import { ofType } from 'redux-observable';\nimport { timeParse } from 'd3-time-format';\nimport { map, switchMap, mergeMap, catchError, concatMap } from 'rxjs/operators';\nimport { of, from as Rxfrom, merge } from 'rxjs';\nimport * as types from '../constants/actionTypesBook';\nimport {\n    bookUpdate,\n    recentTransactionUpdate,\n    summaryUpdate,\n    kLineGet$,\n    kLineUpdate,\n    tradeListGet\n} from '../actions/book';\nimport { updateLoading } from '../actions/modal';\nimport { myBooksGet$ } from '../actions/user';\nimport {\n    bnHex,\n    sellAmount,\n    buyAmount,\n    sellDisplayPrice,\n    buyDisplayPrice,\n    tenFill,\n    bnTen,\n    getRateByPrice\n} from '../utils/format';\n\nimport OrderbookParser from '../utils/OrderbookParser';\nimport Etherscan from '../utils/Etherscan'\n\nconst getBookEpic = (action$, state$) =>\n{\n    return action$\n        .pipe(\n            ofType(types.BOOK_GET$),\n            switchMap(() =>\n            {\n                const { from, to } = state$.value.book;\n                return Rxfrom(Promise.all([OrderbookParser.getAll(from.address, to.address), OrderbookParser.getAll(to.address, from.address)]));\n            }),\n            concatMap((res) => {\n                const orders = res[0].concat(res[1]);\n                const { from, to, tokenList } = state$.value.book;\n\n                const fromToken = tokenList.find(tk => tk.address === from.address);\n                const toToken = tokenList.find(tk => tk.address === to.address);\n\n                const arrenge = (data) =>\n                {\n                    return data.sort((a, b) => (bnHex(a.price).gt(bnHex(b.price)) ? 1 : -1)) // 依照價格排序\n                        .reduce((prev, curr) =>\n                        {\n                            // 將價格相同的數量合併\n                            if (prev.length <= 0 || prev[prev.length - 1].price !== curr.price)\n                            {\n                                prev.push(curr);\n                            }\n                            else\n                            {\n                                prev[prev.length - 1].fromAmount = bnHex(prev[prev.length - 1].fromAmount).add(bnHex(curr.fromAmount)).toString(16);\n                                prev[prev.length - 1].filled = bnHex(prev[prev.length - 1].filled).add(bnHex(curr.filled)).toString(16);\n                            }\n\n                            return prev;\n                        }, [])\n                        .map((v) =>\n                        {\n                            let book;\n                            if (v.fromToken === from.address && v.toToken === to.address)\n                            {\n                                book = {\n                                    from: fromToken.token,\n                                    to: toToken.token,\n                                    desc: `${fromToken.token}/${toToken.token}`,\n                                    type: 'sell',\n                                    timestamp: v.timestamp,\n                                    price: v.price,\n                                    displayPrice: sellDisplayPrice(v.price, from.decimal, to.decimal),\n                                    amount: sellAmount(v.fromAmount, v.filled, from.decimal)\n                                };\n                            }\n                            else if (v.fromToken === to.address && v.toToken === from.address)\n                            {\n                                book = {\n                                    from: toToken.token,\n                                    to: fromToken.token,\n                                    desc: `${toToken.token}/${fromToken.token}`,\n                                    type: 'buy',\n                                    timestamp: v.timestamp,\n                                    price: v.price,\n                                    displayPrice: buyDisplayPrice(v.price, from.decimal, to.decimal),\n                                    amount: buyAmount(v.fromAmount, v.filled, v.price, from.decimal, to.decimal)\n                                };\n                            }\n                            book.value = Number(book.amount);\n                            book.displayPrice = Number(book.displayPrice);\n                            return book;\n                        })\n                        .filter(v => !!v);\n                };\n\n                let sell = orders.filter(d =>\n                    (d.fromToken === from.address && d.toToken === to.address) &&\n                    d !== undefined &&\n                    bnHex(d.fromAmount).sub(bnHex(d.filled)).gt(bnTen((10 ** (from.decimal - 6)).toString())));\n\n                let buy = orders.filter(d =>\n                    (d.fromToken === to.address && d.toToken === from.address) &&\n                    d !== undefined &&\n                    bnHex(d.fromAmount).sub(bnHex(d.filled)).gt(bnTen((10 ** (from.decimal - 6)).toString())));\n\n                sell = arrenge(sell).filter(d => d.type === 'sell')\n                    .map((d, i, all) =>\n                    {\n                        if (i === 0)\n                        {\n                            return d;\n                        }\n                        else\n                        {\n                            d.value += all[i - 1].value;\n                            return d;\n                        }\n                    });\n                sell.reverse();\n\n                buy = arrenge(buy).filter(d => d.type === 'buy')\n                    .map((d, i, all) =>\n                    {\n                        if (i === 0)\n                        {\n                            return d;\n                        }\n                        else\n                        {\n                            d.value += all[i - 1].value;\n                            return d;\n                        }\n                    });\n                return of({ buy, sell });\n            }),\n            // debounceTime(3000),\n            mergeMap(result => of(bookUpdate(result), updateLoading(false), state$.value.user.user.wallet ? myBooksGet$() : () => {})),\n            catchError((err, obs) => {\n                console.error(err);\n                return merge(\n                    of(updateLoading(false)),\n                    obs\n                );\n            })\n        );\n};\n\nconst getTransactionEpic = (action$, state$) =>\n{\n    return action$\n        .pipe(\n            ofType(types.RECENTTRANSACTION_GET$),\n            switchMap((action) =>\n            {\n                const { from, to, tokenList } = state$.value.book;\n\n                const fromToken = tokenList.find(tk => tk.address === from.address);\n                const toToken = tokenList.find(tk => tk.address === to.address);\n\n                const arr = Object.values(action.data || [])\n                    .map((v) =>\n                    {\n                        let list;\n                        if (v.fromToken === fromToken.address && v.toToken === toToken.address)\n                        {\n                            list = {\n                                timestamp: v.timestamp,\n                                price: v.price,\n                                displayPrice: sellDisplayPrice(v.price, from.decimal, to.decimal),\n                                amount: tenFill(bnHex(v.filled).toString(), -from.decimal),\n                                type: 'sell',\n                            };\n                        }\n                        else if (v.fromToken === toToken.address && v.toToken === fromToken.address)\n                        {\n                            list = {\n                                timestamp: v.timestamp,\n                                price: v.price,\n                                displayPrice: buyDisplayPrice(v.price, from.decimal, to.decimal),\n                                amount: tenFill(bnHex(v.filled)\n                                    .mul(bnHex(v.price))\n                                    .toString(), -(18 + from.decimal)),\n                                type: 'buy'\n                            };\n                        }\n                        return list;\n                    })\n                    .filter(v => !!v)\n                    .sort((a, b) => b.timestamp - a.timestamp);\n\n                return of(arr);\n            }),\n            mergeMap(result =>\n                of(\n                    recentTransactionUpdate(result.filter(v => new Date().getTime() - v.timestamp <= 86400 * 1000 * 30)),\n                    // summaryGet$(result),\n                    kLineGet$(result)\n                )),\n            catchError((err, obs) => obs)\n        );\n};\n\nconst getSummaryEpic = (action$) =>\n{\n    return action$\n        .pipe(\n            ofType(types.SUMMARY_GET$),\n            map((action) =>\n            {\n                const now = new Date().getTime();\n                const final = action.data.filter(d => now - d.timestamp <= 86400 * 1000);\n                return summaryUpdate({\n                    latest: final[final.length - 1].price || 0,\n                    growth: final.length > 1 ? bnHex(final[final.length - 1].price).sub(bnHex(final[0].price)).div(bnHex(final[0].price)) : 0,\n                    max: final.reduce((prev, curr) =>\n                    {\n                        return bnHex(curr.price).gt(bnHex(prev)) ? curr.price : prev;\n                    }, 0),\n                    min: final.length > 0 ? final.reduce((prev, curr) =>\n                    {\n                        if (!prev || bnHex(curr.price).lt(bnHex(prev)))\n                        {\n                            return curr.price;\n                        }\n                        else\n                        {\n                            return prev;\n                        }\n                    }, '') : 0,\n                    amount: final.reduce((prev, curr) =>\n                    {\n                        return prev + (curr.amount);\n                    }, 0)\n                });\n            }),\n            catchError((err, obs) => obs)\n        );\n};\n\nconst getKLineEpic = (action$, state$) =>\n{\n    const parse = timeParse('%s');\n    return action$\n        .pipe(\n            ofType(types.KLINE_GET$),\n            switchMap((action) =>\n            {\n                if (action.data)\n                {\n                    return of(action.data.filter(d => d.type === 'sell'));\n                }\n                else\n                {\n                    return Rxfrom(window.dbObj.ref('priceBooks').once('value'))\n                        .pipe(\n                            map((snapshot) =>\n                            {\n                                const { from, to, tokenList } = state$.value.book;\n                                const fromToken = tokenList.find(tk => tk.address === from.address);\n                                const toToken = tokenList.find(tk => tk.address === to.address);\n                                const data = Object.values(snapshot.val() || [])\n                                    .map((v) =>\n                                    {\n                                        let list;\n                                        if (v.fromToken === fromToken.address && v.toToken === toToken.address)\n                                        {\n                                            list = {\n                                                timestamp: v.timestamp,\n                                                price: v.price,\n                                                displayPrice: sellDisplayPrice(v.price, fromToken.decimal, toToken.decimal),\n                                                amount: tenFill(bnHex(v.filled).toString(), -from.decimal),\n                                                type: 'sell',\n                                            };\n                                        }\n                                        // else if (v.fromToken === toToken.address && v.toToken === fromToken.address)\n                                        // {\n                                        //     list = {\n                                        //         timestamp: v.timestamp,\n                                        //         price: v.price,\n                                        //         displayPrice: buyDisplayPrice(v.price, toToken.decimal, fromToken.decimal),\n                                        //         amount: tenFill(bnHex(v.filled)\n                                        //             .mul(bnHex(v.price))\n                                        //             .toString(), -(from.decimal + 18)),\n                                        //         type: 'buy'\n                                        //     };\n                                        // }\n                                        return list;\n                                    })\n                                    .filter(v => !!v)\n                                    .sort((a, b) => b.timestamp - a.timestamp);\n                                return data;\n                            }),\n                            catchError((err, obs) =>\n                            {\n                                console.warn(err);\n                                return obs;\n                            })\n                        );\n                }\n            }),\n            map((data) =>\n            {\n                const dataLength = 120;\n                const timeunit = state$.value.book.timeunit;\n                const now = new Date().getTime();\n                const today = now - (now % timeunit);\n                const startday = today - (timeunit * (dataLength - 1));\n\n                const data5ma = new Array(dataLength).fill(0).map(() =>\n                {\n                    return { from: 0, to: 0 };\n                });\n                const data10ma = new Array(dataLength).fill(0).map(() =>\n                {\n                    return { from: 0, to: 0 };\n                });\n                const initialData = new Array(dataLength).fill(0).map((v, i) =>\n                {\n                    const d = {\n                        '5ma': 0,\n                        '10ma': 0,\n                        high: 0,\n                        low: 0,\n                        open: 0,\n                        close: 0,\n                        amount: 0,\n                        timestamp: startday + (timeunit * i)\n                    };\n                    return d;\n                });\n\n                const kLineData = data\n                    .filter(v => v.timestamp > startday)\n                    .reduce((prev, curr) =>\n                    {\n                        const rs = prev;\n                        const i = Math.floor((curr.timestamp - startday) / timeunit);\n                        const tmpFrom = Number(curr.amount);\n                        const tmpTo = Number(curr.amount) * curr.displayPrice;\n\n                        for (let j = 0; j < 5 && (i + j) < data5ma.length; j += 1)\n                        {\n                            data5ma[i + j].from += tmpFrom;\n                            data5ma[i + j].to += tmpTo;\n                        }\n\n                        for (let k = 0; k < 10 && (i + k) < data10ma.length; k += 1)\n                        {\n                            data10ma[i + k].from += tmpFrom;\n                            data10ma[i + k].to += tmpTo;\n                        }\n\n                        rs[i].low = rs[i].amount > 0 ? Math.min(rs[i].low, curr.displayPrice) : curr.displayPrice;\n                        rs[i].high = Math.max(rs[i].high, curr.displayPrice);\n                        rs[i].amount += Number(curr.amount);\n                        if (rs[i].open === 0)\n                        {\n                            rs[i].open = curr.displayPrice;\n                        }\n                        rs[i].close = curr.displayPrice;\n                        return rs;\n                    }, initialData)\n                    .map((v, i, arr) =>\n                    {\n                        const p = v;\n                        const previ = i - 1 >= 0 ? i - 1 : 0;\n                        p['5ma'] = (data5ma[i].to / data5ma[i].from) || arr[previ]['5ma'];\n                        p['10ma'] = (data10ma[i].to / data10ma[i].from) || arr[previ]['10ma'];\n                        p.timestamp = parse(p.timestamp / 1000);\n\n                        if (p.amount === 0 && i > 0)\n                        {\n                            p.high = arr[i - 1].close;\n                            p.low = arr[i - 1].close;\n                            p.open = arr[i - 1].close;\n                            p.close = arr[i - 1].close;\n                        }\n                        return p;\n                    });\n\n                return kLineUpdate(kLineData);\n            }),\n            catchError((err, obs) =>\n            {\n                console.warn(err);\n                return obs;\n            })\n        );\n};\n\nconst getFillBookEpic = (action$, state$) => {\n    return action$.pipe(\n        ofType(types.FILLBOOK_GET$),\n        switchMap(() => Rxfrom(Etherscan.getFillOrderLogs(finalConfig.xpaExchange))),\n        map((books) => {\n            const tradList = {};\n\n            // see: public/data/config.xxx.js\n            const { ethAddress, XPA, assetToken } = finalConfig;\n            const tokens = Object.keys(assetToken).map(key => ({\n                address: assetToken[key],\n                token: key\n            }));\n\n            const staticCurrencies = [{ address: ethAddress, token: 'ETH' }, { address: XPA, token: 'XPA' }, ...tokens];\n        \n            const { tokenList } = state$.value.book;\n\n            const currencies = [...tokenList];\n\n            // get tradeBook\n            staticCurrencies.forEach((sc) => {\n                tradList[sc.token] = [];\n                currencies.forEach((currency) => {\n                    if (sc.address === currency.address) return;\n                    const orders = books.filter(b => b.fromToken == sc.address && b.toToken === currency.address);\n\n                    let amount = '0';\n                    let latest = '0';\n                    let growth = '0';\n                    let min = '0';\n                    let max = '0';\n                    let yesterdayRate = '0';\n\n                    // get amount, max, min, growth in 24hr\n                    const chunck = 60 * 60 * 24 * 1000 * 365;\n                    const ordersChunck = orders.filter(order => Date.now() - order.timestamp <= chunck);\n                    const yesterdayOrders = orders.filter(order => Date.now() - order.timestamp > chunck && Date.now() - order.timestamp <= chunck * 2);\n\n                    if (yesterdayOrders.length > 0) {\n                        yesterdayRate = getRateByPrice(yesterdayOrders[0].price);\n                    }\n                                            \n                    if (ordersChunck.length > 0) {\n                        ordersChunck.forEach(c => {\n                            const rate = getRateByPrice(c.price);\n                            if (bnHex(rate).gt(bnHex(max))) {\n                                max = rate;\n                            }\n\n                            if (min === '0' || bnHex(rate).lt(bnHex(min))) {\n                                min = rate;\n                            }\n                            amount = bnHex(amount).add(bnHex(c.fromAmount).mul(bnHex(c.price).div(bnTen(tenFill(1, 18))))).toString(16);\n                        })\n                        latest = getRateByPrice(orders[0].price);\n                        growth = (parseInt(latest, 16) - parseInt(yesterdayRate, 16)) / 10 ** 18;\n                    }\n                    \n\n                    tradList[sc.token].push({\n                        base: sc.token,\n                        address: currency.address,\n                        desc: `${currency.token}/${sc.token}`,\n                        token: currency.token,\n                        max,\n                        min,\n                        latest,\n                        amount,\n                        growth,\n                        id: `${currency.token}${sc.token}`\n                    })\n                })\n            });\n\n\n            return tradeListGet(tradList);\n        }),\n        catchError((error, obs) => {\n            console.error(error);\n            return obs;\n        })\n\n    )\n}\n\n\nexport default [\n    getBookEpic,\n    getTransactionEpic,\n    getSummaryEpic,\n    getKLineEpic,\n    getFillBookEpic\n];\n","import { ofType } from 'redux-observable';\nimport { of } from 'rxjs';\nimport { switchMap, map, mergeMap, catchError } from 'rxjs/operators';\nimport * as types from '../constants/actionTypesUser';\nimport {\n    userUpdate,\n    accountGet$,\n    accountUpdate,\n    myBooksGet$,\n    myBooksUpdate,\n    historyUpdate\n} from '../actions/user';\nimport {\n    bnHex,\n    sellAmount,\n    buyAmount,\n    sellDisplayPrice,\n    buyDisplayPrice,\n    subHex,\n    bnTen,\n    tenFill\n} from '../utils/format';\nimport * as rpc from '../utils/rpc';\nimport OrderbookParser from '../utils/OrderbookParser';\n\n// const getBalance = (address) => {\n\n// }\nconst userGetEpic = (action$) =>\n{\n    return action$\n        .pipe(\n            ofType(types.USER_GET$),\n            mergeMap(action =>\n                of(\n                    userUpdate(action.data),\n                    accountGet$(),\n                    myBooksGet$()\n                ))\n        );\n};\n\nconst accountGetEpic = (action$, state$) =>\n{\n    return action$\n        .pipe(\n            ofType(types.ACCOUNT_GET$),\n            // map((action) =>\n            // {\n            //     userUpdate(action.data);\n            // }),\n            // interval(15000),\n            switchMap(() =>\n            {\n                const { tokenList } = state$.value.book;\n                const { wallet } = state$.value.user.user;\n                return rpc.getUserBalance(tokenList, wallet.address);\n            }),\n            map((res) =>\n            {\n                const arr = [];\n                const { tokenList } = state$.value.book;\n\n                res.forEach((r, i) =>\n                {\n                    // actions.userActions.getBalance(i, balance);\n                    arr.push({\n                        token: tokenList[i].token,\n                        usable: r,\n                        address: tokenList[i].address\n                    });\n                });\n                return accountUpdate(arr);\n            })\n        );\n};\n\nconst myBooksGetEpic = (action$, state$) =>\n{\n    return action$\n        .pipe(\n            ofType(types.MYBOOKS_GET$),\n            switchMap((action) =>\n            {\n                // if (!action.data)\n                // {\n                //     return window.dbObj\n                //         .ref('orderBooks')\n                //         .orderByChild('user')\n                //         .equalTo(`0x${state$.value.user.user.wallet.address}`)\n                //         .once('value');\n                // }\n                // else\n                // {\n                //     return of(action.data);\n                // }\n                const { from, to } = state$.value.book;\n\n                const fromAddress = from.address.replace('0x', '');\n                const toAddress = to.address.replace('0x', '');\n                const sellOrders = OrderbookParser.cacheBooks[fromAddress + toAddress];\n                const butOrders = OrderbookParser.cacheBooks[toAddress + fromAddress];\n\n                const data = (sellOrders ? sellOrders : []).concat(butOrders ? butOrders : []);\n                return of(data);\n            }),\n            map((snapshot) =>\n            {\n                const { from, to, tokenList } = state$.value.book;\n                const { user } = state$.value.user;\n                const fromToken = tokenList.find(tk => tk.address === from.address);\n                const toToken = tokenList.find(tk => tk.address === to.address);\n                // const data = Object.values(snapshot.val())\n                console.log('All orders: ', snapshot);\n\n                const data = snapshot\n                    .filter(d => d.user === `0x${user.wallet.address.toLowerCase()}`)\n                    .filter(d => (\n                        (d.fromToken === from.address && d.toToken === to.address) ||\n                        (d.fromToken === to.address && d.toToken === from.address)) &&\n                        d !== undefined &&\n                        bnHex(d.fromAmount).sub(bnHex(d.filled)).gt(bnTen((10 ** (from.decimal - 6)).toString()))\n                    )\n                    .sort((a, b) => (bnHex(a.price).toString() > bnHex(b.price).toString() ? 1 : -1)) // 依照價格排序\n                    .sort((a, b) => (a.fromToken > b.fromToken ? 1 : -1)) // 依照名字排序\n                    // deprecated\n                    // .reduce((prev, curr) =>\n                    // {\n                    //     // 將價格相同的數量合併\n                    //     if (prev.length <= 0 || prev[prev.length - 1].price !== curr.price)\n                    //     {\n                    //         prev.push(curr);\n                    //     }\n                    //     else\n                    //     {\n                    //         prev[prev.length - 1].fromAmount = bnHex(prev[prev.length - 1].fromAmount).add(bnHex(curr.fromAmount)).toString(16);\n                    //         prev[prev.length - 1].filled = bnHex(prev[prev.length - 1].filled).add(bnHex(curr.filled)).toString(16);\n                    //     }\n\n                    //     return prev;\n                    // }, [])\n                    .map((v) =>\n                    {\n                        console.log(v);\n                        let book;\n                        if (v.fromToken === from.address && v.toToken === to.address)\n                        {\n                            book = {\n                                from: fromToken.token,\n                                to: toToken.token,\n                                desc: `${fromToken.token}/${toToken.token}`,\n                                type: 'sell',\n                                timestamp: v.timestamp,\n                                price: v.price,\n                                displayPrice: sellDisplayPrice(v.price, from.decimal, to.decimal),\n                                amount: v.fromAmount,\n                                displayAmount: tenFill(bnHex(v.fromAmount).toString(), -fromToken.decimal),\n                                fill: v.filled\n                            };\n                        }\n                        else if (v.fromToken === to.address && v.toToken === from.address)\n                        {\n                            book = {\n                                from: toToken.token,\n                                to: fromToken.token,\n                                desc: `${fromToken.token}/${toToken.token}`,\n                                type: 'buy',\n                                timestamp: v.timestamp,\n                                price: v.price,\n                                displayPrice: buyDisplayPrice(v.price, from.decimal, to.decimal),\n                                amount: v.fromAmount,\n                                displayAmount: tenFill(bnHex(v.fromAmount).mul(bnHex(v.price)).toString(), -from.decimal - 18),\n                                fill: bnHex(v.filled).mul(bnHex(v.price)).div(bnTen((10 ** 18).toString())).toString(16)\n                            };\n                        }\n                        book.value = Number(book.amount);\n                        return book;\n                    })\n                    .filter(v => !!v)\n                    // .sort((a, b) => b.timestamp - a.timestamp);\n\n                data.forEach((d, i) =>\n                {\n                    d.no = i;\n                    d.cancel = false;\n                });\n                console.log(data);\n\n                return myBooksUpdate(data);\n            }),\n            catchError((err, obs) => {\n                console.error(err);\n                return obs;\n            })\n        );\n};\n\nconst historyGetEpic = (action$, state$) =>\n{\n    return action$\n        .pipe(\n            ofType(types.HISTORY_GET$),\n            map((action) =>\n            {\n                const { from, to, tokenList } = state$.value.book;\n                const fromToken = tokenList.find(v => v.address === from.address);\n                const toToken = tokenList.find(v => v.address === to.address);\n                const data = Object.values(action.data)\n                    .filter(v => (v.fromToken === from.address && v.toToken === to.address) || (v.fromToken === to.address && v.toToken === from.address))\n                    .sort((a, b) => (a.timestamp < b.timestamp ? 1 : -1))\n                    .filter(v => v.type !== 'take')\n                    .map((v) =>\n                    {\n                        let book;\n                        if (v.fromToken === from.address && v.toToken === to.address)\n                        {\n                            book = {\n                                no: v.no,\n                                from: fromToken.token,\n                                to: toToken.token,\n                                desc: `${fromToken.token}/${toToken.token}`,\n                                price: v.price,\n                                displayPrice: sellDisplayPrice(v.price, from.decimal, to.decimal),\n                                amount: sellAmount(v.fromAmount, v.filled, fromToken.decimal),\n                                type: v.type,\n                                timestamp: v.timestamp\n                            };\n                            if (v.type === 'cancel')\n                            {\n                                book.type = 'csell';\n                            }\n                            else if (v.type === 'trade')\n                            {\n                                book.type = 'tsell';\n                            }\n                        }\n                        else if (v.fromToken === to.address && v.toToken === from.address)\n                        {\n                            book = {\n                                no: v.no,\n                                from: toToken.token,\n                                to: fromToken.token,\n                                desc: `${fromToken.token}/${toToken.token}`,\n                                price: v.price,\n                                displayPrice: buyDisplayPrice(v.price, from.decimal, to.decimal),\n                                amount: buyAmount(v.fromAmount, v.filled, v.price, from.decimal, to.decimal),\n                                type: v.type,\n                                timestamp: v.timestamp\n                            };\n                            if (book.type === 'cancel')\n                            {\n                                book.type = 'cbuy';\n                            }\n                            else if (book.type === 'trade')\n                            {\n                                book.type = 'tbuy';\n                            }\n                        }\n                        return book;\n                    })\n                    .filter(v => !!v);\n\n                return historyUpdate(data);\n            }),\n            catchError((err, obs) =>\n            {\n                console.warn(err);\n                return obs;\n            })\n        );\n};\n\nexport default [\n    userGetEpic,\n    accountGetEpic,\n    myBooksGetEpic,\n    historyGetEpic\n];\n","import { combineEpics } from 'redux-observable';\nimport booksEpic from './book';\nimport userEpic from './user';\n\nconst rootEpic = combineEpics(\n    ...booksEpic,\n    ...userEpic\n);\n\nexport default rootEpic;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createEpicMiddleware } from 'redux-observable';\nimport rootReducer from '../reducers';\nimport rootEpic from '../epics';\n\nconst epicMiddleware = createEpicMiddleware();\nexport default function configureStore(middleware, initialState)\n{\n    const store = createStore(\n        rootReducer,\n        initialState,\n        compose(\n            applyMiddleware(thunk, middleware, epicMiddleware),\n            window.devToolsExtension ? window.devToolsExtension() : f => f\n        )\n    );\n\n    epicMiddleware.run(rootEpic);\n\n    return store;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Header from '../header/header';\nimport './main.scss';\n\nclass Main extends React.Component\n{\n    static contextTypes = {\n        router: PropTypes.object.isRequired\n    }\n    constructor(props, context)\n    {\n        super(props, context);\n        this.state = {};\n    }\n\n    render()\n    {\n        return (\n            <div>\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\nMain.propTypes = {\n    children: PropTypes.object.isRequired\n};\n\nexport default Main;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport { parse } from 'qs';\n\nexport default function asyncComponent(getComponent)\n{\n    return class AsyncComponent extends React.Component\n    {\n        static propTypes = {\n            location: PropTypes.object.isRequired\n        }\n\n        static Component = null;\n\n        constructor(props, context)\n        {\n            super(props, context);\n            this.mounted = false;\n            this.state = {\n                Component: AsyncComponent.Component\n            };\n        }\n\n        componentWillMount()\n        {\n            if (!this.state.Component)\n            {\n                getComponent().then((Component) =>\n                {\n                    AsyncComponent.Component = Component;\n                    if (this.mounted)\n                    {\n                        this.setState(update(this.state, {\n                            Component: { $set: Component }\n                        }));\n                    }\n                });\n            }\n        }\n\n        componentDidMount()\n        {\n            this.mounted = true;\n        }\n\n        componentWillUnmount()\n        {\n            this.mounted = false;\n        }\n\n        render()\n        {\n            const props = update(this.props, {\n                location: {\n                    query: { $set: parse(this.props.location.search.replace('?', '')) }\n                }\n            });\n\n            const { Component } = this.state;\n            if (Component)\n            {\n                return <Component {...props} />;\n            }\n            else\n            {\n                return null;\n            }\n        }\n    };\n}\n","import React from 'react';\n\nimport createRoutes from './routes/routes';\n// routes\nconst routes = createRoutes();\n\nfunction App() {\n  return routes;\n}\n\nexport default App;\n","import React from 'react';\nimport { HashRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport Main from '../components/main/main';\nimport asyncComponent from '../utils/asyncComponent';\n\nexport default function createRoutes()\n{\n    return (\n        <HashRouter>\n            <Main>\n                <Switch>\n                    <Route exact path=\"/\" component={asyncComponent(() => import('../containers/landingPage/landingPage').then(module => module.default))} />\n                    <Route exact path=\"/order\" component={asyncComponent(() => import('../containers/order/order').then(module => module.default))} />\n                    <Route exact path=\"/exchange\" component={asyncComponent(() => import('../containers/index/index').then(module => module.default))} />\n                    <Route exact path=\"/mortgage\" component={asyncComponent(() => import('../containers/mortgage/mortgage').then(module => module.default))} />\n                    <Route exact path=\"/offset\" component={asyncComponent(() => import('../containers/offset/offset').then(module => module.default))} />\n                    <Route exact path=\"/privacy\" component={asyncComponent(() => import('../containers/privacy/privacy').then(module => module.default))} />\n                    <Route exact path=\"/currency\" component={asyncComponent(() => import('../containers/currency/currency').then(module => module.default))} />\n                    {/* <Route exact path=\"/help\" component={asyncComponent(() => import('../containers/help/help').then(module => module.default))} /> */}\n                    <Route exact nomatch render={() => <Redirect to=\"/exchange\" />} />\n                </Switch>\n            </Main>\n        </HashRouter>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { createBrowserHistory } from 'history'\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter, routerMiddleware } from 'react-router-redux';\nimport { I18nextProvider } from 'react-i18next';\nimport configureStore from './store/configureStore';\nimport i18n from './i18n/i18n';\n\nimport App from './App';\n// // react-router-redux\nconst history = createBrowserHistory();\nconst middleware = routerMiddleware(history);\n\n// store\nconst store = configureStore(middleware);\n\n\n\nconsole.log('Version: 1.5.4');\n\n\n\nReactDOM.render(\n\n    <Provider store={store}>\n        <I18nextProvider i18n={i18n}>\n            <App />\n        </I18nextProvider>\n    </Provider>,\n\n    document.getElementById('root'),\n);\n","const END_RESULT = ''.padEnd(64, '0');\nclass OrdernookParser {\n    static _web3;\n    static _contract;\n\n    static init(web3, contractAddress) {\n        this._web3 = web3;\n        this._contract = contractAddress;\n    }\n\n    static cacheBooks = {}\n\n    // getPriceBooks(from, to, price = '0') {\n    //     web3.eth.call({\n    //         to: this._contract,\n    //         data: \"0xc6888fa10000000000000000000000000000000000000000000000000000000000000003\"\n    //     }).then(console.log);\n    // }\n\n    /**\n     * Get next order price\n     * @param  {String} from     The Ethereum address\n     * @param  {String} to       The Ethereum address\n     * @param  {String} price    The previous price\n     * @returns {Promise<String>}          The next price, if not 0 => has next price\n    */\n    static _getNextOrderPrice(from, to, price = '0') {\n        return new Promise((resolve, reject) => {\n            const data = `0x3c39e63c${from.padStart(64, '0')}${to.padStart(64, '0')}${price.padStart(64, '0')}`;\n            \n            this._web3.eth.call({\n                to: this._contract,\n                data\n            }, (error, result) => {\n                if (error) {\n                    reject(error);\n                } else {\n                    resolve(result);\n                }\n            });\n\n        });\n    }\n\n    /**\n     * Get order books\n     * @param  {String} from     The Ethereum address\n     * @param  {String} to       The Ethereum address\n     * @param  {String} price    Return value from this.getNextOrderBooks\n     * @param  {Array} books     The order books\n     *  @param  {String} address  The Ethereum address\n     * @returns {Promise}        \n    */\n    static _getOrderBooks(from, to, price, books, address = '0') {\n        return new Promise((resolve, reject) => {\n            const data = `0x66abbcbd${from.padStart(64, '0')}${to.padStart(64, '0')}${price.padStart(64, '0')}${address.padStart(64, '0')}`;\n\n            this._web3.eth.call({\n                to: this._contract,\n                data,\n            }, (error, result) => {\n                if (error) {\n                    reject(error);\n                } else {\n                    const _result = result.replace('0x', '');\n                    const _amount = _result.substr(0, 64);\n                    const _next = _result.substr(64, 64);\n                    if (address !== END_RESULT) {\n                        books.push({\n                            fromAmount: _amount,\n                            price,\n                            fromToken: `0x${from}`,\n                            toToken: `0x${to}`,\n                            user: address.substr(24, 40),\n                            filled: '0' // TODO: \n                        })\n                    }\n\n                    if (_next !== END_RESULT || (address !== END_RESULT && _next !== END_RESULT)) {\n                        resolve(this._getOrderBooks(from, to, price, books, _next));\n                    } else {\n                        resolve(price);\n                    }\n                }\n            });\n\n        })\n    }\n\n    /**\n     * Get orders\n     * @param  {String} from     The Ethereum address\n     * @param  {String} to       The Ethereum address\n     * @param  {String} price    Return value from this.getNextOrderBooks\n     * @param  {Array} books     The order books\n     * @returns {Promise}        \n    */\n    static _getAll(from, to, books, price = '0') {\n        return new Promise((resolve, reject) => {\n\n            this._getNextOrderPrice(from, to, price)\n            .then((price) => {\n                return this._getOrderBooks(from, to, price.replace('0x', ''), books)\n            }).then((price) => {\n                if (price !== END_RESULT) {\n                    resolve(this._getAll(from, to, books, price))\n                } else {\n                    resolve(books)\n                }\n            })\n            .catch((e) => {\n                reject(e);\n            });\n        });\n    }\n\n    /**\n     * @param {String} from     The Ethereum address\n     * @param {String} to       The Ethereum address\n     * @returns {Promise}\n    */\n    static getAll(from, to) {\n        const _from = from.replace('0x', '');\n        const _to = to.replace('0x', '');\n        const _orders = [];\n\n        return new Promise((resolve, reject) => {\n            const key = _from + _to;\n            if (this.cacheBooks[key]) return resolve(this.cacheBooks[key]);\n\n            this._getAll(_from, _to, _orders).then((result) => {\n                const _result = result.filter(r => r.fromAmount !== END_RESULT)\n                this.cacheBooks[key] = _result;\n                resolve(_result);\n            }).catch((e) => {\n                reject(e);\n            })\n        });\n    }\n}\n\nexport default OrdernookParser;\n","import * as types from '../constants/actionTypesBook';\n\n// \b更改 from\nexport function changeFrom(data)\n{\n    return {\n        type: types.FROM_CHANGE,\n        data\n    };\n}\n\n// \b更改 from\nexport function changeTo(data)\n{\n    return {\n        type: types.TO_CHANGE,\n        data\n    };\n}\n\n// 整理掛單資料 epic 進入點\nexport const bookGet$ = (data) =>\n{\n    return {\n        type: types.BOOK_GET$,\n        data\n    };\n};\n\n// \b更新掛單\nexport function bookUpdate(data)\n{\n    return {\n        type: types.BOOK_UPDATE,\n        data\n    };\n}\n\n// \b取得 tokenList\nexport function tokenListGet(data)\n{\n    return {\n        type: types.TOKENLIST_GET,\n        data\n    };\n}\n\n// 整理 epic 進入點\nexport function summaryGet$(data)\n{\n    return {\n        type: types.SUMMARY_GET$,\n        data\n    };\n}\n\nexport function summaryUpdate(data)\n{\n    return {\n        type: types.SUMMARY_UPDATE,\n        data\n    };\n}\n\nexport function tradeListGet(data)\n{\n    return {\n        type: types.TRADELIST_GET,\n        data\n    };\n}\n\n// export function addTradeList(data)\n// {\n//     return {\n//         type: types.ADD_TRADELIST,\n//         data\n//     };\n// }\n\nexport function recentTransactionGet$(data)\n{\n    return {\n        type: types.RECENTTRANSACTION_GET$,\n        data\n    };\n}\n\nexport function recentTransactionUpdate(data)\n{\n    return {\n        type: types.RECENTTRANSACTION_UPDATE,\n        data\n    };\n}\n\nexport function kLineGet$(data)\n{\n    return {\n        type: types.KLINE_GET$,\n        data\n    };\n}\n\nexport function kLineUpdate(data)\n{\n    return {\n        type: types.KLINE_UPDATE,\n        data\n    };\n}\n\nexport function timeunitChange(data)\n{\n    return {\n        type: types.TIMEUINT_CHANGE,\n        data\n    };\n}\n\n// 取得搓合的單子\nexport const getFillBook$ = () => ({\n    type: types.FILLBOOK_GET$\n})","export const UPDATE_LOADING = 'UPDATE_LOADING';\nexport const UPDATE_MESSAGE = 'UPDATE_MESSAGE';\n"],"sourceRoot":""}