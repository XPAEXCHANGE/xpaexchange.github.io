{"version":3,"sources":["utils/login.js","hoc/connectFirebase.js","components/modal/importWallet.js","components/passwordMeter/passwordMeter.js","components/modal/createWallet.js","components/modal/exportWallet.js","components/modal/observer.js","components/modal/observerQr.js","components/modal/transaction.js","components/modal/cancelOrder.js","components/modal/checkPassword.js","components/modal/receipt.js","components/modal/mortgage.js","components/modal/offset.js","components/modal/modal.js","components/toast/toast.js","components/loading/loading.js","components/withPopup/withPopup.js"],"names":["loginIO","wallet","password","key","tokenList","actions","testWallet","testKey","Promise","resolve","userActions","userGet$","observer","window","dbObj","ref","orderByChild","equalTo","address","on","snapshot","historyGet$","Object","values","val","rpc","then","setInterval","accountGet$","refreshInterval","connectFirebase","WrapComponent","props","state","this","bookActions","modalActions","firebase","apps","length","initializeApp","finalConfig","fdb","database","once","v","tokenListGet","tradeListGet","bookGet$","recentTransactionGet$","off","React","Component","ImportWallet","downloadHref","message","passwordType","readFile","bind","submitImport","handleChange","e","setState","update","$set","target","value","file","import","files","reader","FileReader","onload","JSON","parse","result","keys","map","toLowerCase","indexOf","t","readAsText","updateLoading","updateMessage","reject","worker","Worker","onmessage","setTimeout","data","postMessage","modalControl","close","catch","err","console","warn","className","input","accept","type","onChange","disabled","loading","htmlFor","data-message","required","onClick","defaultProp","translate","wait","PasswordMeter","zxcvbn","score","style","defaultProps","CreateWallet","submitCreate","onbeforeunload","download","returnValue","toastOpen","create","error","res","w","production","crypto","cipher","ciphertext","cipherparams","iv","mac","kdf","kdfparams","dklen","n","r","p","salt","id","version","k","changeKeep","open","log","exec","placeholder","ExportWallet","replace","stringify","size","href","test","navigator","userAgent","MSStream","Observer","submit","ObserverQr","checked","renderBtn","check","nextProps","nextState","user","fromToken","ethAddress","observerAllowance","pass","parseInt","Number","bnHex","amount","toString","qrcode","Transaction","toToken","fee","fromDecimal","toDecimal","token","tenFill","scnToStr","gas","src","alt","CancelOrder","desc","price","formatNumber","CheckPassword","Receipt","receipt","Mortgage","method","Offset","Modal","fade","view","keep","renderView","Toast","Loading","title","WithPopup","modal","toast","toastMessage","modalOpen","modalClose","timeout","m","clearTimeout","createPortal","document","getElementsByTagName","renderModal","renderToast","children","renderLoading"],"mappings":"oHAAA,+CAiBaA,EAAU,SAACC,EAAQC,EAAUC,EAAKC,EAAWC,EAASC,EAAYC,GAE3E,OAAO,IAAIC,SAAQ,SAACC,GACnB,IACWC,EAAgBL,EAAhBK,YACJP,EAEAO,EAAYC,SAAS,CAAEV,SAAQC,WAAUC,QAIzCO,EAAYC,SAAS,CAAEV,SAAQW,UAAU,IAG7CC,OAAOC,MAAMC,IAAI,iBAAiBC,aAAa,QAAQC,QAAvD,YAAoEhB,EAAOiB,UAAWC,GAAG,SAAS,SAACC,GAE/FV,EAAYW,YAAYC,OAAOC,OAAOH,EAASI,OAAS,QAMxDlB,GAEAmB,IAAgBnB,EAAWY,QAASjB,EAAOiB,QAASX,GAASmB,MAAK,eAhCtD,SAACrB,GAEZsB,aAAY,WAEjBtB,EAAQK,YAAYkB,gBACrB,MAgCCC,CAAgBxB,GAChBI,S,4GCoDOqB,IA7FS,SAACC,GA0FrB,OAzFJ,kDAGQ,WAAYC,GACX,IAAD,8BACI,cAAMA,IACDC,MAAQ,GAFjB,EAJR,gEAUS,IACW5B,EAAY6B,KAAKF,MAAjB3B,QACA8B,EAA2C9B,EAA3C8B,YAA2C9B,EAA9BK,YAA8BL,EAAjB+B,aAG7BC,IAASC,KAAKC,SAEfF,IAASG,cAAcC,YAAYC,KACnC7B,OAAOC,MAAQuB,IAASM,YAI5B9B,OAAOC,MAAMC,IAAI,aAAa6B,KAAK,SAAS,SAACC,GAErCA,EAAErB,OAEFW,EAAYW,aAAaD,EAAErB,UAKnCX,OAAOC,MAAMC,IAAI,aAAaI,GAAG,SAAS,SAAC0B,GAEnCA,EAAErB,QAEFW,EAAYY,aAAaF,EAAErB,OAE3BW,EAAYa,eAKpBnC,OAAOC,MAAMC,IAAI,cAAcI,GAAG,SAAS,SAAC0B,GAEpCA,EAAErB,OAEFW,EAAYc,sBAAsB3B,OAAOC,OAAOsB,EAAErB,aA9CtE,6CAoEYX,OAAOC,MAAMC,IAAI,aAAamC,IAAI,SAClCrC,OAAOC,MAAMC,IAAI,aAAamC,IAAI,SAClCrC,OAAOC,MAAMC,IAAI,cAAcmC,IAAI,SACnCrC,OAAOC,MAAMC,IAAI,cAAcmC,IAAI,WAvE/C,+BA4EY,OACI,kBAACnB,EAAkBG,KAAKF,WA7ExC,GACkCmB,IAAMC,a,qICDlCC,E,kDAEF,WAAYrB,GACX,IAAD,8BACI,cAAMA,IACDC,MAAQ,CACTqB,aAAc,GACdpD,SAAU,GACVD,OAAQ,GACRsD,QAAS,GACTC,cAAc,GAGlB,EAAKC,SAAW,EAAKA,SAASC,KAAd,gBAChB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBAEpB,EAAKzD,OAAS,KAdlB,E,yDAiBa4D,GAET3B,KAAK4B,SAASC,IAAO7B,KAAKD,MAAO,CAC7B/B,SAAU,CAAE8D,KAAMH,EAAEI,OAAOC,OAC3BX,QAAS,CAAES,KAAM,S,iCAKxB,IAAD,OACUG,EAAOjC,KAAKkC,OAAOC,MAAM,GACzBC,EAAS,IAAIC,WAEnBD,EAAOE,OAEI,SAACX,GAEJ,EAAK5D,OAASwE,KAAKC,MAAMb,EAAEI,OAAOU,QAClC,EAAKb,SAASC,IAAO,EAAK9B,MAAO,CAC7BhC,OAAQ,CAAE+D,KAAM,EAAK/D,QACrBsD,QAAS,CAAES,KAAM,OAErB,IAAIY,EAAOtD,OAAOsD,KAAK,EAAK3E,QAAQ4E,KAAI,SAAAhC,GAAC,OAAIA,EAAEiC,iBAC/C,IAAiC,IAA7BF,EAAKG,QAAQ,aAA6C,IAAxBH,EAAKG,QAAQ,QAA4C,IAA5BH,EAAKG,QAAQ,UAChF,CAAC,IACWC,EAAM,EAAKhD,MAAXgD,EACR,EAAKlB,SAASC,IAAO,EAAK9B,MAAO,CAC7BsB,QAAS,CAAES,KAAMgB,EAAE,mBAG3B,EAAKZ,OAAOF,MAAQ,IAG5BI,EAAOW,WAAWd,K,qCAIrB,IAAD,SACsCjC,KAAKF,MAA/B3B,EADZ,EACYA,QAAS2E,EADrB,EACqBA,EAAG5E,EADxB,EACwBA,UADxB,EAEiC8B,KAAKD,MAA1BhC,EAFZ,EAEYA,OAAQC,EAFpB,EAEoBA,SAEhB,IAAKgC,KAAKjC,OAAQ,OAAOiC,KAAK4B,SAASC,IAAO7B,KAAKD,MAAO,CAAEsB,QAAS,CAAES,KAAMgB,EAAE,mBAsB/E,OAHA3E,EAAQ+B,aAAa8C,eAAc,GACnC7E,EAAQ+B,aAAa+C,cAAcH,EAAE,cAjB1B,IAAIxE,SAAQ,SAACC,EAAS2E,GAEzB,IAAMC,EAAS,IAAIC,OAAO,2BAC1BD,EAAOE,UAAY,SAAC1B,GAEhB2B,YAAW,WAEQ,UAAX3B,EAAE4B,MAAkBL,IACxB,EAAKjF,IAAM0D,EAAE4B,KACbhF,EAAQ,EAAKN,OACd,MAEPkF,EAAOK,YAAY,CAAEzF,SAAQC,gBAOjBwB,MAAK,WAErB,EAAKoC,SAASC,IAAO,EAAK9B,MAAO,CAC7BqB,aAAc,CAAEU,KAAM,OAE1BhE,YAAQC,EAAQC,EAAU,EAAKC,IAAKC,EAAWC,EAAS,GAAI,IAAIqB,MAAK,WAEjErB,EAAQ+B,aAAa8C,eAAc,GACnC,EAAKlD,MAAM2D,aAAaC,cAE7BC,OAAM,SAACC,GAENC,QAAQC,KAAKF,GACb,EAAKhC,SAASC,IAAO,EAAK9B,MAAO,CAC7BsB,QAAS,CAAES,KAAMgB,EAAE,mBAEvB3E,EAAQ+B,aAAa8C,eAAc,Q,+BAK1C,IAAD,SAC8ChD,KAAKD,MAAvCuB,EADZ,EACYA,aAAcvD,EAD1B,EAC0BA,OAAQsD,EADlC,EACkCA,QACtByB,EAAM9C,KAAKF,MAAXgD,EAER,OACI,yBAAKiB,UAAU,kBACX,uBAAGA,UAAU,eACRjB,EAAE,iBAEP,uBAAGiB,UAAU,UACT,2BAAOA,UAAU,eAAelF,IAAK,SAACmF,GAAY,EAAK9B,OAAS8B,GAAUC,OAAO,QAAQC,KAAK,OAAOC,SAAUnE,KAAKuB,SAAU6C,SAAUpE,KAAKF,MAAMuE,UAClJvB,EAAE,iBAEP,yBAAKiB,UAAU,iBACX,yBAAKA,UAAU,WACX,6BAAMjB,EAAE,YACR,6BAAM/E,EAAOiB,QAAUjB,EAAOiB,QAAU,KAE5C,yBAAK+E,UAAU,eACX,2BAAOO,QAAQ,YACVxB,EAAE,iBAEP,yBAAKiB,UAAuB,KAAZ1C,EAAiB,GAAK,QAASkD,eAAclD,GACzD,2BAAO6C,KAAM5C,EAAe,WAAa,OAAQ6C,SAAUnE,KAAK0B,aAAc0C,SAAUpE,KAAKF,MAAMuE,QAASG,UAAQ,MAG5H,6BACI,2BAAOF,QAAQ,iBACX,2BAAOJ,KAAK,WAAWC,SAAU,WAAQ,EAAKvC,SAASC,IAAO,EAAK9B,MAAO,CAAEuB,aAAc,CAAEQ,MAAO,EAAK/B,MAAMuB,oBADlH,WAEiBwB,EAAE,mBAI3B,yBAAKiB,UAAU,aACX,yBAAKA,UAAU,SAASU,QAASzE,KAAKF,MAAM2D,aAAaC,OACrD,8BAAOZ,EAAE,YAEb,yBAAKiB,UAAU,SAASU,QAASzE,KAAKyB,cAClC,8BAAOqB,EAAE,kB,GA9IN7B,IAAMC,WAsJjCC,EAAauD,YAAc,CACvB5B,EAAG,cAWQ6B,kBAAU,UAAW,CAAEC,MAAM,GAA7BD,CAAqCxD,G,kBCnK9C0D,G,yDAEF,WAAY/E,GACX,IAAD,8BACI,cAAMA,IACDC,MAAQ,GAFjB,E,qDAMC,IACW/B,EAAagC,KAAKF,MAAlB9B,SAqBR,OACI,yBAAK+F,UAAU,oBACX,yBAAKA,UAtBC,WAEV,GAAiB,KAAb/F,EAAiB,MAAO,OAC5B,OAAQ8G,IAAO9G,GAAU+G,OAErB,KAAK,EACD,MAAO,OACX,KAAK,EACD,MAAO,OACX,KAAK,EACD,MAAO,SACX,KAAK,EACD,MAAO,QACX,KAAK,EACD,MAAO,SACX,QACI,MAAO,QAMKC,U,GAjCJ/D,IAAMC,YAuClC2D,EAAcI,aAAe,CACzBnC,EAAG,cAOQ6B,oBAAYE,GC5CrBK,E,kDAEF,WAAYpF,GACX,IAAD,8BACI,cAAMA,IACDC,MAAQ,CACT/B,SAAU,GACVsD,cAAc,GAGlB,EAAKI,aAAe,EAAKA,aAAaF,KAAlB,gBACpB,EAAK2D,aAAe,EAAKA,aAAa3D,KAAlB,gBARxB,E,gEAYC,IAAD,OACI7C,OAAOyG,eAAiB,SAACzD,GAErB,GAAI,EAAK5B,MAAMsF,SACf,CAGI,OADA1D,EAAE2D,YADiB,0C,6CAS3B3G,OAAOyG,eAAiB,O,mCAGfzD,GAET3B,KAAK4B,SAASC,IAAO7B,KAAKD,MAAO,CAC7B/B,SAAU,CAAE8D,KAAMH,EAAEI,OAAOC,Y,qCAKlC,IAAD,SACyChC,KAAKF,MAAlC3B,EADZ,EACYA,QAASsF,EADrB,EACqBA,aAAcX,EADnC,EACmCA,EAC/B,GAAI9C,KAAKD,MAAM/B,SAASqC,OAAS,EAAG,OAAOL,KAAKF,MAAMyF,UAAUzC,EAAE,qBAElE,IAAM0C,EAAS,WAEXrH,EAAQ+B,aAAa8C,eAAc,GACnC7E,EAAQ+B,aAAa+C,cAAc,EAAKnD,MAAMgD,EAAE,aAmBhD,OAhBW,IAAIxE,SAAQ,SAACC,EAAS2E,GAEzB,IAAMlF,EAAW,EAAK+B,MAAM/B,SACtBmF,EAAS,IAAIC,OAAO,0BAC1BD,EAAOE,UAAY,SAAC1B,GAEhB2B,YAAW,WAEH3B,EAAE4B,KAAKkC,OAAOvC,EAAOvB,EAAE4B,KAAKkC,OAChClH,EAAQoD,EAAE4B,QACX,MAEPJ,EAAOK,YAAY,CAAExF,gBAIVwB,MAAK,SAACkG,GAErB,EAAKzH,IAAMyH,EAAIzH,IAEf,IAEM0H,EAAKpF,YAAYqF,WAA0B,GAF9B,CAAE5G,QAAS,2CAA4C6G,OAAQ,CAAEC,OAAQ,cAAeC,WAAY,mEAAoEC,aAAc,CAAEC,GAAI,oCAAsCC,IAAK,mEAAoEC,IAAK,SAAUC,UAAW,CAAEC,MAAO,GAAIC,EAAG,OAAQC,EAAG,EAAGC,EAAG,EAAGC,KAAM,qEAAwEC,GAAI,uCAAwCC,QAAS,GAGzfC,EAAKrG,YAAYqF,WAAuB,GAF9B,mEAIhB9H,YAAQ4H,EAAI3H,OAAQ2H,EAAI1H,SAAU,EAAKC,IAAK,EAAK6B,MAAM5B,UAAW,EAAK4B,MAAM3B,QAASwH,EAAGiB,GAAGpH,MAAK,WAEzF,EAAKO,MAAM/B,UAEX,EAAK4D,SAASC,IAAO,EAAK9B,MAAO,CAC7B/B,SAAU,CAAE8D,KAAM,OAI1B3D,EAAQ+B,aAAa8C,eAAc,GACnC7E,EAAQK,YAAYqI,YAAW,GAC/BpD,EAAaqD,KAAK,eAAgB,CAAE/I,OAAQ2H,EAAI3H,OAAQqD,aAAa,QAAD,OAAUsE,EAAInC,MAAQlC,QAASyB,EAAE,6BAiB1Ga,MAAME,QAAQkD,MAGrB,IAAK/G,KAAKD,MAAM/B,SAEZ,OAAOgC,KAAKF,MAAM2D,aAAaqD,KAAK,gBAAiB,CAAEE,KAAMxB,IAI7DA,M,+BAKP,IAAD,SACuCxF,KAAKD,MAAhCuB,EADZ,EACYA,aAActD,EAD1B,EAC0BA,SACd8E,EAAM9C,KAAKF,MAAXgD,EACR,OACI,6BACI,uBAAGiB,UAAU,eAAejB,EAAE,cAC9B,yBAAKiB,UAAU,iBACX,yBAAKA,UAAU,eACX,2BAAOO,QAAQ,YACVxB,EAAE,gBAEP,6BACI,2BAAOoB,KAAM5C,EAAe,WAAa,OAAQ6C,SAAUnE,KAAK0B,aAAcuF,YAAanE,EAAE,iBAAkBsB,SAAUpE,KAAKF,MAAMuE,YAG5I,yBAAKN,UAAU,SACX,kBAAC,EAAD,CAAe/F,SAAUA,IACzB,+BAAK8E,EAAE,oBAAP,MAEJ,6BACI,2BAAOwB,QAAQ,iBACX,2BAAOJ,KAAK,WAAWC,SAAU,WAAQ,EAAKvC,SAASC,IAAO,EAAK9B,MAAO,CAAEuB,aAAc,CAAEQ,MAAO,EAAK/B,MAAMuB,oBADlH,WAEiBwB,EAAE,mBAI3B,yBAAKiB,UAAU,aACX,yBAAKA,UAAU,SAASU,QAASzE,KAAKF,MAAM2D,aAAaC,OACrD,8BAAOZ,EAAE,YAEb,yBAAKiB,UAAU,SAASU,QAASzE,KAAKmF,cAClC,8BAAOrC,EAAE,kB,GApJN7B,IAAMC,WA4JjCgE,EAAaD,aAAe,CACxBnC,EAAG,cAYQ6B,kBAAU,UAAW,CAAEC,MAAM,GAA7BD,CAAqCO,G,kBC7K9CgC,E,kDAEF,WAAYpH,GACX,IAAD,8BACI,cAAMA,IACDC,MAAQ,GAFjB,E,gEAMC,IAAD,OACIpB,OAAOyG,eAAiB,SAACzD,GAErB,GAAI,EAAK5B,MAAMsF,SACf,CAGI,OADA1D,EAAE2D,YADiB,0C,6CAS3B3G,OAAOyG,eAAiB,O,+BAI3B,IAAD,SACyBpF,KAAKF,MAAlBgD,EADZ,EACYA,EAAGd,EADf,EACeA,MAEX,OACI,6BACI,uBAAG+B,UAAU,eAAejB,EAAE,cAC9B,yBAAKiB,UAAU,iBACX,6BACI,6BACKjB,EAAE,eAEP,yCACUd,EAAMjE,OAAOiB,QAAQmI,QAAQ,KAAM,OAGjD,yBAAKpD,UAAU,UACX,yBAAKA,UAAU,UACX,kBAAC,IAAD,CAAQ/B,MAAOO,KAAK6E,UAAUpF,EAAMjE,QAASsJ,KAAM,SAI/D,yBAAKtD,UAAU,aACX,uBACIuD,KAAMtF,EAAMZ,aACZiE,SAAS,gBACTtB,UAAU,qBACVhC,OAAQ,mBAAmBwF,KAAKC,UAAUC,aAAe9I,OAAO+I,SAAW,SAAW,GACtFjD,QAAS,WAAQ,EAAK3E,MAAM2D,aAAaC,QAAS,EAAK5D,MAAM3B,QAAQK,YAAYqI,YAAW,KAE5F,8BACK/D,EAAE,0B,GAzDJ7B,IAAMC,WAkEjCgG,EAAajC,aAAe,CACxBnC,EAAG,cAUQ6B,kBAAU,UAAW,CAAEC,MAAM,GAA7BD,CAAqCuC,GC3E9CS,E,kDAEF,WAAY7H,GACX,IAAD,8BACI,cAAMA,IACDC,MAAQ,CACTf,QAAS,GACTqC,QAAS,IAGb,EAAKK,aAAe,EAAKA,aAAaF,KAAlB,gBACpB,EAAKoG,OAAS,EAAKA,OAAOpG,KAAZ,gBARlB,E,yDAWaG,GAET3B,KAAK4B,SAASC,IAAO7B,KAAKD,MAAO,CAC7Bf,QAAS,CAAE8C,KAAMH,EAAEI,OAAOC,OAC1BX,QAAS,CAAES,KAAM,S,+BAKxB,IAAD,EACoD9B,KAAKF,MAA7CgD,EADZ,EACYA,EAAG3E,EADf,EACeA,QAASD,EADxB,EACwBA,UAAWuF,EADnC,EACmCA,aACvBzE,EAAYgB,KAAKD,MAAjBf,QAER,GAAgB,KAAZA,EAAJ,CAKA,GAHc,sBAGHuI,KAAKvI,IAFG,mBAEqBuI,KAAKvI,GAO7C,CACI,IACMjB,EAAS,CAAEiB,QADHA,EAAQmI,QAAQ,KAAM,IACJvE,eAChC9E,YAAQC,EAAQ,GAAI,GAAIG,EAAWC,GAASqB,MAAK,WAE7CiE,EAAaC,gBAVjB1D,KAAK4B,SAASC,IAAO7B,KAAKD,MAAO,CAC7BsB,QAAS,CAAES,KAAMgB,EAAE,6B,+BAe9B,IACWA,EAAM9C,KAAKF,MAAXgD,EACAzB,EAAYrB,KAAKD,MAAjBsB,QAER,OACI,yBAAK0C,UAAU,cACX,yBAAKA,UAAU,eACVjB,EAAE,iBAEP,yBAAKiB,UAAU,iBACX,6BAAMjB,EAAE,iBACR,yBAAKiB,UAAU,eACX,2BAAOO,QAAQ,WAAWxB,EAAE,iBAC5B,yBAAKiB,UAAuB,KAAZ1C,EAAiB,GAAK,QAASkD,eAAclD,GACzD,2BAAOqF,GAAG,UAAUxC,KAAK,OAAOlC,MAAOhC,KAAKD,MAAMf,QAASmF,SAAUnE,KAAK0B,kBAItF,yBAAKqC,UAAU,aACX,yBAAKA,UAAU,SAASU,QAASzE,KAAK4H,QAClC,8BACK9E,EAAE,yB,GAvER7B,IAAMC,WAgF7ByG,EAASjD,YAAc,CACnB5B,EAAG,cAUQ6B,kBAAU,UAAW,CAAEC,MAAM,GAA7BD,CAAqCgD,G,yCC1F9CE,E,kDAEF,WAAY/H,GACX,IAAD,8BACI,cAAMA,IACDC,MAAQ,CACT+H,SAAS,GAGb,EAAKC,UAAY,EAAKA,UAAUvG,KAAf,gBACjB,EAAKoG,OAAS,EAAKA,OAAOpG,KAAZ,gBACd,EAAKwG,MAAQ,EAAKA,MAAMxG,KAAX,gBARjB,E,gEAaIxB,KAAKgI,U,4CAGaC,EAAWC,GAE7B,OAAID,EAAUjG,MAAMkC,OAASlE,KAAKF,MAAMkC,MAAMkC,MAAQgE,EAAUJ,UAAY9H,KAAKD,MAAM+H,U,kKAYtD9H,KAAKF,MAA9BkC,E,EAAAA,MAAOmG,E,EAAAA,KAAMhK,E,EAAAA,QAEF,WAAf6D,EAAMkC,K,uBAENlE,KAAK4B,SAASC,IAAO7B,KAAKD,MAAO,CAC7B+H,QAAS,CAAEhG,MAAM,MAErB3D,EAAQK,YAAYqI,YAAW,G,6BAI/B7E,EAAMoG,UAAUpJ,UAAYuB,YAAY8H,W,uBAExCrI,KAAK4B,SAASC,IAAO7B,KAAKD,MAAO,CAC7B+H,QAAS,CAAEhG,MAAM,MAErB3D,EAAQK,YAAYqI,YAAW,G,2CAgDhByB,YAAkBtG,EAAMoG,UAAWD,EAAKpK,OAAOiB,S,WAA5DuJ,E,OACa,gBAAfvG,EAAMkC,MAAiD,IAAvBsE,SAASD,EAAM,I,0CAExCvI,KAAK4B,SAASC,IAAO7B,KAAKD,MAAO,CACpC+H,QAAS,CAAEhG,MAAM,O,QAGD,YAAfE,EAAMkC,MAAsBsE,SAASD,EAAM,KAAOE,OAAOC,YAAM1G,EAAMoG,UAAUO,QAAQC,YAE5F5I,KAAK4B,SAASC,IAAO7B,KAAKD,MAAO,CAC7B+H,QAAS,CAAEhG,MAAM,MAGD,SAAfE,EAAMkC,MAAmBsE,SAASD,EAAM,IAAME,OAAOC,YAAM1G,EAAMoG,UAAUO,QAAQC,aAExF5I,KAAK4B,SAASC,IAAO7B,KAAKD,MAAO,CAC7B+H,QAAS,CAAEhG,MAAM,MAErB3D,EAAQK,YAAYqI,YAAW,IAI/BvD,YAAW,WAEP,EAAK0E,UACN,K,sIAKV,IAAD,EAC6ChI,KAAKF,MAAtCkC,EADZ,EACYA,MAAOyB,EADnB,EACmBA,aAActF,EADjC,EACiCA,QACxB6B,KAAKD,MAAM+H,UACG,YAAf9F,EAAMkC,MAAqC,gBAAflC,EAAMkC,MAElClC,EAAMgF,OACNhH,KAAK4B,SAASC,IAAO7B,KAAKD,MAAO,CAC7B+H,QAAS,CAAEhG,MAAM,QAKrB3D,EAAQK,YAAYqI,YAAW,GAC/BpD,EAAaC,Y,kCAKpB,IACWoE,EAAY9H,KAAKD,MAAjB+H,QADZ,EAEyB9H,KAAKF,MAAlBkC,EAFZ,EAEYA,MAAOc,EAFnB,EAEmBA,EACf,MAAmB,YAAfd,EAAMkC,MAAqC,gBAAflC,EAAMkC,KAG9B,yBAAKH,UAAU,aACX,yBAAKA,UAAW+D,EAAU,SAAW,QAASrD,QAASzE,KAAK4H,QACxD,8BACK9E,EAAE,WASf,yBAAKiB,UAAU,aACX,yBAAKA,UAAW+D,EAAU,SAAW,QAASrD,QAASzE,KAAK4H,QACxD,8BAAO9E,EAAE,e,+BAQ5B,IAAD,EACyB9C,KAAKF,MAAlBgD,EADZ,EACYA,EAAGd,EADf,EACeA,MACX,OACI,yBAAK+B,UAAU,gBACX,yBAAKA,UAAU,eACM,YAAf/B,EAAMkC,MAAqC,gBAAflC,EAAMkC,KAA0BpB,EAAE,gBAAkBA,EAAE,gBAExF,yBAAKiB,UAAU,iBACX,2BAAmB,gBAAf/B,EAAMkC,KAAyBpB,EAAE,eAAiBA,EAAE,oBAE5D,yBAAKiB,UAAU,iBACX,yBAAKA,UAAU,UACX,kBAAC,IAAD,CAAQ/B,MAAOA,EAAM6G,OAAQxB,KAAM,QAG1CrH,KAAK+H,iB,GA5LG9G,IAAMC,WAkM/B2G,EAAW5C,aAAe,CACtBnC,EAAG,cAWQ6B,kBAAU,UAAW,CAAEC,MAAM,GAA7BD,CAAqCkD,GCjN9CiB,E,kDAEF,WAAYhJ,GACX,IAAD,8BACI,cAAMA,IACDC,MAAQ,GAFjB,E,qDAMC,IAAD,EACyBC,KAAKF,MAAlBkC,EADZ,EACYA,MAAOc,EADnB,EACmBA,EACPoB,EAA0DlC,EAA1DkC,KAAMkE,EAAoDpG,EAApDoG,UAAWW,EAAyC/G,EAAzC+G,QAASC,EAAgChH,EAAhCgH,IAAKC,EAA2BjH,EAA3BiH,YAAaC,EAAclH,EAAdkH,UACpD,OACI,6BACI,yBAAKnF,UAAU,eACD,QAATG,EAAA,UAAoBpB,EAAE,QAAtB,OAA+BiG,EAAQI,OAAvC,UAAoDrG,EAAE,SAAtD,OAAgEsF,EAAUe,QAE/E,yBAAKpF,UAAU,iBACX,yBAAKA,UAAU,UACX,6BACI,6BAAMjB,EAAE,iBAA2B,QAAToB,EAAA,UAAoBpB,EAAE,QAAtB,OAA+BiG,EAAQI,OAAvC,UAAoDrG,EAAE,SAAtD,OAAgEsF,EAAUe,QACpG,6BAAMC,YAAQV,YAAMN,EAAUO,QAAQC,YAAaK,GAAnD,IAAkEb,EAAUe,MAA5E,MAAsFC,YAAQV,YAAMK,EAAQJ,QAAQC,YAAaM,GAAjI,IAA8IH,EAAQI,OACtJ,6BAAMrG,EAAE,OAAR,WAAmBuG,YAASrH,EAAMsH,KAAlC,QACA,6BAAMxG,EAAE,OAAR,WAAmBkG,EAAG,UAAMI,YAAQJ,GAAME,GAApB,YAAkCH,EAAQI,OAAU,IAE9E,yBAAKI,IAAI,uBAAuBC,IAAI,aAG5C,yBAAKzF,UAAU,aACX,4BAAQA,UAAS,iBAAYG,GAAQO,QAAS,WAAQzC,EAAMgF,SAC9C,QAAT9C,EAAA,UAAoBpB,EAAE,QAAtB,OAA+BiG,EAAQI,OAAvC,UAAoDrG,EAAE,SAAtD,OAAgEsF,EAAUe,c,GA9BzElI,IAAMC,WAsChC4H,EAAY7D,aAAe,CACvBnC,EAAG,cAQQ6B,kBAAU,UAAW,CAAEC,MAAM,GAA7BD,CAAqCmE,GC/C9CW,E,kDAEF,WAAY3J,GACX,IAAD,8BACI,cAAMA,IACDC,MAAQ,GAFjB,E,qDAMC,IAAD,EACyBC,KAAKF,MAAlBgD,EADZ,EACYA,EAAGd,EADf,EACeA,MACX,OACI,yBAAK+B,UAAU,iBACX,yBAAKA,UAAU,eACVjB,EAAE,sBAEP,yBAAKiB,UAAU,iBACX,uBAAGA,UAAU,eAAb,UAA+BjB,EAAE,cAAjC,aAAmDd,EAAM0H,OACzD,uBAAG3F,UAAU,eAAb,UAA+BjB,EAAE,eAAjC,aAAoDd,EAAM2H,QAC1D,uBAAG5F,UAAU,eAAb,UAA+BjB,EAAE,gBAAjC,aAAqD8G,YAAa,EAAG5H,EAAM2G,UAC3E,uBAAG5E,UAAU,eAAejB,EAAE,aAA9B,WAA+CuG,YAASrH,EAAMsH,KAA9D,SAEJ,yBAAKvF,UAAU,aACX,yBAAKA,UAAU,SAASU,QAASzC,EAAMgF,MACnC,8BACKlE,EAAE,yB,GAzBL7B,IAAMC,WAkChCuI,EAAYxE,aAAe,CACvBnC,EAAG,cASQ6B,oBAAY8E,GC7CrBI,E,kDAEF,WAAY/J,GACX,IAAD,8BACI,cAAMA,IACDC,MAAQ,GAEb,EAAKyF,OAAS,EAAKA,OAAOhE,KAAZ,gBAJlB,E,qDASIxB,KAAKF,MAAMkC,MAAMgF,S,+BAIpB,IAAD,OACYlE,EAAM9C,KAAKF,MAAXgD,EAER,OACI,6BACI,yBAAKiB,UAAU,iBACX,uBAAGA,UAAU,WAAWjB,EAAE,0BAE9B,yBAAKiB,UAAU,aACX,yBAAKA,UAAU,SAASU,QAAS,WAAQ,EAAK3E,MAAM2D,aAAaqD,KAAK,YAClE,8BAAOhE,EAAE,YAEb,yBAAKiB,UAAU,SAASU,QAASzE,KAAKwF,QAClC,8BAAO1C,EAAE,kB,GA7BL7B,IAAMC,WAqClC2I,EAAc5E,aAAe,CACzBnC,EAAG,cASQ6B,kBAAU,UAAW,CAAEC,MAAM,GAA7BD,CAAqCkF,GC/C9CC,E,kDAEF,WAAYhK,GACX,IAAD,8BACI,cAAMA,IACDC,MAAQ,GAFjB,E,qDAMC,IAAD,EACuCC,KAAKF,MAAhCkC,EADZ,EACYA,MAAOc,EADnB,EACmBA,EAAGW,EADtB,EACsBA,aAClB,OACI,6BACI,yBAAKM,UAAU,eACVjB,EAAE,SAEP,yBAAKiB,UAAU,iBACX,uBAAGA,UAAU,iBAAiBjB,EAAE,cAChC,uBAAGiB,UAAU,UAAUuD,KAAI,kCAA6BtF,EAAM+H,SAAWhI,OAAO,UAC3EC,EAAM+H,UAGf,yBAAKhG,UAAU,aACX,yBAAKA,UAAU,SAASU,QAAS,WAAQhB,EAAaC,UAClD,8BAAOZ,EAAE,kB,GAxBX7B,IAAMC,WAgC5B4I,EAAQ7E,aAAe,CACnBnC,EAAG,cASQ6B,kBAAU,UAAW,CAAEC,MAAM,GAA7BD,CAAqCmF,GCzC9CE,E,kDAEF,WAAYlK,GACX,IAAD,8BACI,cAAMA,IACDC,MAAQ,GAFjB,E,qDAMC,IAAD,EACyBC,KAAKF,MAAlBkC,EADZ,EACYA,MAAOc,EADnB,EACmBA,EACTmH,EAAS,WAEX,OAAQjI,EAAMkC,MAEV,IAAK,WACD,OAAOpB,EAAE,qBACb,IAAK,WACD,OAAOA,EAAE,qBACb,IAAK,YACD,OAAOA,EAAE,sBACb,QACI,MAAO,KAGnB,OACI,6BACI,yBAAKiB,UAAU,eACVkG,IAAyB,aAAfjI,EAAMkC,KAAsBlC,EAAMoG,UAAUe,MAAQnH,EAAM+G,QAAQI,OAEjF,yBAAKpF,UAAU,iBACX,yBAAKA,UAAU,UACX,6BAEI,6BAAqB,aAAf/B,EAAMkC,KAAN,UAA+BlC,EAAMoG,UAAUO,OAA/C,YAAyD3G,EAAMoG,UAAUe,OAAzE,UAAsFnH,EAAM+G,QAAQJ,OAApG,YAA8G3G,EAAM+G,QAAQI,QAClI,6BAAMrG,EAAE,OAAR,WAAmBuG,YAASrH,EAAMsH,KAAlC,QACA,6BAAMxG,EAAE,OAAR,WAAmBd,EAAMgH,IAAN,UAAehH,EAAMgH,IAArB,YAA4BhH,EAAM+G,QAAQI,OAAU,IAE3E,yBAAKI,IAAI,uBAAuBC,IAAI,aAG5C,yBAAKzF,UAAU,aACX,yBAAKA,UAAU,SAASU,QAAS,WAAQzC,EAAMgF,SAC3C,8BAAOiD,IAAyB,aAAfjI,EAAMkC,KAAsBlC,EAAMoG,UAAUe,MAAQnH,EAAM+G,QAAQI,c,GA3CpFlI,IAAMC,WAmD7B8I,EAAS/E,aAAe,CACpBnC,EAAG,cAQQ6B,kBAAU,UAAW,CAAEC,MAAM,GAA7BD,CAAqCqF,GC5D9CE,E,kDAEF,WAAYpK,GACX,IAAD,8BACI,cAAMA,IACDC,MAAQ,GAFjB,E,qDAMC,IAAD,EACyBC,KAAKF,MAAlBkC,EADZ,EACYA,MAAOc,EADnB,EACmBA,EACf,OACI,6BACI,yBAAKiB,UAAU,eACVjB,EAAE,mBAAoBd,EAAM+G,QAAQI,OAEzC,yBAAKpF,UAAU,iBACX,yBAAKA,UAAU,UACX,6BACI,6BAAMjB,EAAE,OAAR,WAAmBuG,YAASrH,EAAMsH,KAAlC,QACA,6BAAMxG,EAAE,OAAR,qBAAsBd,EAAMgH,IAA5B,UAEJ,yBAAKO,IAAI,uBAAuBC,IAAI,aAG5C,yBAAKzF,UAAU,aACX,yBAAKA,UAAU,SAASU,QAAS,WAAQzC,EAAMgF,SAC3C,8BAAOlE,EAAE,mBAAoBd,EAAM+G,QAAQI,c,GA3B9ClI,IAAMC,WAmC3BgJ,EAAOjF,aAAe,CAClBnC,EAAG,cAQQ6B,I,EAAAA,cAAU,UAAW,CAAEC,MAAM,GAA7BD,CAAqCuF,GChC9CC,G,OADLxF,YAAU,CAAC,UAAW,CAAEC,MAAM,G,qDAG3B,WAAY9E,GACX,IAAD,8BACI,cAAMA,IACDC,MAAQ,CACTqK,KAAM,IAHd,E,gEAQC,IAAD,OACI9G,YAAW,WAEP,EAAK1B,SAAS,CACVwI,KAAM,aAEX,K,mCAIN,IAAD,EACkFpK,KAAKF,MAA3E3B,EADZ,EACYA,QAASkG,EADrB,EACqBA,QAASnG,EAD9B,EAC8BA,UAAWuF,EADzC,EACyCA,aAAczB,EADvD,EACuDA,MAAOmG,EAD9D,EAC8DA,KAAM5C,EADpE,EACoEA,UAEhE,GAAIvF,KAAKD,MAAMqK,KACf,CAEI,OAAQpK,KAAKF,MAAMuK,MAEf,IAAK,SACD,OACI,kBAAC,EAAD,CACIlM,QAASA,EACTkG,QAASA,EACTnG,UAAWA,EACXuF,aAAcA,IAG1B,IAAK,SACD,OACI,kBAAC,EAAD,CACItF,QAASA,EACTkG,QAASA,EACTnG,UAAWA,EACXuF,aAAcA,EACd8B,UAAWA,IAGvB,IAAK,WACD,OACI,kBAAC,EAAD,CACIpH,QAASA,EACTkG,QAASA,EACTZ,aAAcA,EACdvF,UAAWA,IAGvB,IAAK,aACD,OACI,kBAAC,EAAD,CACI8D,MAAOA,EACPyB,aAAcA,EACd0E,KAAMA,EACNhK,QAASA,IAGrB,IAAK,cACD,OACI,kBAAC,EAAD,CACIA,QAASA,EACT6D,MAAOA,IAGnB,IAAK,cACD,OACI,kBAAC,EAAD,CACIA,MAAOA,IAGnB,IAAK,gBACD,OACI,kBAAC,EAAD,CACIyB,aAAcA,EACdzB,MAAOA,IAInB,IAAK,eACD,OACI,kBAAC,EAAD,CACIyB,aAAcA,EACdzB,MAAOA,EACPmG,KAAMA,EACNhK,QAASA,IAGrB,IAAK,WACD,OACI,kBAAC,EAAD,CACIsF,aAAcA,EACdzB,MAAOA,EACPmG,KAAMA,EACNhK,QAASA,IAGrB,IAAK,SACD,OACI,kBAAC,EAAD,CACIsF,aAAcA,EACdzB,MAAOA,EACPmG,KAAMA,EACNhK,QAASA,IAGrB,IAAK,UACD,OACI,kBAAC,EAAD,CACIsF,aAAcA,EACdzB,MAAOA,IAMvB,OAlGW,KAsGX,OAAO,O,+BAKd,IAAD,OACI,OACI,yBAAK+B,UAAS,kBAAa/D,KAAKD,MAAMqK,OAGlC,yBAAKrG,UAAU,WAGX,yBAAKA,UAAU,QACX,yBACIU,QAAS,WAEL,GAAI,EAAK3E,MAAMwK,KAAM,OAAO,EAAKxK,MAAMyF,UAAU,EAAKzF,MAAMkC,MAAMX,SAClE,EAAKvB,MAAM2D,aAAaC,UAG5B,yBAAK6F,IAAI,yBAAyBC,IAAI,YAK9C,yBAAKzF,UAAU,WACV/D,KAAKuK,oB,GA3JVtJ,IAAMC,a,GAoK1BiJ,EAAMlF,aAAe,CACjBoF,KAAM,GACNrI,MAAO,GACPsI,MAAM,GAeKH,QCjMTK,G,yDAEF,WAAY1K,GACX,IAAD,8BACI,cAAMA,IACDC,MAAQ,CACTiF,MAAO,IAHf,E,gEAQC,IAAD,OACI1B,YAAW,WAEP,EAAK1B,SAASC,IAAO,EAAK9B,MAAO,CAC7BiF,MAAO,CAAElD,KAAM,eAEpB,K,+BAKH,OACI,yBAAKiC,UAAS,kBAAa/D,KAAKD,MAAMiF,QACjChF,KAAKF,MAAMuB,a,GAxBRJ,IAAMC,YA8B1BsJ,EAAMvF,aAAe,CACjB5D,QAAS,IAOEmJ,QC1BAC,G,OAdC,SAAC3K,GAEb,OACI,yBAAKiE,UAAU,aACX,2BAAIjE,EAAM4K,OACV,yBAAK3G,UAAU,cCArB4G,G,kDAEF,WAAY7K,GACX,IAAD,8BACI,cAAMA,IACDC,MAAQ,CACT6K,OAAO,EACPP,KAAM,GACNrI,MAAO,GACP6I,OAAO,EACPC,aAAc,IAGlB,EAAKC,UAAY,EAAKA,UAAUvJ,KAAf,gBACjB,EAAKwJ,WAAa,EAAKA,WAAWxJ,KAAhB,gBAClB,EAAK+D,UAAY,EAAKA,UAAU/D,KAAf,gBAEjB,EAAKiC,aAAe,CAChBqD,KAAM,EAAKiE,UACXrH,MAAO,EAAKsH,YAGhB,EAAKC,QAAU,KAnBnB,E,mEAwBIjL,KAAKiL,QAAU,O,gCAGTZ,EAAMrI,GAEZhC,KAAK4B,SAASC,IAAO7B,KAAKD,MAAO,CAC7B6K,MAAO,CAAE9I,MAAM,GACfuI,KAAM,CAAEvI,KAAMuI,GACdrI,MAAO,CAAEF,KAAME,Q,mCAMnBhC,KAAK4B,SAASC,IAAO7B,KAAKD,MAAO,CAC7B6K,MAAO,CAAE9I,MAAM,Q,gCAIboJ,GACT,IAAD,OACIlL,KAAK4B,SAASC,IAAO7B,KAAKD,MAAO,CAC7B8K,MAAO,CAAE/I,MAAM,GACfgJ,aAAc,CAAEhJ,KAAMoJ,MACtB,WAEAC,aAAa,EAAKF,SAClB,EAAKA,QAAU3H,YAAW,WAElB,EAAKvD,MAAM8K,OAEX,EAAKjJ,SAASC,IAAO,EAAK9B,MAAO,CAC7B8K,MAAO,CAAE/I,MAAM,QAGxB,W,oCAMP,OAAI9B,KAAKD,MAAM6K,MAEJQ,uBACH,kBAAC,EAAD,CACIf,KAAMrK,KAAKD,MAAMsK,KACjBrI,MAAOhC,KAAKD,MAAMiC,MAClByB,aAAczD,KAAKyD,aACnBtF,QAAS6B,KAAKF,MAAM3B,QACpBkG,QAASrE,KAAKF,MAAMuE,QACpBnG,UAAW8B,KAAKF,MAAM5B,UACtBoM,KAAMtK,KAAKF,MAAMwK,KACjB/E,UAAWvF,KAAKuF,UAChB4C,KAAMnI,KAAKF,MAAMqI,OAErBkD,SAASC,qBAAqB,QAAQ,IAKnC,O,sCAMX,OAAItL,KAAKF,MAAMuE,QAEJ,kBAAC,EAAD,CAASqG,MAAO1K,KAAKF,MAAMuB,UAI3B,O,oCAMX,OAAIrB,KAAKD,MAAM8K,MAEJO,uBACH,kBAAC,EAAD,CACI/J,QAASrB,KAAKD,MAAM+K,eAExBO,SAASC,qBAAqB,QAAQ,IAKnC,O,+BAOX,OACI,6BACKtL,KAAKuL,cACLvL,KAAKwL,cAELxL,KAAKF,MAAM2L,SAASzL,KAAKyD,aAAczD,KAAKuF,WAC5CvF,KAAK0L,qB,GAjIEzK,IAAMC,WAuI9ByJ,GAAU1F,aAAe,CACrB9G,QAAS,GACTkD,QAAS,GACTgD,SAAS,EACTiG,MAAM,EACNpM,UAAW,GACXiK,KAAM,IAaKwC,Q","file":"static/js/3.2c534355.chunk.js","sourcesContent":["import * as rpc from './rpc';\n\nlet timmer;\n\n// export const setIO = (url) =>\n// {\n//     Io = io(url);\n// };\n\nconst refreshInterval = (actions) =>\n{\n    timmer = setInterval(() =>\n    {\n        actions.userActions.accountGet$();\n    }, 15000);\n};\n\nexport const loginIO = (wallet, password, key, tokenList, actions, testWallet, testKey) =>\n{\n    return new Promise((resolve) =>\n    {\n        const { userActions } = actions;\n        if (key)\n        {\n            userActions.userGet$({ wallet, password, key });\n        }\n        else\n        {\n            userActions.userGet$({ wallet, observer: true });\n        }\n\n        window.dbObj.ref('operatorBooks').orderByChild('user').equalTo(`0x${wallet.address}`).on('value', (snapshot) =>\n        {\n            userActions.historyGet$(Object.values(snapshot.val() || []));\n        });\n\n        // actions.userActions.accountGet$();\n\n        // show money for test\n        if (testWallet)\n        {\n            rpc.showMeMoney(testWallet.address, wallet.address, testKey).then(() =>\n            {\n                // this.refreshInterval();\n            });\n        }\n        refreshInterval(actions);\n        resolve();\n    });\n};\n\nexport const clearTimeInterval = () =>\n{\n    clearInterval(timmer);\n};\n\n","/* eslint-disable no-undef */\nimport React from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport PropTypes from 'prop-types';\n\nconst connectFirebase = (WrapComponent) =>\n{\n    class ConnectFirebase extends React.Component\n    {\n        constructor(props)\n        {\n            super(props);\n            this.state = {};\n        }\n\n        componentDidMount()\n        {\n            const { actions } = this.props;\n            const { bookActions, userActions, modalActions } = actions;\n            const $this = this;\n\n            if (!firebase.apps.length)\n            {\n                firebase.initializeApp(finalConfig.fdb);\n                window.dbObj = firebase.database();\n            }\n\n            // 初始tokenList陣列\n            window.dbObj.ref('tokenList').once('value', (v) =>\n            {\n                if (v.val())\n                {\n                    bookActions.tokenListGet(v.val());\n                }\n            });\n\n            // 監聽所有交易對和匯率\n            window.dbObj.ref('tradeList').on('value', (v) =>\n            {\n                if (v.val())\n                {\n                    bookActions.tradeListGet(v.val());\n                    // modalActions.updateLoading(true);\n                    bookActions.bookGet$();\n                }\n            });\n\n            // 監聽所有成交\n            window.dbObj.ref('priceBooks').on('value', (v) =>\n            {\n                if (v.val())\n                {\n                    bookActions.recentTransactionGet$(Object.values(v.val()));\n                }\n            });\n\n            // Deprecated: Get order book from contract\n            // 監聽所有掛單\n            // window.dbObj.ref('orderBooks').on('value', (v) =>\n            // {\n            //     const { user } = $this.props;\n            //     if (v.val())\n            //     {\n            //         bookActions.bookGet$(Object.values(v.val()));\n            //         if (user.wallet)\n            //         {\n            //             userActions.myBooksGet$(v);\n            //         }\n            //     }\n            // });\n        }\n\n        componentWillUnmount()\n        {\n            window.dbObj.ref('tokenList').off('value');\n            window.dbObj.ref('tradeList').off('value');\n            window.dbObj.ref('priceBooks').off('value');\n            window.dbObj.ref('orderBooks').off('value');\n        }\n\n        render()\n        {\n            return (\n                <WrapComponent {...this.props} />\n            );\n        }\n    }\n\n    ConnectFirebase.propTypes = {\n        tokenList: PropTypes.array.isRequired,\n        actions: PropTypes.object.isRequired,\n        user: PropTypes.object.isRequired,\n        from: PropTypes.object.isRequired,\n        to: PropTypes.object.isRequired\n    };\n    return ConnectFirebase;\n};\n\nexport default connectFirebase;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport { translate } from 'react-i18next';\n\nimport { loginIO } from '../../utils/login';\n\nclass ImportWallet extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            downloadHref: '',\n            password: '',\n            wallet: '',\n            message: '',\n            passwordType: true // if true, type === 'password'\n        };\n\n        this.readFile = this.readFile.bind(this);\n        this.submitImport = this.submitImport.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n\n        this.wallet = null;\n    }\n\n    handleChange(e)\n    {\n        this.setState(update(this.state, {\n            password: { $set: e.target.value },\n            message: { $set: '' }\n        }));\n    }\n\n    readFile()\n    {\n        const file = this.import.files[0];\n        const reader = new FileReader();\n\n        reader.onload = (() =>\n        {\n            return (e) =>\n            {\n                this.wallet = JSON.parse(e.target.result);\n                this.setState(update(this.state, {\n                    wallet: { $set: this.wallet },\n                    message: { $set: '' }\n                }));\n                let keys = Object.keys(this.wallet).map(v => v.toLowerCase());\n                if (keys.indexOf('address') === -1 || keys.indexOf('id') === -1 || keys.indexOf('crypto') === -1)\n                {\n                    const { t } = this.props;\n                    this.setState(update(this.state, {\n                        message: { $set: t('walletError') }\n                    }));\n                }\n                this.import.value = '';\n            };\n        })(file);\n        reader.readAsText(file);\n    }\n\n    submitImport()\n    {\n        const { actions, t, tokenList } = this.props;\n        const { wallet, password } = this.state;\n\n        if (!this.wallet) return this.setState(update(this.state, { message: { $set: t('importAlert') } }));\n        const recoverKey = () =>\n        {\n            return new Promise((resolve, reject) =>\n            {\n                const worker = new Worker('/js/recoverKeyWorker.js');\n                worker.onmessage = (e) =>\n                {\n                    setTimeout(() =>\n                    {\n                        if (e.data === 'error') reject();\n                        this.key = e.data;\n                        resolve(this.key);\n                    }, 300);\n                };\n                worker.postMessage({ wallet, password });\n            });\n        };\n\n        actions.modalActions.updateLoading(true);\n        actions.modalActions.updateMessage(t('importing'));\n\n        return recoverKey().then(() =>\n        {\n            this.setState(update(this.state, {\n                downloadHref: { $set: '' }\n            }));\n            loginIO(wallet, password, this.key, tokenList, actions, '', '').then(() =>\n            {\n                actions.modalActions.updateLoading(false);\n                this.props.modalControl.close();\n            });\n        }).catch((err) =>\n        {\n            console.warn(err);\n            this.setState(update(this.state, {\n                message: { $set: t('importError') }\n            }));\n            actions.modalActions.updateLoading(false);\n        });\n    }\n\n    render()\n    {\n        const { passwordType, wallet, message } = this.state;\n        const { t } = this.props;\n\n        return (\n            <div className=\"c_importWallet\">\n                <p className=\"modal-title\">\n                    {t('importWallet')}\n                </p>\n                <a className=\"import\">\n                    <input className=\"import-input\" ref={(input) => { this.import = input; }} accept=\".json\" type=\"file\" onChange={this.readFile} disabled={this.props.loading} />\n                    {t('importWallet')}\n                </a>\n                <div className=\"modal-content\">\n                    <div className=\"address\">\n                        <div>{t('address')}</div>\n                        <div>{wallet.address ? wallet.address : ''}</div>\n                    </div>\n                    <div className=\"modal-input\">\n                        <label htmlFor=\"password\">\n                            {t('yourPassword')}\n                        </label>\n                        <div className={message === '' ? '' : 'error'} data-message={message}>\n                            <input type={passwordType ? 'password' : 'text'} onChange={this.handleChange} disabled={this.props.loading} required />\n                        </div>\n                    </div>\n                    <div>\n                        <label htmlFor=\"show-password\">\n                            <input type=\"checkbox\" onChange={() => { this.setState(update(this.state, { passwordType: { $set: !this.state.passwordType } })); }} />\n                            &nbsp;&nbsp;{t('showPassword')}\n                        </label>\n                    </div>\n                </div>\n                <div className=\"modal-btn\">\n                    <div className=\"button\" onClick={this.props.modalControl.close}>\n                        <span>{t('cancel')}</span>\n                    </div>\n                    <div className=\"button\" onClick={this.submitImport}>\n                        <span>{t('import')}</span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nImportWallet.defaultProp = {\n    t: () => {}\n};\n\nImportWallet.propTypes = {\n    t: PropTypes.func.isRequired,\n    actions: PropTypes.object.isRequired,\n    loading: PropTypes.bool.isRequired,\n    modalControl: PropTypes.object.isRequired,\n    tokenList: PropTypes.array.isRequired\n};\n\nexport default translate('account', { wait: true })(ImportWallet);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport zxcvbn from 'zxcvbn';\nimport './passwordMeter.scss';\n\nclass PasswordMeter extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {};\n    }\n\n    render()\n    {\n        const { password } = this.props;\n        const style = () =>\n        {\n            if (password === '') return 'none';\n            switch (zxcvbn(password).score)\n            {\n                case 0:\n                    return 'risk';\n                case 1:\n                    return 'weak';\n                case 2:\n                    return 'normal';\n                case 3:\n                    return 'safly';\n                case 4:\n                    return 'strong';\n                default:\n                    return 'none';\n            }\n        };\n\n        return (\n            <div className=\"c_password-meter\">\n                <div className={style()} />\n            </div>\n        );\n    }\n}\n\nPasswordMeter.defaultProps = {\n    t: () => {}\n};\n\nPasswordMeter.propTypes = {\n    password: PropTypes.string.isRequired\n};\n\nexport default translate()(PasswordMeter);\n","import React from 'react';\nimport { translate } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\n\nimport { loginIO } from '../../utils/login';\nimport PasswordMeter from '../passwordMeter/passwordMeter';\n\n\nclass CreateWallet extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            password: '',\n            passwordType: true // if true, type === 'password'\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.submitCreate = this.submitCreate.bind(this);\n    }\n\n    componentDidMount()\n    {\n        window.onbeforeunload = (e) =>\n        {\n            if (this.state.download)\n            {\n                const dialogText = 'Dialog text here';\n                e.returnValue = dialogText;\n                return dialogText;\n            }\n        };\n    }\n\n    componentWillUnmount()\n    {\n        window.onbeforeunload = null;\n    }\n\n    handleChange(e)\n    {\n        this.setState(update(this.state, {\n            password: { $set: e.target.value }\n        }));\n    }\n\n    submitCreate()\n    {\n        const { actions, modalControl, t } = this.props;\n        if (this.state.password.length < 8) return this.props.toastOpen(t('passwordRequired'));\n\n        const create = () =>\n        {\n            actions.modalActions.updateLoading(true);\n            actions.modalActions.updateMessage(this.props.t('creating'));\n            const createKey = () =>\n            {\n                return new Promise((resolve, reject) =>\n                {\n                    const password = this.state.password;\n                    const worker = new Worker('/js/createKeyWorker.js');\n                    worker.onmessage = (e) =>\n                    {\n                        setTimeout(() =>\n                        {\n                            if (e.data.error) reject(e.data.error);\n                            resolve(e.data);\n                        }, 300);\n                    };\n                    worker.postMessage({ password });\n                });\n            };\n\n            return createKey().then((res) =>\n            {\n                this.key = res.key;\n\n                const testWallet = { address: 'da5acb19966aff9b4d9cf96800de46f7ffa93db5', crypto: { cipher: 'aes-128-ctr', ciphertext: '093c35acd2fe31abad157d9895a52ab41d9d063ac3060eb89dc50134f7150890', cipherparams: { iv: 'c6cf2f52298b7c565522465d99d5735b' }, mac: 'fba07854d84acc672aedddee1a394115c8b3f6bbc5a4d99b4f1455e32269cea3', kdf: 'scrypt', kdfparams: { dklen: 32, n: 262144, r: 1, p: 8, salt: 'c55af92bf301b96bb67cddb5036b6af98293b724775d1c0675895670bb536d23' } }, id: '2a246859-80fb-4811-892e-0b81e287103d', version: 3 };\n                const testKey = '5e1bda1beb2c82e07fd2c493ce9f0b940fcea99fb757cae57f6eb8611604f407';\n                const w = !finalConfig.production ? testWallet : '';\n                const k = !finalConfig.production ? testKey : '';\n\n                loginIO(res.wallet, res.password, this.key, this.props.tokenList, this.props.actions, w, k).then(() =>\n                {\n                    if (this.state.password)\n                    {\n                        this.setState(update(this.state, {\n                            password: { $set: '' }\n                        }));\n                    }\n\n                    actions.modalActions.updateLoading(false);\n                    actions.userActions.changeKeep(true);\n                    modalControl.open('exportWallet', { wallet: res.wallet, downloadHref: `data:${res.data}`, message: t('notDownloadWallet') });\n                });\n\n\n                // loginIO(res.wallet, res.password, this.key, this.props.tokenList, this.props.actions, w, k).then(() =>\n                // {\n                //     if (this.state.password)\n                //     {\n                //         this.setState(update(this.state, {\n                //             password: { $set: '' }\n                //         }));\n                //     }\n\n                //     actions.modalActions.updateLoading(false);\n                //     actions.userActions.changeKeep(true);\n                //     modalControl.open('exportWallet', { wallet: res.wallet, downloadHref: `data:${res.data}`, message: t('notDownloadWallet') });\n                // });\n            }).catch(console.log);\n        };\n\n        if (!this.state.password)\n        {\n            return this.props.modalControl.open('checkPassword', { exec: create });\n        }\n        else\n        {\n            create();\n        }\n    }\n\n    render()\n    {\n        const { passwordType, password } = this.state;\n        const { t } = this.props;\n        return (\n            <div>\n                <p className=\"modal-title\">{t('createNew')}</p>\n                <div className=\"modal-content\">\n                    <div className=\"modal-input\">\n                        <label htmlFor=\"password\">\n                            {t('setPassword')}\n                        </label>\n                        <div>\n                            <input type={passwordType ? 'password' : 'text'} onChange={this.handleChange} placeholder={t('enterPassword')} disabled={this.props.loading} />\n                        </div>\n                    </div>\n                    <div className=\"meter\">\n                        <PasswordMeter password={password} />\n                        <p>({t('passwordRequired')})</p>\n                    </div>\n                    <div>\n                        <label htmlFor=\"show-password\">\n                            <input type=\"checkbox\" onChange={() => { this.setState(update(this.state, { passwordType: { $set: !this.state.passwordType } })); }} />\n                            &nbsp;&nbsp;{t('showPassword')}\n                        </label>\n                    </div>\n                </div>\n                <div className=\"modal-btn\">\n                    <div className=\"button\" onClick={this.props.modalControl.close}>\n                        <span>{t('cancel')}</span>\n                    </div>\n                    <div className=\"button\" onClick={this.submitCreate}>\n                        <span>{t('create')}</span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nCreateWallet.defaultProps = {\n    t: () => {}\n};\n\nCreateWallet.propTypes = {\n    t: PropTypes.func,\n    actions: PropTypes.object.isRequired,\n    tokenList: PropTypes.array.isRequired,\n    modalControl: PropTypes.object.isRequired,\n    loading: PropTypes.bool.isRequired,\n    toastOpen: PropTypes.func.isRequired\n};\n\nexport default translate('account', { wait: true })(CreateWallet);\n","import React from 'react';\nimport { translate } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport QRCode from 'qrcode.react';\n\nclass ExportWallet extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {};\n    }\n\n    componentDidMount()\n    {\n        window.onbeforeunload = (e) =>\n        {\n            if (this.state.download)\n            {\n                const dialogText = 'Dialog text here';\n                e.returnValue = dialogText;\n                return dialogText;\n            }\n        };\n    }\n\n    componentWillUnmount()\n    {\n        window.onbeforeunload = null;\n    }\n\n    render()\n    {\n        const { t, value } = this.props;\n\n        return (\n            <div>\n                <p className=\"modal-title\">{t('createNew')}</p>\n                <div className=\"modal-content\">\n                    <div>\n                        <div>\n                            {t('yourWallet')}\n                        </div>\n                        <div>\n                            {`0x${value.wallet.address.replace('0x', '')}`}\n                        </div>\n                    </div>\n                    <div className=\"canvas\">\n                        <div className=\"qrcode\">\n                            <QRCode value={JSON.stringify(value.wallet)} size={120} />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"modal-btn\">\n                    <a\n                        href={value.downloadHref}\n                        download=\"keyStore.json\"\n                        className=\"button margin-none\"\n                        target={/iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream ? '_blank' : ''}\n                        onClick={() => { this.props.modalControl.close(); this.props.actions.userActions.changeKeep(false); }}\n                    >\n                        <span>\n                            {t('downloadWallet')}\n                        </span>\n                    </a>\n                </div>\n            </div>\n        );\n    }\n}\n\nExportWallet.defaultProps = {\n    t: () => {}\n};\n\nExportWallet.propTypes = {\n    t: PropTypes.func,\n    actions: PropTypes.object.isRequired,\n    modalControl: PropTypes.object.isRequired,\n    value: PropTypes.object.isRequired,\n};\n\nexport default translate('account', { wait: true })(ExportWallet);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport { translate } from 'react-i18next';\n\nimport { loginIO } from '../../utils/login';\n\nclass Observer extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            address: '',\n            message: ''\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.submit = this.submit.bind(this);\n    }\n\n    handleChange(e)\n    {\n        this.setState(update(this.state, {\n            address: { $set: e.target.value },\n            message: { $set: '' }\n        }));\n    }\n\n    submit()\n    {\n        const { t, actions, tokenList, modalControl } = this.props;\n        const { address } = this.state;\n\n        if (address === '') return;\n\n        const regex = /^0x[a-fA-F0-9]{40}$/;\n        const regexShort = /[a-fA-F0-9]{40}$/;\n\n        if (!regex.test(address) && !regexShort.test(address))\n        {\n            this.setState(update(this.state, {\n                message: { $set: t('addressFormatError') }\n            }));\n        }\n        else\n        {\n            const value = address.replace('0x', '');\n            const wallet = { address: value.toLowerCase() };\n            loginIO(wallet, '', '', tokenList, actions).then(() =>\n            {\n                modalControl.close();\n            });\n        }\n    }\n\n    render()\n    {\n        const { t } = this.props;\n        const { message } = this.state;\n\n        return (\n            <div className=\"c_observer\">\n                <div className=\"modal-title\">\n                    {t('enterAddress')}\n                </div>\n                <div className=\"modal-content\">\n                    <div>{t('observeEnter')}</div>\n                    <div className=\"modal-input\">\n                        <label htmlFor=\"address\">{t('enterAddress')}</label>\n                        <div className={message === '' ? '' : 'error'} data-message={message} >\n                            <input id=\"address\" type=\"text\" value={this.state.address} onChange={this.handleChange} />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"modal-btn\">\n                    <div className=\"button\" onClick={this.submit}>\n                        <span>\n                            {t('importAddress')}\n                        </span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nObserver.defaultProp = {\n    t: () => {}\n};\n\nObserver.propTypes = {\n    t: PropTypes.func.isRequired,\n    actions: PropTypes.object.isRequired,\n    modalControl: PropTypes.object.isRequired,\n    tokenList: PropTypes.array.isRequired\n};\n\nexport default translate('account', { wait: true })(Observer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport { translate } from 'react-i18next';\nimport QRCode from 'qrcode.react';\nimport { observerAllowance } from '../../utils/rpc';\nimport { bnHex } from '../../utils/format';\n\nclass ObserverQr extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            checked: false,\n        };\n\n        this.renderBtn = this.renderBtn.bind(this);\n        this.submit = this.submit.bind(this);\n        this.check = this.check.bind(this);\n    }\n\n    componentDidMount()\n    {\n        this.check();\n    }\n\n    shouldComponentUpdate(nextProps, nextState)\n    {\n        if (nextProps.value.type === this.props.value.type && nextState.checked === this.state.checked)\n        {\n            return false;\n        }\n        else\n        {\n            return true;\n        }\n    }\n\n    async check()\n    {\n        const { value, user, actions } = this.props;\n\n        if (value.type === 'cancel')\n        {\n            this.setState(update(this.state, {\n                checked: { $set: true }\n            }));\n            actions.userActions.changeKeep(false);\n            return;\n        }\n\n        if (value.fromToken.address === finalConfig.ethAddress)\n        {\n            this.setState(update(this.state, {\n                checked: { $set: true }\n            }));\n            actions.userActions.changeKeep(false);\n            return;\n        }\n\n        // 依gasLimit檢查\n        // if (value.type === 'approveZero')\n        // {\n        //     const pass = await observerAllowance(value.fromToken, user.wallet.address);\n        //     if (parseInt(pass, 16) === 0)\n        //     {\n        //         return this.setState(update(this.state, {\n        //             checked: { $set: true }\n        //         }));\n        //     }\n        //     else\n        //     {\n        //         return setTimeout(() =>\n        //         {\n        //             this.check();\n        //         }, 5000);\n        //     }\n        // }\n        // else\n        // {\n        //     const pass = await observerCheckApprove(user.wallet.address, value.data);\n        //     console.log(pass);\n        //     if (value.type === 'approve' && parseInt(pass, 16) > 40000)\n        //     {\n        //         this.setState(update(this.state, {\n        //             checked: { $set: true }\n        //         }));\n        //     }\n        //     else if (value.type !== 'approve' && parseInt(pass, 16) < 40000)\n        //     {\n        //         this.setState(update(this.state, {\n        //             checked: { $set: true }\n        //         }));\n        //         actions.userActions.changeKeep(false);\n        //     }\n        //     else\n        //     {\n        //         setTimeout(() =>\n        //         {\n        //             this.check();\n        //         }, 5000);\n        //     }\n        // }\n\n        const pass = await observerAllowance(value.fromToken, user.wallet.address);\n        if (value.type === 'approveZero' && parseInt(pass, 16) === 0) // 如果是要approve 0的彈窗, 檢查pass為0時可下一步\n        {\n            return this.setState(update(this.state, {\n                checked: { $set: true }\n            }));\n        }\n        else if (value.type === 'approve' && parseInt(pass, 16) >= Number(bnHex(value.fromToken.amount).toString())) // 如果是approve的彈窗, 檢查pass為大於approve時可下一步\n        {\n            this.setState(update(this.state, {\n                checked: { $set: true }\n            }));\n        }\n        else if (value.type === 'sign' && parseInt(pass, 16) < Number(bnHex(value.fromToken.amount).toString())) // 如果是sendRawTransaction的彈窗, 檢查pass為小於approve時可下一步\n        {\n            this.setState(update(this.state, {\n                checked: { $set: true }\n            }));\n            actions.userActions.changeKeep(false);\n        }\n        else\n        {\n            setTimeout(() =>\n            {\n                this.check();\n            }, 5000);\n        }\n    }\n\n    submit()\n    {\n        const { value, modalControl, actions } = this.props;\n        if (!this.state.checked) return;\n        if (value.type === 'approve' || value.type === 'approveZero')\n        {\n            value.exec();\n            this.setState(update(this.state, {\n                checked: { $set: false }\n            }));\n        }\n        else\n        {\n            actions.userActions.changeKeep(false);\n            modalControl.close();\n        }\n    }\n\n    renderBtn()\n    {\n        const { checked } = this.state;\n        const { value, t } = this.props;\n        if (value.type === 'approve' || value.type === 'approveZero')\n        {\n            return (\n                <div className=\"modal-btn\">\n                    <div className={checked ? 'button' : 'block'} onClick={this.submit}>\n                        <span>\n                            {t('next')}\n                        </span>\n                    </div>\n                </div>\n            );\n        }\n        else\n        {\n            return (\n                <div className=\"modal-btn\">\n                    <div className={checked ? 'button' : 'block'} onClick={this.submit}>\n                        <span>{t('finish')}</span>\n                    </div>\n                </div>\n            );\n        }\n    }\n\n    render()\n    {\n        const { t, value } = this.props;\n        return (\n            <div className=\"c_observerQr\">\n                <div className=\"modal-title\">\n                    {(value.type === 'approve' || value.type === 'approveZero') ? t('checkBalance') : t('confirmSign')}\n                </div>\n                <div className=\"modal-content\">\n                    <p>{value.type === 'approveZero' ? t('observerFix') : t('observeConfirm')}</p>\n                </div>\n                <div className=\"canvas-holder\">\n                    <div className=\"qrcode\">\n                        <QRCode value={value.qrcode} size={200} />\n                    </div>\n                </div>\n                {this.renderBtn()}\n            </div>\n        );\n    }\n}\n\nObserverQr.defaultProps = {\n    t: () => {}\n};\n\nObserverQr.propTypes = {\n    t: PropTypes.func,\n    value: PropTypes.object.isRequired,\n    modalControl: PropTypes.object.isRequired,\n    user: PropTypes.object.isRequired,\n    actions: PropTypes.object.isRequired\n};\n\nexport default translate('account', { wait: true })(ObserverQr);\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport { scnToStr, bnHex, tenFill } from '../../utils/format';\n\nclass Transaction extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {};\n    }\n\n    render()\n    {\n        const { value, t } = this.props;\n        const { type, fromToken, toToken, fee, fromDecimal, toDecimal } = value;\n        return (\n            <div>\n                <div className=\"modal-title\">\n                    {type === 'buy' ? `${t('buy')}${toToken.token}` : `${t('sell')}${fromToken.token}`}\n                </div>\n                <div className=\"modal-content\">\n                    <div className=\"detail\">\n                        <div>\n                            <div>{t('actionMessage')}{type === 'buy' ? `${t('buy')}${toToken.token}` : `${t('sell')}${fromToken.token}`}</div>\n                            <div>{tenFill(bnHex(fromToken.amount).toString(), -fromDecimal)} {fromToken.token} : {tenFill(bnHex(toToken.amount).toString(), -toDecimal)} {toToken.token}</div>\n                            <div>{t('gas')} ≈ {scnToStr(value.gas)} ETH</div>\n                            <div>{t('fee')} ≈ {fee ? `${tenFill(fee, -toDecimal)} ${toToken.token}` : 0}</div>\n                        </div>\n                        <img src=\"/img/walletalert.png\" alt=\"wallet\" />\n                    </div>\n                </div>\n                <div className=\"modal-btn\">\n                    <button className={`submit ${type}`} onClick={() => { value.exec(); }}>\n                        {type === 'buy' ? `${t('buy')}${toToken.token}` : `${t('sell')}${fromToken.token}`}\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nTransaction.defaultProps = {\n    t: () => {}\n};\n\nTransaction.propTypes = {\n    value: PropTypes.object.isRequired,\n    t: PropTypes.func\n};\n\nexport default translate('account', { wait: true })(Transaction);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport { scnToStr, formatNumber } from '../../utils/format';\n\nclass CancelOrder extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {};\n    }\n\n    render()\n    {\n        const { t, value } = this.props;\n        return (\n            <div className=\"c_cancelOrder\">\n                <div className=\"modal-title\">\n                    {t('table.cancelOrder')}\n                </div>\n                <div className=\"modal-content\">\n                    <p className=\"cancel-item\">{`${t('table.desc')}: ${value.desc}`}</p>\n                    <p className=\"cancel-item\">{`${t('table.price')}: ${value.price}`}</p>\n                    <p className=\"cancel-item\">{`${t('table.amount')}: ${formatNumber(8, value.amount)}`}</p>\n                    <p className=\"cancel-item\">{t('table.gas')} ≈ {scnToStr(value.gas)} ETH</p>\n                </div>\n                <div className=\"modal-btn\">\n                    <div className=\"button\" onClick={value.exec}>\n                        <span>\n                            {t('table.confirm')}\n                        </span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nCancelOrder.defaultProps = {\n    t: () => {}\n};\n\nCancelOrder.propTypes = {\n    t: PropTypes.func,\n    value: PropTypes.object.isRequired,\n    // modalControl: PropTypes.object.isRequired\n};\n\nexport default translate()(CancelOrder);\n","import React from 'react';\nimport { translate } from 'react-i18next';\nimport PropTypes from 'prop-types';\n\nclass CheckPassword extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {};\n\n        this.create = this.create.bind(this);\n    }\n\n    create()\n    {\n        this.props.value.exec();\n    }\n\n    render()\n    {\n        const { t } = this.props;\n\n        return (\n            <div>\n                <div className=\"modal-content\">\n                    <p className=\"warning\">{t('creatWithoutPassWord')}</p>\n                </div>\n                <div className=\"modal-btn\">\n                    <div className=\"button\" onClick={() => { this.props.modalControl.open('create'); }}>\n                        <span>{t('cancel')}</span>\n                    </div>\n                    <div className=\"button\" onClick={this.create}>\n                        <span>{t('create')}</span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nCheckPassword.defaultProps = {\n    t: () => {}\n};\n\nCheckPassword.propTypes = {\n    t: PropTypes.func,\n    modalControl: PropTypes.object.isRequired,\n    value: PropTypes.object.isRequired\n};\n\nexport default translate('account', { wait: true })(CheckPassword);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\n\nclass Receipt extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {};\n    }\n\n    render()\n    {\n        const { value, t, modalControl } = this.props;\n        return (\n            <div>\n                <div className=\"modal-title\">\n                    {t('sent')}\n                </div>\n                <div className=\"modal-content\">\n                    <p className=\"receipt-title\">{t('txMessage')}</p>\n                    <a className=\"receipt\" href={`https://etherscan.io/tx/${value.receipt}`} target=\"_blank\">\n                        {value.receipt}\n                    </a>\n                </div>\n                <div className=\"modal-btn\">\n                    <div className=\"button\" onClick={() => { modalControl.close(); }}>\n                        <span>{t('finish')}</span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReceipt.defaultProps = {\n    t: () => {}\n};\n\nReceipt.propTypes = {\n    value: PropTypes.object.isRequired,\n    t: PropTypes.func,\n    modalControl: PropTypes.object.isRequired\n};\n\nexport default translate('account', { wait: true })(Receipt);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport { scnToStr } from '../../utils/format';\n\nclass Mortgage extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {};\n    }\n\n    render()\n    {\n        const { value, t } = this.props;\n        const method = () =>\n        {\n            switch (value.type)\n            {\n                case 'mortgage':\n                    return t('mortgage.Mortgage');\n                case 'withdraw':\n                    return t('mortgage.Withdraw');\n                case 'repayment':\n                    return t('mortgage.Repayment');\n                default:\n                    return '';\n            }\n        };\n        return (\n            <div>\n                <div className=\"modal-title\">\n                    {method()}{value.type === 'mortgage' ? value.fromToken.token : value.toToken.token}\n                </div>\n                <div className=\"modal-content\">\n                    <div className=\"detail\">\n                        <div>\n                            {/* <div>{t('actionMessage')}{value.type === 'buy' ? `${t('buy')}${value.toToken.token}` : `${t('sell')}${value.fromToken.token}`}</div> */}\n                            <div>{value.type === 'mortgage' ? `${value.fromToken.amount} ${value.fromToken.token}` : `${value.toToken.amount} ${value.toToken.token}`}</div>\n                            <div>{t('gas')} ≈ {scnToStr(value.gas)} ETH</div>\n                            <div>{t('fee')} ≈ {value.fee ? `${value.fee} ${value.toToken.token}` : 0}</div>\n                        </div>\n                        <img src=\"/img/walletalert.png\" alt=\"wallet\" />\n                    </div>\n                </div>\n                <div className=\"modal-btn\">\n                    <div className=\"button\" onClick={() => { value.exec(); }}>\n                        <span>{method()}{value.type === 'mortgage' ? value.fromToken.token : value.toToken.token}</span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMortgage.defaultProps = {\n    t: () => {}\n};\n\nMortgage.propTypes = {\n    value: PropTypes.object.isRequired,\n    t: PropTypes.func\n};\n\nexport default translate('account', { wait: true })(Mortgage);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport { scnToStr } from '../../utils/format';\n\nclass Offset extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {};\n    }\n\n    render()\n    {\n        const { value, t } = this.props;\n        return (\n            <div>\n                <div className=\"modal-title\">\n                    {t('mortgage.offset')}{value.toToken.token}\n                </div>\n                <div className=\"modal-content\">\n                    <div className=\"detail\">\n                        <div>\n                            <div>{t('gas')} ≈ {scnToStr(value.gas)} ETH</div>\n                            <div>{t('fee')} ≈ {`${value.fee} XPA`}</div>\n                        </div>\n                        <img src=\"/img/walletalert.png\" alt=\"wallet\" />\n                    </div>\n                </div>\n                <div className=\"modal-btn\">\n                    <div className=\"button\" onClick={() => { value.exec(); }}>\n                        <span>{t('mortgage.offset')}{value.toToken.token}</span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nOffset.defaultProps = {\n    t: () => {}\n};\n\nOffset.propTypes = {\n    value: PropTypes.object.isRequired,\n    t: PropTypes.func\n};\n\nexport default translate('account', { wait: true })(Offset);\n","import React from 'react';\nimport { translate } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport ImportWallet from './importWallet';\nimport CreateWallet from './createWallet';\nimport ExportWallet from './exportWallet';\nimport Observer from './observer';\nimport ObserverQr from './observerQr';\nimport Transaction from './transaction';\nimport CancelOrder from './cancelOrder';\nimport CheckPassword from './checkPassword';\nimport Receipt from './receipt';\nimport Mortgage from './mortgage';\nimport Offset from './offset';\nimport './modal.scss';\n\n@translate(['common'], { wait: true })\nclass Modal extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            fade: ''\n        };\n    }\n\n    componentDidMount()\n    {\n        setTimeout(() =>\n        {\n            this.setState({\n                fade: 'fadeIn'\n            });\n        }, 1);\n    }\n\n    renderView()\n    {\n        const { actions, loading, tokenList, modalControl, value, user, toastOpen } = this.props;\n        \n        if (this.state.fade)\n        {\n            let view = null;\n            switch (this.props.view)\n            {\n                case 'import':\n                    return (\n                        <ImportWallet\n                            actions={actions}\n                            loading={loading}\n                            tokenList={tokenList}\n                            modalControl={modalControl}\n                        />\n                    );\n                case 'create':\n                    return (\n                        <CreateWallet\n                            actions={actions}\n                            loading={loading}\n                            tokenList={tokenList}\n                            modalControl={modalControl}\n                            toastOpen={toastOpen}\n                        />\n                    );\n                case 'observer':\n                    return (\n                        <Observer\n                            actions={actions}\n                            loading={loading}\n                            modalControl={modalControl}\n                            tokenList={tokenList}\n                        />\n                    );\n                case 'observerQr':\n                    return (\n                        <ObserverQr\n                            value={value}\n                            modalControl={modalControl}\n                            user={user}\n                            actions={actions}\n                        />\n                    );\n                case 'transaction':\n                    return (\n                        <Transaction\n                            actions={actions}\n                            value={value}\n                        />\n                    );\n                case 'cancelOrder':\n                    return (\n                        <CancelOrder\n                            value={value}\n                        />\n                    );\n                case 'checkPassword':\n                    return (\n                        <CheckPassword\n                            modalControl={modalControl}\n                            value={value}\n                        />\n                    );\n\n                case 'exportWallet':\n                    return (\n                        <ExportWallet\n                            modalControl={modalControl}\n                            value={value}\n                            user={user}\n                            actions={actions}\n                        />\n                    );\n                case 'mortgage':\n                    return (\n                        <Mortgage\n                            modalControl={modalControl}\n                            value={value}\n                            user={user}\n                            actions={actions}\n                        />\n                    );\n                case 'offset':\n                    return (\n                        <Offset\n                            modalControl={modalControl}\n                            value={value}\n                            user={user}\n                            actions={actions}\n                        />\n                    );\n                case 'receipt':\n                    return (\n                        <Receipt\n                            modalControl={modalControl}\n                            value={value}\n                        />\n                    );\n                default:\n            }\n\n            return view;\n        }\n        else\n        {\n            return null;\n        }\n    }\n\n    render()\n    {\n        return (\n            <div className={`c_modal ${this.state.fade}`}>\n\n                {/* content */}\n                <div className=\"content\">\n\n                    {/* head */}\n                    <div className=\"head\">\n                        <div\n                            onClick={() =>\n                            {\n                                if (this.props.keep) return this.props.toastOpen(this.props.value.message);\n                                this.props.modalControl.close();\n                            }}\n                        >\n                            <img src=\"/img/icon/ic-close.svg\" alt=\"close\" />\n                        </div>\n                    </div>\n\n                    {/* content */}\n                    <div className=\"content\">\n                        {this.renderView()}\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nModal.defaultProps = {\n    view: {},\n    value: {},\n    keep: false\n};\n\nModal.propTypes = {\n    view: PropTypes.string,\n    actions: PropTypes.object.isRequired,\n    loading: PropTypes.bool.isRequired,\n    tokenList: PropTypes.array.isRequired,\n    modalControl: PropTypes.object.isRequired,\n    value: PropTypes.object,\n    keep: PropTypes.bool,\n    toastOpen: PropTypes.func.isRequired,\n    user: PropTypes.object.isRequired\n};\n\nexport default Modal;\n","import React from 'react';\nimport update from 'immutability-helper';\nimport PropTypes from 'prop-types';\n\nimport './toast.scss';\n\nclass Toast extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            style: ''\n        };\n    }\n\n    componentDidMount()\n    {\n        setTimeout(() =>\n        {\n            this.setState(update(this.state, {\n                style: { $set: 'fadeIn' }\n            }));\n        }, 1);\n    }\n\n    render()\n    {\n        return (\n            <div className={`c_toast ${this.state.style}`}>\n                {this.props.message}\n            </div>\n        );\n    }\n}\n\nToast.defaultProps = {\n    message: ''\n};\n\nToast.propTypes = {\n    message: PropTypes.string\n};\n\nexport default Toast;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './loading.scss';\n\nconst Loading = (props) =>\n{\n    return (\n        <div className=\"c_loading\">\n            <p>{props.title}</p>\n            <div className=\"loader\" />\n        </div>\n    );\n};\n\nLoading.propTypes = {\n    title: PropTypes.string.isRequired\n};\n\nexport default Loading;\n\n","import React from 'react';\nimport update from 'immutability-helper';\nimport PropTypes from 'prop-types';\nimport { createPortal } from 'react-dom';\n\nimport Modal from '../../components/modal/modal';\nimport Toast from '../../components/toast/toast';\nimport Loading from '../../components/loading/loading';\n\nclass WithPopup extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            modal: false,\n            view: '',\n            value: '',\n            toast: false,\n            toastMessage: ''\n        };\n\n        this.modalOpen = this.modalOpen.bind(this);\n        this.modalClose = this.modalClose.bind(this);\n        this.toastOpen = this.toastOpen.bind(this);\n\n        this.modalControl = {\n            open: this.modalOpen,\n            close: this.modalClose\n        };\n\n        this.timeout = null;\n    }\n\n    componentWillUnmount()\n    {\n        this.timeout = null;\n    }\n\n    modalOpen(view, value)\n    {\n        this.setState(update(this.state, {\n            modal: { $set: true },\n            view: { $set: view },\n            value: { $set: value }\n        }));\n    }\n\n    modalClose()\n    {\n        this.setState(update(this.state, {\n            modal: { $set: false }\n        }));\n    }\n\n    toastOpen(m)\n    {\n        this.setState(update(this.state, {\n            toast: { $set: true },\n            toastMessage: { $set: m }\n        }), () =>\n        {\n            clearTimeout(this.timeout);\n            this.timeout = setTimeout(() =>\n            {\n                if (this.state.toast)\n                {\n                    this.setState(update(this.state, {\n                        toast: { $set: false },\n                    }));\n                }\n            }, 2500);\n        });\n    }\n\n    renderModal()\n    {\n        if (this.state.modal)\n        {\n            return createPortal(\n                <Modal\n                    view={this.state.view}\n                    value={this.state.value}\n                    modalControl={this.modalControl}\n                    actions={this.props.actions}\n                    loading={this.props.loading}\n                    tokenList={this.props.tokenList}\n                    keep={this.props.keep}\n                    toastOpen={this.toastOpen}\n                    user={this.props.user}\n                />,\n                document.getElementsByTagName('body')[0],\n            );\n        }\n        else\n        {\n            return null;\n        }\n    }\n\n    renderLoading()\n    {\n        if (this.props.loading)\n        {\n            return <Loading title={this.props.message} />;\n        }\n        else\n        {\n            return null;\n        }\n    }\n\n    renderToast()\n    {\n        if (this.state.toast)\n        {\n            return createPortal(\n                <Toast\n                    message={this.state.toastMessage}\n                />,\n                document.getElementsByTagName('body')[0],\n            );\n        }\n        else\n        {\n            return null;\n        }\n    }\n\n\n    render()\n    {\n        return (\n            <div>\n                {this.renderModal()}\n                {this.renderToast()}\n\n                {this.props.children(this.modalControl, this.toastOpen)}\n                {this.renderLoading()}\n            </div>\n        );\n    }\n}\n\nWithPopup.defaultProps = {\n    actions: {},\n    message: '',\n    loading: false,\n    keep: false,\n    tokenList: [],\n    user: {}\n};\n\nWithPopup.propTypes = {\n    children: PropTypes.func.isRequired,\n    actions: PropTypes.object,\n    message: PropTypes.string,\n    loading: PropTypes.bool,\n    keep: PropTypes.bool,\n    tokenList: PropTypes.array,\n    user: PropTypes.object,\n};\n\nexport default WithPopup;\n"],"sourceRoot":""}