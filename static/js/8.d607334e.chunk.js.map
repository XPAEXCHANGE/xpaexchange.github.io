{"version":3,"sources":["components/footer/footer.js","utils/login.js","components/prompt/prompt.js","hoc/connectFirebase.js","components/login/login.js","actions/mortgage.js","components/modal/importWallet.js","components/passwordMeter/passwordMeter.js","components/modal/createWallet.js","components/modal/exportWallet.js","components/modal/observer.js","components/modal/observerQr.js","components/modal/transaction.js","components/modal/cancelOrder.js","components/modal/checkPassword.js","components/modal/receipt.js","components/modal/mortgage.js","components/modal/offset.js","components/modal/modal.js","components/toast/toast.js","components/loading/loading.js","components/withPopup/withPopup.js","actions/news.js","components/orderBook/orderBook.js","components/deepChart/deepChart.js","components/priceChart/priceChart.js","components/content/content.js","components/limitTransaction/limitTransaction.js","components/marketTransaction/marketTransaction.js","components/account/account.js","components/recentTransaction/recentTransaction.js","components/orders/orders.js","components/myTransaction/myTransaction.js","components/tideWallet/tideWallet.js","components/tab/tab.js","components/mortgageLink/mortgageLink.js","containers/index/index.js"],"names":["translate","href","target","rel","src","alt","loginIO","wallet","password","key","tokenList","actions","testWallet","testKey","Promise","resolve","userActions","userGet$","observer","window","dbObj","ref","orderByChild","equalTo","address","on","snapshot","historyGet$","Object","values","val","rpc","then","setInterval","accountGet$","refreshInterval","Prompt","props","className","type","message","defaultProps","connectFirebase","WrapComponent","state","this","bookActions","modalActions","firebase","apps","length","initializeApp","finalConfig","fdb","database","once","v","tokenListGet","getFillBook$","bookGet$","recentTransactionGet$","off","React","Component","Login","importWallet","bind","createWallet","observe","nextProps","nextState","equal","modalControl","open","t","_login","onClick","aria-hidden","wait","changeMortgageRate","userAddress","dispatch","a","getMortgageRate","data","types","changeEquivalentAmount","getEquvialentAmount","changeUsableAmount","getAmount","changeLoanAmount","changeRemainingAmount","changeUsableXPA","getUsableXPA","mortgageLogout","changeMortgagePrice","getMortgagePrice","ImportWallet","downloadHref","passwordType","readFile","submitImport","handleChange","e","setState","update","$set","value","file","import","files","reader","FileReader","onload","JSON","parse","result","keys","map","toLowerCase","indexOf","readAsText","updateLoading","updateMessage","reject","worker","Worker","onmessage","setTimeout","postMessage","close","catch","err","console","warn","input","accept","onChange","disabled","loading","htmlFor","data-message","required","defaultProp","PasswordMeter","zxcvbn","score","style","CreateWallet","submitCreate","onbeforeunload","download","returnValue","toastOpen","create","error","res","w","production","crypto","cipher","ciphertext","cipherparams","iv","mac","kdf","kdfparams","dklen","n","r","p","salt","id","version","k","changeKeep","log","exec","placeholder","ExportWallet","replace","stringify","size","test","navigator","userAgent","MSStream","Observer","submit","ObserverQr","checked","renderBtn","check","user","fromToken","ethAddress","observerAllowance","pass","parseInt","Number","bnHex","amount","toString","qrcode","Transaction","toToken","fee","fromDecimal","toDecimal","token","tenFill","scnToStr","gas","CancelOrder","desc","price","formatNumber","CheckPassword","Receipt","receipt","Mortgage","method","Offset","Modal","fade","view","keep","renderView","Toast","Loading","title","WithPopup","modal","toast","toastMessage","modalOpen","modalClose","timeout","m","clearTimeout","createPortal","document","getElementsByTagName","renderModal","renderToast","children","renderLoading","news","getNews","fetch","source","apiKey","query","body","articles","OrderBookBuy","getPrice","book","querySelector","reverse","scrollIntoView","block","myTransaction","to","changePrice","pendingType","dataset","displayPrice","myTransactionChange","act","bnTen","div","tt","mul","split","decimal","notValidTop","netValidBottom","able","total","full","from","content","rebook","location","hash","slice","sort","b","reduce","max","curr","index","buyDisplayPrice","sellDisplayPrice","data-tip","data-for","place","width","renderTable","DeepChart","middle","distance","$this","d3Select","graph","movePoint","d3Mouse","mdl","dis","height","margin","left","right","h","bottom","top","xScale","d3ScaleLinear","domain","range","yScale","maxValue","line","d3Line","x","d","y","area","d3Area","y0","y1","xAxis","d3AxisBottom","scale","ticks","yAxis","d3AxisRight","xGrid","tickSize","tickFormat","yGrid","mouseX","chart","invert","matchPoint","pos","bisect","d3Bisector","detail","match","circle","attr","t_displayPrice","rect","info_displayPrice","text","t_amount","info_amount","smaller","larger","sell","buy","sellbook","buybook","prev","next","node","find","order","push","assign","i","times","String","unshift","concat","min","bk","splice","svg","transform","call","cx","c","fill","dy","dateFormat","timeFormat","KChart","unit","tooltipContent","currentItem","xAccessor","label","high","low","stroke","initialData","ratio","discontinuousTimeScaleProvider","inputDateAccessor","timestamp","xScaleProvider","displayXAccessor","xExtents","last","candlesAppearance","wickStroke","candleStrokeWidth","widthRatio","opacity","gridWidth","innerTickSize","tickStrokeDasharray","grid","tickStrokeOpacity","seriesName","clamp","pointsPerPxThreshold","yExtents","axisAt","orient","tickStroke","showTicks","yAccessor","bgFill","bgOpacity","fontFill","fontSize","origin","fitWidth","Content","toggle","kType","option","changeChart","changeKType","getKChart","showChart","renderSelect","toggleSelect","clickOutside","setField","addEventListener","updateDimensions","removeEventListener","field","offsetWidth","offsetHeight","innerWidth","volume","timeunitChange","kLineGet$","select","contains","stopPropagation","currentTarget","data-type","el","renderChart","LimitTransaction","tmp","handleInput","openLimitPending","pending","clickFocus","renderButton","focus","handleFocus","name","handlePreview","myTransactionUpdate","disable","buyPrice","tmpPrice","tmpAmount","tv","hexTotal","account","agent","l","usable","toFixed","lt","fToken","tToken","arr","long","tmpSellBook","lte","checkETH","eth","fromBalance","tx","gasPrice","gasLimit","allowance","estimate","skip","gte","createQuery","myBooksAdd","no","status","approve","raw","mouseEnterPending","mouseLeavePending","onMouseEnter","onMouseLeave","active","data-input","MarketTransaction","openMarketTrans","immTrans","enterMarket","sellArray","tk","Account","preview","add","less","calc","btn","selectPending","changeSelect","copyAddress","onRef","substr","execCommand","button","reload","encodeURIComponent","readOnly","exportLink","param","item","pre","logout","renderAccount","renderToggle","renderTransaction","RecentTransaction","transaction","formatTime","Order","pendingFilter","fliter","forEach","des","MyTransaction","toggleOrder","closeOrder","myBooks","deciaml","confirm","myBooksChange","canceled","cancelPending","displayAmount","cancel","myHistory","filter","renderThead","renderBody","TideWallet","tideWalletiOS","tideWalletAndroid","Tab","switch","MortgageLink","Index","nav","changeNav","obj","tradeList","f","baseAddress","re","changeFrom","changeTo","child","changeInput","myBooksCancel","kData","dash","connect","summary","kLine","bindActionCreators","newsActions","mortgageActions"],"mappings":"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","file":"static/js/8.d607334e.chunk.js","sourcesContent":["import React from 'react';\n// import { Link } from 'react-router-dom';\n// import PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\n\nimport './footer.scss';\n\nconst Footer = () =>\n{\n    // const { t } = props;\n    return (\n        <footer>\n            <p>Powered by</p>\n            <div>\n                <a href=\"https://www.tideisun.com/\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    <img src=\"/img/logo-lite.png\" alt=\"tideisun\" />\n                </a>\n            </div>\n            <p>\n                Copyright\n                <span>©</span>\n                TideiSun. All rights reserved.\n            </p>\n            {/* <p><Link to=\"privacy\">{t('footer.term')}</Link></p> */}\n            {/* <p><Link to=\"privacy\">{t('footer.privacy')}</Link></p> */}\n        </footer>\n    );\n};\n\n// Footer.defaultProps = {\n//     t: () => {}\n// };\n\n// Footer.propTypes = {\n//     t: PropTypes.func\n// };\n\nexport default translate()(Footer);\n","import * as rpc from './rpc';\n\nlet timmer;\n\n// export const setIO = (url) =>\n// {\n//     Io = io(url);\n// };\n\nconst refreshInterval = (actions) =>\n{\n    timmer = setInterval(() =>\n    {\n        actions.userActions.accountGet$();\n    }, 15000);\n};\n\nexport const loginIO = (wallet, password, key, tokenList, actions, testWallet, testKey) =>\n{\n    return new Promise((resolve) =>\n    {\n        const { userActions } = actions;\n        if (key)\n        {\n            userActions.userGet$({ wallet, password, key });\n        }\n        else\n        {\n            userActions.userGet$({ wallet, observer: true });\n        }\n\n        window.dbObj.ref('operatorBooks').orderByChild('user').equalTo(`0x${wallet.address}`).on('value', (snapshot) =>\n        {\n            userActions.historyGet$(Object.values(snapshot.val() || []));\n        });\n\n        // actions.userActions.accountGet$();\n\n        // show money for test\n        if (testWallet)\n        {\n            rpc.showMeMoney(testWallet.address, wallet.address, testKey).then(() =>\n            {\n                // this.refreshInterval();\n            });\n        }\n        refreshInterval(actions);\n        resolve();\n    });\n};\n\nexport const clearTimeInterval = () =>\n{\n    clearInterval(timmer);\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './prompt.scss';\n\nconst Prompt = (props) =>\n{\n    return (\n        <div className=\"c_prompt\">\n            <img src={`/img/icon/ic-help${props.type === 1 ? '-gray' : ''}.svg`} alt=\"question mark\" />\n            <div>\n                {props.message}\n            </div>\n        </div>\n    );\n};\n\nPrompt.defaultProps = {\n    type: 1\n};\n\nPrompt.propTypes = {\n    type: PropTypes.number,\n    message: PropTypes.string.isRequired\n};\n\nexport default Prompt;\n","/* eslint-disable no-undef */\nimport React from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport PropTypes from 'prop-types';\n\nconst connectFirebase = (WrapComponent) =>\n{\n    class ConnectFirebase extends React.Component\n    {\n        constructor(props)\n        {\n            super(props);\n            this.state = {};\n        }\n\n        componentDidMount()\n        {\n            const { actions } = this.props;\n            const { bookActions, userActions, modalActions } = actions;\n            const $this = this;\n\n\n            if (!firebase.apps.length)\n            {\n                firebase.initializeApp(finalConfig.fdb);\n                window.dbObj = firebase.database();\n            }\n\n            // 初始tokenList陣列\n            window.dbObj.ref('tokenList').once('value', (v) =>\n            {\n                if (v.val())\n                {\n                    bookActions.tokenListGet(v.val());\n                    bookActions.getFillBook$(v.val());\n                    bookActions.bookGet$();\n                }\n            });\n\n            // Deprecated: bookActions.getFillBook$(v.val());\n            // 監聽所有交易對和匯率\n            // window.dbObj.ref('tradeList').on('value', (v) =>\n            // {\n            //     if (v.val())\n            //     {\n            //         bookActions.tradeListGet(v.val());\n            //         // modalActions.updateLoading(true);\n\n            //     }\n            // });\n\n            // 監聽所有成交\n            window.dbObj.ref('priceBooks').on('value', (v) =>\n            {\n                if (v.val())\n                {\n                    bookActions.recentTransactionGet$(Object.values(v.val()));\n                }\n            });\n\n            // Deprecated: Get order book from contract\n            // 監聽所有掛單\n            // window.dbObj.ref('orderBooks').on('value', (v) =>\n            // {\n            //     const { user } = $this.props;\n            //     if (v.val())\n            //     {\n            //         bookActions.bookGet$(Object.values(v.val()));\n            //         if (user.wallet)\n            //         {\n            //             userActions.myBooksGet$(v);\n            //         }\n            //     }\n            // });\n        }\n\n        componentWillUnmount()\n        {\n            window.dbObj.ref('tokenList').off('value');\n            // window.dbObj.ref('tradeList').off('value');\n            window.dbObj.ref('priceBooks').off('value');\n            window.dbObj.ref('orderBooks').off('value');\n        }\n\n        render()\n        {\n            return (\n                <WrapComponent {...this.props} />\n            );\n        }\n    }\n\n    ConnectFirebase.propTypes = {\n        tokenList: PropTypes.array.isRequired,\n        actions: PropTypes.object.isRequired,\n        user: PropTypes.object.isRequired,\n        from: PropTypes.object.isRequired,\n        to: PropTypes.object.isRequired\n    };\n    return ConnectFirebase;\n};\n\nexport default connectFirebase;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport equal from 'deep-equal';\n\nimport { loginIO } from '../../utils/login';\nimport Prompt from '../prompt/prompt';\nimport './login.scss';\nimport * as rpc from '../../utils/rpc';\n\nclass Login extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {};\n\n        this.importWallet = this.importWallet.bind(this);\n        this.createWallet = this.createWallet.bind(this);\n        this.observe = this.observe.bind(this);\n    }\n\n    shouldComponentUpdate(nextProps, nextState)\n    {\n        if (equal(nextProps, this.props) && equal(nextState, this.state))\n        {\n            return false;\n        }\n        else\n        {\n            return true;\n        }\n    }\n    createWallet()\n    {\n        this.props.modalControl.open('create', { message: this.props.t('notDownloadWallet') });\n    }\n\n    importWallet()\n    {\n        this.props.modalControl.open('import');\n    }\n\n    observe()\n    {\n        // this.props.modalControl.open('observer');\n        const _login = (address) => {\n            loginIO({\n                address\n            }, '', 'metamask', '',  this.props.actions)\n        };\n\n        rpc.startExtension((address) => {\n            _login(address)\n        });\n        rpc.setExtensionAddress((address) => {\n            _login(address)\n        });\n\n    }\n\n    render()\n    {\n        const { t } = this.props;\n        return (\n            <div className=\"c_login\">\n                <ul>\n                    <li className=\"button\" onClick={this.importWallet}><span>{t('importWallet')}</span></li>\n                    <li className=\"button\" onClick={this.createWallet}><span>{t('createWallet')}</span></li>\n                    {/* <li className=\"unique\" onClick={this.observe}>\n                        <span>TideWallet Connect</span>\n                        <Prompt type={2} message={t('prompt.obsever')} />\n                        <i className=\"fa fa-angle-right\" aria-hidden=\"true\" />\n                    </li> */}\n                    <li className=\"unique\" onClick={this.observe}>\n                        <span>MetaMask</span>\n                        <Prompt type={2} message={t('prompt.obsever')} />\n                        <i className=\"fa fa-angle-right\" aria-hidden=\"true\" />\n                    </li>\n                </ul>\n            </div>\n        );\n    }\n}\n\nLogin.defaultProps = {\n    t: () => {},\n};\n\nLogin.propTypes = {\n    t: PropTypes.func,\n    modalControl: PropTypes.object.isRequired,\n    actions: PropTypes.object.isRequired,\n};\n\nexport default translate('account', { wait: true })(Login);\n\n","import * as types from '../constants/actionTypeMortgage';\nimport {\n    getMortgageRate,\n    getEquvialentAmount,\n    getAmount,\n    getUsableXPA,\n    getMortgagePrice\n    // getClosingLine\n} from '../utils/rpc';\n\nexport const changeMortgageRate = (userAddress) =>\n{\n    return async (dispatch) =>\n    {\n        const data = await getMortgageRate(userAddress);\n        dispatch({\n            type: types.CHANGE_MORTGAGE_RATE,\n            data\n        });\n    };\n};\n\nexport const changeEquivalentAmount = (userAddress) =>\n{\n    return async (dispatch) =>\n    {\n        const data = await getEquvialentAmount(userAddress);\n        dispatch({\n            type: types.CHANGE_EQUIVALENT_AMOUNT,\n            data\n        });\n    };\n};\n\nexport const changeUsableAmount = (userAddress) =>\n{\n    return async (dispatch) =>\n    {\n        const data = await getAmount(userAddress, 'usable');\n        dispatch({\n            type: types.CHANGE_USABLE,\n            data\n        });\n    };\n};\n\nexport const changeLoanAmount = (userAddress) =>\n{\n    return async (dispatch) =>\n    {\n        const data = await getAmount(userAddress, 'loan');\n        dispatch({\n            type: types.CHANGE_LOAN,\n            data\n        });\n    };\n};\n\nexport const changeRemainingAmount = (userAddress) =>\n{\n    return async (dispatch) =>\n    {\n        const data = await getAmount(userAddress, 'remaining');\n        dispatch({\n            type: types.CHANGE_REMAINING,\n            data\n        });\n    };\n};\n\n// export const mappingAssets = () =>\n// {\n//     return async (dispatch) =>\n//     {\n//         const data = await getAssets();\n//         dispatch({\n//             type: types.MAPPING_ASSETS,\n//             data\n//         });\n//     };\n// };\n\nexport const changeUsableXPA = (userAddress) =>\n{\n    return async (dispatch) =>\n    {\n        const data = await getUsableXPA(userAddress);\n        dispatch({\n            type: types.CHANGE_USABLE_XPA,\n            data\n        });\n    };\n};\n\nexport const mortgageLogout = () =>\n{\n    return {\n        type: types.MORTGAGE_LOGOUT,\n    };\n};\n\nexport const changeMortgagePrice = () =>\n{\n    return async (dispatch) =>\n    {\n        const data = await getMortgagePrice();\n        dispatch({\n            type: types.CHANGE_MORTGAGE_PRICE,\n            data\n        });\n    };\n};\n\n// export const changeClosingLine = () =>\n// {\n//     return async (dispatch) =>\n//     {\n//         const data = await getClosingLine();\n//         dispatch({\n//             type: types.CHANGE_CLOSING_LINE,\n//             data\n//         });\n//     };\n// };\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport { translate } from 'react-i18next';\n\nimport { loginIO } from '../../utils/login';\n\nclass ImportWallet extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            downloadHref: '',\n            password: '',\n            wallet: '',\n            message: '',\n            passwordType: true // if true, type === 'password'\n        };\n\n        this.readFile = this.readFile.bind(this);\n        this.submitImport = this.submitImport.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n\n        this.wallet = null;\n    }\n\n    handleChange(e)\n    {\n        this.setState(update(this.state, {\n            password: { $set: e.target.value },\n            message: { $set: '' }\n        }));\n    }\n\n    readFile()\n    {\n        const file = this.import.files[0];\n        const reader = new FileReader();\n\n        reader.onload = (() =>\n        {\n            return (e) =>\n            {\n                this.wallet = JSON.parse(e.target.result);\n                this.setState(update(this.state, {\n                    wallet: { $set: this.wallet },\n                    message: { $set: '' }\n                }));\n                let keys = Object.keys(this.wallet).map(v => v.toLowerCase());\n                if (keys.indexOf('address') === -1 || keys.indexOf('id') === -1 || keys.indexOf('crypto') === -1)\n                {\n                    const { t } = this.props;\n                    this.setState(update(this.state, {\n                        message: { $set: t('walletError') }\n                    }));\n                }\n                this.import.value = '';\n            };\n        })(file);\n        reader.readAsText(file);\n    }\n\n    submitImport()\n    {\n        const { actions, t, tokenList } = this.props;\n        const { wallet, password } = this.state;\n\n        if (!this.wallet) return this.setState(update(this.state, { message: { $set: t('importAlert') } }));\n        const recoverKey = () =>\n        {\n            return new Promise((resolve, reject) =>\n            {\n                const worker = new Worker('/js/recoverKeyWorker.js');\n                worker.onmessage = (e) =>\n                {\n                    setTimeout(() =>\n                    {\n                        if (e.data === 'error') reject();\n                        this.key = e.data;\n                        resolve(this.key);\n                    }, 300);\n                };\n                worker.postMessage({ wallet, password });\n            });\n        };\n\n        actions.modalActions.updateLoading(true);\n        actions.modalActions.updateMessage(t('importing'));\n\n        return recoverKey().then(() =>\n        {\n            this.setState(update(this.state, {\n                downloadHref: { $set: '' }\n            }));\n            loginIO(wallet, password, this.key, tokenList, actions, '', '').then(() =>\n            {\n                actions.modalActions.updateLoading(false);\n                this.props.modalControl.close();\n            });\n        }).catch((err) =>\n        {\n            console.warn(err);\n            this.setState(update(this.state, {\n                message: { $set: t('importError') }\n            }));\n            actions.modalActions.updateLoading(false);\n        });\n    }\n\n    render()\n    {\n        const { passwordType, wallet, message } = this.state;\n        const { t } = this.props;\n\n        return (\n            <div className=\"c_importWallet\">\n                <p className=\"modal-title\">\n                    {t('importWallet')}\n                </p>\n                <a className=\"import\">\n                    <input className=\"import-input\" ref={(input) => { this.import = input; }} accept=\".json\" type=\"file\" onChange={this.readFile} disabled={this.props.loading} />\n                    {t('importWallet')}\n                </a>\n                <div className=\"modal-content\">\n                    <div className=\"address\">\n                        <div>{t('address')}</div>\n                        <div>{wallet.address ? wallet.address : ''}</div>\n                    </div>\n                    <div className=\"modal-input\">\n                        <label htmlFor=\"password\">\n                            {t('yourPassword')}\n                        </label>\n                        <div className={message === '' ? '' : 'error'} data-message={message}>\n                            <input type={passwordType ? 'password' : 'text'} onChange={this.handleChange} disabled={this.props.loading} required />\n                        </div>\n                    </div>\n                    <div>\n                        <label htmlFor=\"show-password\">\n                            <input type=\"checkbox\" onChange={() => { this.setState(update(this.state, { passwordType: { $set: !this.state.passwordType } })); }} />\n                            &nbsp;&nbsp;{t('showPassword')}\n                        </label>\n                    </div>\n                </div>\n                <div className=\"modal-btn\">\n                    <div className=\"button\" onClick={this.props.modalControl.close}>\n                        <span>{t('cancel')}</span>\n                    </div>\n                    <div className=\"button\" onClick={this.submitImport}>\n                        <span>{t('import')}</span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nImportWallet.defaultProp = {\n    t: () => {}\n};\n\nImportWallet.propTypes = {\n    t: PropTypes.func.isRequired,\n    actions: PropTypes.object.isRequired,\n    loading: PropTypes.bool.isRequired,\n    modalControl: PropTypes.object.isRequired,\n    tokenList: PropTypes.array.isRequired\n};\n\nexport default translate('account', { wait: true })(ImportWallet);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport zxcvbn from 'zxcvbn';\nimport './passwordMeter.scss';\n\nclass PasswordMeter extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {};\n    }\n\n    render()\n    {\n        const { password } = this.props;\n        const style = () =>\n        {\n            if (password === '') return 'none';\n            switch (zxcvbn(password).score)\n            {\n                case 0:\n                    return 'risk';\n                case 1:\n                    return 'weak';\n                case 2:\n                    return 'normal';\n                case 3:\n                    return 'safly';\n                case 4:\n                    return 'strong';\n                default:\n                    return 'none';\n            }\n        };\n\n        return (\n            <div className=\"c_password-meter\">\n                <div className={style()} />\n            </div>\n        );\n    }\n}\n\nPasswordMeter.defaultProps = {\n    t: () => {}\n};\n\nPasswordMeter.propTypes = {\n    password: PropTypes.string.isRequired\n};\n\nexport default translate()(PasswordMeter);\n","import React from 'react';\nimport { translate } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\n\nimport { loginIO } from '../../utils/login';\nimport PasswordMeter from '../passwordMeter/passwordMeter';\n\n\nclass CreateWallet extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            password: '',\n            passwordType: true // if true, type === 'password'\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.submitCreate = this.submitCreate.bind(this);\n    }\n\n    componentDidMount()\n    {\n        window.onbeforeunload = (e) =>\n        {\n            if (this.state.download)\n            {\n                const dialogText = 'Dialog text here';\n                e.returnValue = dialogText;\n                return dialogText;\n            }\n        };\n    }\n\n    componentWillUnmount()\n    {\n        window.onbeforeunload = null;\n    }\n\n    handleChange(e)\n    {\n        this.setState(update(this.state, {\n            password: { $set: e.target.value }\n        }));\n    }\n\n    submitCreate()\n    {\n        const { actions, modalControl, t } = this.props;\n        if (this.state.password.length < 8) return this.props.toastOpen(t('passwordRequired'));\n\n        const create = () =>\n        {\n            actions.modalActions.updateLoading(true);\n            actions.modalActions.updateMessage(this.props.t('creating'));\n            const createKey = () =>\n            {\n                return new Promise((resolve, reject) =>\n                {\n                    const password = this.state.password;\n                    const worker = new Worker('/js/createKeyWorker.js');\n                    worker.onmessage = (e) =>\n                    {\n                        setTimeout(() =>\n                        {\n                            if (e.data.error) reject(e.data.error);\n                            resolve(e.data);\n                        }, 300);\n                    };\n                    worker.postMessage({ password });\n                });\n            };\n\n            return createKey().then((res) =>\n            {\n                this.key = res.key;\n\n                const testWallet = { address: 'da5acb19966aff9b4d9cf96800de46f7ffa93db5', crypto: { cipher: 'aes-128-ctr', ciphertext: '093c35acd2fe31abad157d9895a52ab41d9d063ac3060eb89dc50134f7150890', cipherparams: { iv: 'c6cf2f52298b7c565522465d99d5735b' }, mac: 'fba07854d84acc672aedddee1a394115c8b3f6bbc5a4d99b4f1455e32269cea3', kdf: 'scrypt', kdfparams: { dklen: 32, n: 262144, r: 1, p: 8, salt: 'c55af92bf301b96bb67cddb5036b6af98293b724775d1c0675895670bb536d23' } }, id: '2a246859-80fb-4811-892e-0b81e287103d', version: 3 };\n                const testKey = '5e1bda1beb2c82e07fd2c493ce9f0b940fcea99fb757cae57f6eb8611604f407';\n                const w = !finalConfig.production ? testWallet : '';\n                const k = !finalConfig.production ? testKey : '';\n\n                loginIO(res.wallet, res.password, this.key, this.props.tokenList, this.props.actions, w, k).then(() =>\n                {\n                    if (this.state.password)\n                    {\n                        this.setState(update(this.state, {\n                            password: { $set: '' }\n                        }));\n                    }\n\n                    actions.modalActions.updateLoading(false);\n                    actions.userActions.changeKeep(true);\n                    modalControl.open('exportWallet', { wallet: res.wallet, downloadHref: `data:${res.data}`, message: t('notDownloadWallet') });\n                });\n\n\n                // loginIO(res.wallet, res.password, this.key, this.props.tokenList, this.props.actions, w, k).then(() =>\n                // {\n                //     if (this.state.password)\n                //     {\n                //         this.setState(update(this.state, {\n                //             password: { $set: '' }\n                //         }));\n                //     }\n\n                //     actions.modalActions.updateLoading(false);\n                //     actions.userActions.changeKeep(true);\n                //     modalControl.open('exportWallet', { wallet: res.wallet, downloadHref: `data:${res.data}`, message: t('notDownloadWallet') });\n                // });\n            }).catch(console.log);\n        };\n\n        if (!this.state.password)\n        {\n            return this.props.modalControl.open('checkPassword', { exec: create });\n        }\n        else\n        {\n            create();\n        }\n    }\n\n    render()\n    {\n        const { passwordType, password } = this.state;\n        const { t } = this.props;\n        return (\n            <div>\n                <p className=\"modal-title\">{t('createNew')}</p>\n                <div className=\"modal-content\">\n                    <div className=\"modal-input\">\n                        <label htmlFor=\"password\">\n                            {t('setPassword')}\n                        </label>\n                        <div>\n                            <input type={passwordType ? 'password' : 'text'} onChange={this.handleChange} placeholder={t('enterPassword')} disabled={this.props.loading} />\n                        </div>\n                    </div>\n                    <div className=\"meter\">\n                        <PasswordMeter password={password} />\n                        <p>({t('passwordRequired')})</p>\n                    </div>\n                    <div>\n                        <label htmlFor=\"show-password\">\n                            <input type=\"checkbox\" onChange={() => { this.setState(update(this.state, { passwordType: { $set: !this.state.passwordType } })); }} />\n                            &nbsp;&nbsp;{t('showPassword')}\n                        </label>\n                    </div>\n                </div>\n                <div className=\"modal-btn\">\n                    <div className=\"button\" onClick={this.props.modalControl.close}>\n                        <span>{t('cancel')}</span>\n                    </div>\n                    <div className=\"button\" onClick={this.submitCreate}>\n                        <span>{t('create')}</span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nCreateWallet.defaultProps = {\n    t: () => {}\n};\n\nCreateWallet.propTypes = {\n    t: PropTypes.func,\n    actions: PropTypes.object.isRequired,\n    tokenList: PropTypes.array.isRequired,\n    modalControl: PropTypes.object.isRequired,\n    loading: PropTypes.bool.isRequired,\n    toastOpen: PropTypes.func.isRequired\n};\n\nexport default translate('account', { wait: true })(CreateWallet);\n","import React from 'react';\nimport { translate } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport QRCode from 'qrcode.react';\n\nclass ExportWallet extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {};\n    }\n\n    componentDidMount()\n    {\n        window.onbeforeunload = (e) =>\n        {\n            if (this.state.download)\n            {\n                const dialogText = 'Dialog text here';\n                e.returnValue = dialogText;\n                return dialogText;\n            }\n        };\n    }\n\n    componentWillUnmount()\n    {\n        window.onbeforeunload = null;\n    }\n\n    render()\n    {\n        const { t, value } = this.props;\n\n        return (\n            <div>\n                <p className=\"modal-title\">{t('createNew')}</p>\n                <div className=\"modal-content\">\n                    <div>\n                        <div>\n                            {t('yourWallet')}\n                        </div>\n                        <div>\n                            {`0x${value.wallet.address.replace('0x', '')}`}\n                        </div>\n                    </div>\n                    <div className=\"canvas\">\n                        <div className=\"qrcode\">\n                            <QRCode value={JSON.stringify(value.wallet)} size={120} />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"modal-btn\">\n                    <a\n                        href={value.downloadHref}\n                        download=\"keyStore.json\"\n                        className=\"button margin-none\"\n                        target={/iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream ? '_blank' : ''}\n                        onClick={() => { this.props.modalControl.close(); this.props.actions.userActions.changeKeep(false); }}\n                    >\n                        <span>\n                            {t('downloadWallet')}\n                        </span>\n                    </a>\n                </div>\n            </div>\n        );\n    }\n}\n\nExportWallet.defaultProps = {\n    t: () => {}\n};\n\nExportWallet.propTypes = {\n    t: PropTypes.func,\n    actions: PropTypes.object.isRequired,\n    modalControl: PropTypes.object.isRequired,\n    value: PropTypes.object.isRequired,\n};\n\nexport default translate('account', { wait: true })(ExportWallet);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport { translate } from 'react-i18next';\n\nimport { loginIO } from '../../utils/login';\n\nclass Observer extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            address: '',\n            message: ''\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.submit = this.submit.bind(this);\n    }\n\n    handleChange(e)\n    {\n        this.setState(update(this.state, {\n            address: { $set: e.target.value },\n            message: { $set: '' }\n        }));\n    }\n\n    submit()\n    {\n        const { t, actions, tokenList, modalControl } = this.props;\n        const { address } = this.state;\n\n        if (address === '') return;\n\n        const regex = /^0x[a-fA-F0-9]{40}$/;\n        const regexShort = /[a-fA-F0-9]{40}$/;\n\n        if (!regex.test(address) && !regexShort.test(address))\n        {\n            this.setState(update(this.state, {\n                message: { $set: t('addressFormatError') }\n            }));\n        }\n        else\n        {\n            const value = address.replace('0x', '');\n            const wallet = { address: value.toLowerCase() };\n            loginIO(wallet, '', '', tokenList, actions).then(() =>\n            {\n                modalControl.close();\n            });\n        }\n    }\n\n    render()\n    {\n        const { t } = this.props;\n        const { message } = this.state;\n\n        return (\n            <div className=\"c_observer\">\n                <div className=\"modal-title\">\n                    {t('enterAddress')}\n                </div>\n                <div className=\"modal-content\">\n                    <div>{t('observeEnter')}</div>\n                    <div className=\"modal-input\">\n                        <label htmlFor=\"address\">{t('enterAddress')}</label>\n                        <div className={message === '' ? '' : 'error'} data-message={message} >\n                            <input id=\"address\" type=\"text\" value={this.state.address} onChange={this.handleChange} />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"modal-btn\">\n                    <div className=\"button\" onClick={this.submit}>\n                        <span>\n                            {t('importAddress')}\n                        </span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nObserver.defaultProp = {\n    t: () => {}\n};\n\nObserver.propTypes = {\n    t: PropTypes.func.isRequired,\n    actions: PropTypes.object.isRequired,\n    modalControl: PropTypes.object.isRequired,\n    tokenList: PropTypes.array.isRequired\n};\n\nexport default translate('account', { wait: true })(Observer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport { translate } from 'react-i18next';\nimport QRCode from 'qrcode.react';\nimport { observerAllowance } from '../../utils/rpc';\nimport { bnHex } from '../../utils/format';\n\nclass ObserverQr extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            checked: false,\n        };\n\n        this.renderBtn = this.renderBtn.bind(this);\n        this.submit = this.submit.bind(this);\n        this.check = this.check.bind(this);\n    }\n\n    componentDidMount()\n    {\n        this.check();\n    }\n\n    shouldComponentUpdate(nextProps, nextState)\n    {\n        if (nextProps.value.type === this.props.value.type && nextState.checked === this.state.checked)\n        {\n            return false;\n        }\n        else\n        {\n            return true;\n        }\n    }\n\n    async check()\n    {\n        const { value, user, actions } = this.props;\n\n        if (value.type === 'cancel')\n        {\n            this.setState(update(this.state, {\n                checked: { $set: true }\n            }));\n            actions.userActions.changeKeep(false);\n            return;\n        }\n\n        if (value.fromToken.address === finalConfig.ethAddress)\n        {\n            this.setState(update(this.state, {\n                checked: { $set: true }\n            }));\n            actions.userActions.changeKeep(false);\n            return;\n        }\n\n        // 依gasLimit檢查\n        // if (value.type === 'approveZero')\n        // {\n        //     const pass = await observerAllowance(value.fromToken, user.wallet.address);\n        //     if (parseInt(pass, 16) === 0)\n        //     {\n        //         return this.setState(update(this.state, {\n        //             checked: { $set: true }\n        //         }));\n        //     }\n        //     else\n        //     {\n        //         return setTimeout(() =>\n        //         {\n        //             this.check();\n        //         }, 5000);\n        //     }\n        // }\n        // else\n        // {\n        //     const pass = await observerCheckApprove(user.wallet.address, value.data);\n        //     console.log(pass);\n        //     if (value.type === 'approve' && parseInt(pass, 16) > 40000)\n        //     {\n        //         this.setState(update(this.state, {\n        //             checked: { $set: true }\n        //         }));\n        //     }\n        //     else if (value.type !== 'approve' && parseInt(pass, 16) < 40000)\n        //     {\n        //         this.setState(update(this.state, {\n        //             checked: { $set: true }\n        //         }));\n        //         actions.userActions.changeKeep(false);\n        //     }\n        //     else\n        //     {\n        //         setTimeout(() =>\n        //         {\n        //             this.check();\n        //         }, 5000);\n        //     }\n        // }\n\n        const pass = await observerAllowance(value.fromToken, user.wallet.address);\n        if (value.type === 'approveZero' && parseInt(pass, 16) === 0) // 如果是要approve 0的彈窗, 檢查pass為0時可下一步\n        {\n            return this.setState(update(this.state, {\n                checked: { $set: true }\n            }));\n        }\n        else if (value.type === 'approve' && parseInt(pass, 16) >= Number(bnHex(value.fromToken.amount).toString())) // 如果是approve的彈窗, 檢查pass為大於approve時可下一步\n        {\n            this.setState(update(this.state, {\n                checked: { $set: true }\n            }));\n        }\n        else if (value.type === 'sign' && parseInt(pass, 16) < Number(bnHex(value.fromToken.amount).toString())) // 如果是sendRawTransaction的彈窗, 檢查pass為小於approve時可下一步\n        {\n            this.setState(update(this.state, {\n                checked: { $set: true }\n            }));\n            actions.userActions.changeKeep(false);\n        }\n        else\n        {\n            setTimeout(() =>\n            {\n                this.check();\n            }, 5000);\n        }\n    }\n\n    submit()\n    {\n        const { value, modalControl, actions } = this.props;\n        if (!this.state.checked) return;\n        if (value.type === 'approve' || value.type === 'approveZero')\n        {\n            value.exec();\n            this.setState(update(this.state, {\n                checked: { $set: false }\n            }));\n        }\n        else\n        {\n            actions.userActions.changeKeep(false);\n            modalControl.close();\n        }\n    }\n\n    renderBtn()\n    {\n        const { checked } = this.state;\n        const { value, t } = this.props;\n        if (value.type === 'approve' || value.type === 'approveZero')\n        {\n            return (\n                <div className=\"modal-btn\">\n                    <div className={checked ? 'button' : 'block'} onClick={this.submit}>\n                        <span>\n                            {t('next')}\n                        </span>\n                    </div>\n                </div>\n            );\n        }\n        else\n        {\n            return (\n                <div className=\"modal-btn\">\n                    <div className={checked ? 'button' : 'block'} onClick={this.submit}>\n                        <span>{t('finish')}</span>\n                    </div>\n                </div>\n            );\n        }\n    }\n\n    render()\n    {\n        const { t, value } = this.props;\n        return (\n            <div className=\"c_observerQr\">\n                <div className=\"modal-title\">\n                    {(value.type === 'approve' || value.type === 'approveZero') ? t('checkBalance') : t('confirmSign')}\n                </div>\n                <div className=\"modal-content\">\n                    <p>{value.type === 'approveZero' ? t('observerFix') : t('observeConfirm')}</p>\n                </div>\n                <div className=\"canvas-holder\">\n                    <div className=\"qrcode\">\n                        <QRCode value={value.qrcode} size={200} />\n                    </div>\n                </div>\n                {this.renderBtn()}\n            </div>\n        );\n    }\n}\n\nObserverQr.defaultProps = {\n    t: () => {}\n};\n\nObserverQr.propTypes = {\n    t: PropTypes.func,\n    value: PropTypes.object.isRequired,\n    modalControl: PropTypes.object.isRequired,\n    user: PropTypes.object.isRequired,\n    actions: PropTypes.object.isRequired\n};\n\nexport default translate('account', { wait: true })(ObserverQr);\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport { scnToStr, bnHex, tenFill } from '../../utils/format';\n\nclass Transaction extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {};\n    }\n\n    render()\n    {\n        const { value, t } = this.props;\n        const { type, fromToken, toToken, fee, fromDecimal, toDecimal } = value;\n        return (\n            <div>\n                <div className=\"modal-title\">\n                    {type === 'buy' ? `${t('buy')}${toToken.token}` : `${t('sell')}${fromToken.token}`}\n                </div>\n                <div className=\"modal-content\">\n                    <div className=\"detail\">\n                        <div>\n                            <div>{t('actionMessage')}{type === 'buy' ? `${t('buy')}${toToken.token}` : `${t('sell')}${fromToken.token}`}</div>\n                            <div>{tenFill(bnHex(fromToken.amount).toString(), -fromDecimal)} {fromToken.token} : {tenFill(bnHex(toToken.amount).toString(), -toDecimal)} {toToken.token}</div>\n                            <div>{t('gas')} ≈ {scnToStr(value.gas)} ETH</div>\n                            <div>{t('fee')} ≈ {fee ? `${tenFill(fee, -toDecimal)} ${toToken.token}` : 0}</div>\n                        </div>\n                        <img src=\"/img/walletalert.png\" alt=\"wallet\" />\n                    </div>\n                </div>\n                <div className=\"modal-btn\">\n                    <button className={`submit ${type}`} onClick={() => { value.exec(); }}>\n                        {type === 'buy' ? `${t('buy')}${toToken.token}` : `${t('sell')}${fromToken.token}`}\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nTransaction.defaultProps = {\n    t: () => {}\n};\n\nTransaction.propTypes = {\n    value: PropTypes.object.isRequired,\n    t: PropTypes.func\n};\n\nexport default translate('account', { wait: true })(Transaction);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport { scnToStr, formatNumber } from '../../utils/format';\n\nclass CancelOrder extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {};\n    }\n\n    render()\n    {\n        const { t, value } = this.props;\n        return (\n            <div className=\"c_cancelOrder\">\n                <div className=\"modal-title\">\n                    {t('table.cancelOrder')}\n                </div>\n                <div className=\"modal-content\">\n                    <p className=\"cancel-item\">{`${t('table.desc')}: ${value.desc}`}</p>\n                    <p className=\"cancel-item\">{`${t('table.price')}: ${value.price}`}</p>\n                    <p className=\"cancel-item\">{`${t('table.amount')}: ${formatNumber(8, value.amount)}`}</p>\n                    <p className=\"cancel-item\">{t('table.gas')} ≈ {scnToStr(value.gas)} ETH</p>\n                </div>\n                <div className=\"modal-btn\">\n                    <div className=\"button\" onClick={value.exec}>\n                        <span>\n                            {t('table.confirm')}\n                        </span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nCancelOrder.defaultProps = {\n    t: () => {}\n};\n\nCancelOrder.propTypes = {\n    t: PropTypes.func,\n    value: PropTypes.object.isRequired,\n    // modalControl: PropTypes.object.isRequired\n};\n\nexport default translate()(CancelOrder);\n","import React from 'react';\nimport { translate } from 'react-i18next';\nimport PropTypes from 'prop-types';\n\nclass CheckPassword extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {};\n\n        this.create = this.create.bind(this);\n    }\n\n    create()\n    {\n        this.props.value.exec();\n    }\n\n    render()\n    {\n        const { t } = this.props;\n\n        return (\n            <div>\n                <div className=\"modal-content\">\n                    <p className=\"warning\">{t('creatWithoutPassWord')}</p>\n                </div>\n                <div className=\"modal-btn\">\n                    <div className=\"button\" onClick={() => { this.props.modalControl.open('create'); }}>\n                        <span>{t('cancel')}</span>\n                    </div>\n                    <div className=\"button\" onClick={this.create}>\n                        <span>{t('create')}</span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nCheckPassword.defaultProps = {\n    t: () => {}\n};\n\nCheckPassword.propTypes = {\n    t: PropTypes.func,\n    modalControl: PropTypes.object.isRequired,\n    value: PropTypes.object.isRequired\n};\n\nexport default translate('account', { wait: true })(CheckPassword);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\n\nclass Receipt extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {};\n    }\n\n    render()\n    {\n        const { value, t, modalControl } = this.props;\n        return (\n            <div>\n                <div className=\"modal-title\">\n                    {t('sent')}\n                </div>\n                <div className=\"modal-content\">\n                    <p className=\"receipt-title\">{t('txMessage')}</p>\n                    <a className=\"receipt\" href={`https://etherscan.io/tx/${value.receipt}`} target=\"_blank\">\n                        {value.receipt}\n                    </a>\n                </div>\n                <div className=\"modal-btn\">\n                    <div className=\"button\" onClick={() => { modalControl.close(); }}>\n                        <span>{t('finish')}</span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReceipt.defaultProps = {\n    t: () => {}\n};\n\nReceipt.propTypes = {\n    value: PropTypes.object.isRequired,\n    t: PropTypes.func,\n    modalControl: PropTypes.object.isRequired\n};\n\nexport default translate('account', { wait: true })(Receipt);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport { scnToStr } from '../../utils/format';\n\nclass Mortgage extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {};\n    }\n\n    render()\n    {\n        const { value, t } = this.props;\n        const method = () =>\n        {\n            switch (value.type)\n            {\n                case 'mortgage':\n                    return t('mortgage.Mortgage');\n                case 'withdraw':\n                    return t('mortgage.Withdraw');\n                case 'repayment':\n                    return t('mortgage.Repayment');\n                default:\n                    return '';\n            }\n        };\n        return (\n            <div>\n                <div className=\"modal-title\">\n                    {method()}{value.type === 'mortgage' ? value.fromToken.token : value.toToken.token}\n                </div>\n                <div className=\"modal-content\">\n                    <div className=\"detail\">\n                        <div>\n                            {/* <div>{t('actionMessage')}{value.type === 'buy' ? `${t('buy')}${value.toToken.token}` : `${t('sell')}${value.fromToken.token}`}</div> */}\n                            <div>{value.type === 'mortgage' ? `${value.fromToken.amount} ${value.fromToken.token}` : `${value.toToken.amount} ${value.toToken.token}`}</div>\n                            <div>{t('gas')} ≈ {scnToStr(value.gas)} ETH</div>\n                            <div>{t('fee')} ≈ {value.fee ? `${value.fee} ${value.toToken.token}` : 0}</div>\n                        </div>\n                        <img src=\"/img/walletalert.png\" alt=\"wallet\" />\n                    </div>\n                </div>\n                <div className=\"modal-btn\">\n                    <div className=\"button\" onClick={() => { value.exec(); }}>\n                        <span>{method()}{value.type === 'mortgage' ? value.fromToken.token : value.toToken.token}</span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMortgage.defaultProps = {\n    t: () => {}\n};\n\nMortgage.propTypes = {\n    value: PropTypes.object.isRequired,\n    t: PropTypes.func\n};\n\nexport default translate('account', { wait: true })(Mortgage);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport { scnToStr } from '../../utils/format';\n\nclass Offset extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {};\n    }\n\n    render()\n    {\n        const { value, t } = this.props;\n        return (\n            <div>\n                <div className=\"modal-title\">\n                    {t('mortgage.offset')}{value.toToken.token}\n                </div>\n                <div className=\"modal-content\">\n                    <div className=\"detail\">\n                        <div>\n                            <div>{t('gas')} ≈ {scnToStr(value.gas)} ETH</div>\n                            <div>{t('fee')} ≈ {`${value.fee} XPA`}</div>\n                        </div>\n                        <img src=\"/img/walletalert.png\" alt=\"wallet\" />\n                    </div>\n                </div>\n                <div className=\"modal-btn\">\n                    <div className=\"button\" onClick={() => { value.exec(); }}>\n                        <span>{t('mortgage.offset')}{value.toToken.token}</span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nOffset.defaultProps = {\n    t: () => {}\n};\n\nOffset.propTypes = {\n    value: PropTypes.object.isRequired,\n    t: PropTypes.func\n};\n\nexport default translate('account', { wait: true })(Offset);\n","import React from 'react';\nimport { translate } from 'react-i18next';\nimport PropTypes from 'prop-types';\nimport ImportWallet from './importWallet';\nimport CreateWallet from './createWallet';\nimport ExportWallet from './exportWallet';\nimport Observer from './observer';\nimport ObserverQr from './observerQr';\nimport Transaction from './transaction';\nimport CancelOrder from './cancelOrder';\nimport CheckPassword from './checkPassword';\nimport Receipt from './receipt';\nimport Mortgage from './mortgage';\nimport Offset from './offset';\nimport './modal.scss';\n\n@translate(['common'], { wait: true })\nclass Modal extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            fade: ''\n        };\n    }\n\n    componentDidMount()\n    {\n        setTimeout(() =>\n        {\n            this.setState({\n                fade: 'fadeIn'\n            });\n        }, 1);\n    }\n\n    renderView()\n    {\n        const { actions, loading, tokenList, modalControl, value, user, toastOpen } = this.props;\n        \n        if (this.state.fade)\n        {\n            let view = null;\n            switch (this.props.view)\n            {\n                case 'import':\n                    return (\n                        <ImportWallet\n                            actions={actions}\n                            loading={loading}\n                            tokenList={tokenList}\n                            modalControl={modalControl}\n                        />\n                    );\n                case 'create':\n                    return (\n                        <CreateWallet\n                            actions={actions}\n                            loading={loading}\n                            tokenList={tokenList}\n                            modalControl={modalControl}\n                            toastOpen={toastOpen}\n                        />\n                    );\n                case 'observer':\n                    return (\n                        <Observer\n                            actions={actions}\n                            loading={loading}\n                            modalControl={modalControl}\n                            tokenList={tokenList}\n                        />\n                    );\n                case 'observerQr':\n                    return (\n                        <ObserverQr\n                            value={value}\n                            modalControl={modalControl}\n                            user={user}\n                            actions={actions}\n                        />\n                    );\n                case 'transaction':\n                    return (\n                        <Transaction\n                            actions={actions}\n                            value={value}\n                        />\n                    );\n                case 'cancelOrder':\n                    return (\n                        <CancelOrder\n                            value={value}\n                        />\n                    );\n                case 'checkPassword':\n                    return (\n                        <CheckPassword\n                            modalControl={modalControl}\n                            value={value}\n                        />\n                    );\n\n                case 'exportWallet':\n                    return (\n                        <ExportWallet\n                            modalControl={modalControl}\n                            value={value}\n                            user={user}\n                            actions={actions}\n                        />\n                    );\n                case 'mortgage':\n                    return (\n                        <Mortgage\n                            modalControl={modalControl}\n                            value={value}\n                            user={user}\n                            actions={actions}\n                        />\n                    );\n                case 'offset':\n                    return (\n                        <Offset\n                            modalControl={modalControl}\n                            value={value}\n                            user={user}\n                            actions={actions}\n                        />\n                    );\n                case 'receipt':\n                    return (\n                        <Receipt\n                            modalControl={modalControl}\n                            value={value}\n                        />\n                    );\n                default:\n            }\n\n            return view;\n        }\n        else\n        {\n            return null;\n        }\n    }\n\n    render()\n    {\n        return (\n            <div className={`c_modal ${this.state.fade}`}>\n\n                {/* content */}\n                <div className=\"content\">\n\n                    {/* head */}\n                    <div className=\"head\">\n                        <div\n                            onClick={() =>\n                            {\n                                if (this.props.keep) return this.props.toastOpen(this.props.value.message);\n                                this.props.modalControl.close();\n                            }}\n                        >\n                            <img src=\"/img/icon/ic-close.svg\" alt=\"close\" />\n                        </div>\n                    </div>\n\n                    {/* content */}\n                    <div className=\"content\">\n                        {this.renderView()}\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nModal.defaultProps = {\n    view: {},\n    value: {},\n    keep: false\n};\n\nModal.propTypes = {\n    view: PropTypes.string,\n    actions: PropTypes.object.isRequired,\n    loading: PropTypes.bool.isRequired,\n    tokenList: PropTypes.array.isRequired,\n    modalControl: PropTypes.object.isRequired,\n    value: PropTypes.object,\n    keep: PropTypes.bool,\n    toastOpen: PropTypes.func.isRequired,\n    user: PropTypes.object.isRequired\n};\n\nexport default Modal;\n","import React from 'react';\nimport update from 'immutability-helper';\nimport PropTypes from 'prop-types';\n\nimport './toast.scss';\n\nclass Toast extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            style: ''\n        };\n    }\n\n    componentDidMount()\n    {\n        setTimeout(() =>\n        {\n            this.setState(update(this.state, {\n                style: { $set: 'fadeIn' }\n            }));\n        }, 1);\n    }\n\n    render()\n    {\n        return (\n            <div className={`c_toast ${this.state.style}`}>\n                {this.props.message}\n            </div>\n        );\n    }\n}\n\nToast.defaultProps = {\n    message: ''\n};\n\nToast.propTypes = {\n    message: PropTypes.string\n};\n\nexport default Toast;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './loading.scss';\n\nconst Loading = (props) =>\n{\n    return (\n        <div className=\"c_loading\">\n            <p>{props.title}</p>\n            <div className=\"loader\" />\n        </div>\n    );\n};\n\nLoading.propTypes = {\n    title: PropTypes.string.isRequired\n};\n\nexport default Loading;\n\n","import React from 'react';\nimport update from 'immutability-helper';\nimport PropTypes from 'prop-types';\nimport { createPortal } from 'react-dom';\n\nimport Modal from '../../components/modal/modal';\nimport Toast from '../../components/toast/toast';\nimport Loading from '../../components/loading/loading';\n\nclass WithPopup extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            modal: false,\n            view: '',\n            value: '',\n            toast: false,\n            toastMessage: ''\n        };\n\n        this.modalOpen = this.modalOpen.bind(this);\n        this.modalClose = this.modalClose.bind(this);\n        this.toastOpen = this.toastOpen.bind(this);\n\n        this.modalControl = {\n            open: this.modalOpen,\n            close: this.modalClose\n        };\n\n        this.timeout = null;\n    }\n\n    componentWillUnmount()\n    {\n        this.timeout = null;\n    }\n\n    modalOpen(view, value)\n    {\n        this.setState(update(this.state, {\n            modal: { $set: true },\n            view: { $set: view },\n            value: { $set: value }\n        }));\n    }\n\n    modalClose()\n    {\n        this.setState(update(this.state, {\n            modal: { $set: false }\n        }));\n    }\n\n    toastOpen(m)\n    {\n        this.setState(update(this.state, {\n            toast: { $set: true },\n            toastMessage: { $set: m }\n        }), () =>\n        {\n            clearTimeout(this.timeout);\n            this.timeout = setTimeout(() =>\n            {\n                if (this.state.toast)\n                {\n                    this.setState(update(this.state, {\n                        toast: { $set: false },\n                    }));\n                }\n            }, 2500);\n        });\n    }\n\n    renderModal()\n    {\n        if (this.state.modal)\n        {\n            return createPortal(\n                <Modal\n                    view={this.state.view}\n                    value={this.state.value}\n                    modalControl={this.modalControl}\n                    actions={this.props.actions}\n                    loading={this.props.loading}\n                    tokenList={this.props.tokenList}\n                    keep={this.props.keep}\n                    toastOpen={this.toastOpen}\n                    user={this.props.user}\n                />,\n                document.getElementsByTagName('body')[0],\n            );\n        }\n        else\n        {\n            return null;\n        }\n    }\n\n    renderLoading()\n    {\n        if (this.props.loading)\n        {\n            return <Loading title={this.props.message} />;\n        }\n        else\n        {\n            return null;\n        }\n    }\n\n    renderToast()\n    {\n        if (this.state.toast)\n        {\n            return createPortal(\n                <Toast\n                    message={this.state.toastMessage}\n                />,\n                document.getElementsByTagName('body')[0],\n            );\n        }\n        else\n        {\n            return null;\n        }\n    }\n\n\n    render()\n    {\n        return (\n            <div>\n                {this.renderModal()}\n                {this.renderToast()}\n\n                {this.props.children(this.modalControl, this.toastOpen)}\n                {this.renderLoading()}\n            </div>\n        );\n    }\n}\n\nWithPopup.defaultProps = {\n    actions: {},\n    message: '',\n    loading: false,\n    keep: false,\n    tokenList: [],\n    user: {}\n};\n\nWithPopup.propTypes = {\n    children: PropTypes.func.isRequired,\n    actions: PropTypes.object,\n    message: PropTypes.string,\n    loading: PropTypes.bool,\n    keep: PropTypes.bool,\n    tokenList: PropTypes.array,\n    user: PropTypes.object,\n};\n\nexport default WithPopup;\n","/* eslint-disable no-undef */\nimport * as types from '../constants/actionTypesNews';\n\nconst news = finalConfig.news;\nexport function getNews()\n{\n    return async (dispatch) =>\n    {\n        let res = await fetch(`https://newsapi.org/v2/everything?sources=${finalConfig.news.source}&apiKey=${news.apiKey}&q=${news.query}`);\n        dispatch({\n            type: types.SET_NEWS,\n            data: res.body.articles\n        });\n    };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport equal from 'deep-equal';\nimport ReactTooltip from 'react-tooltip';\n\nimport { formatNumber, bnHex, bnTen, tenFill, buyDisplayPrice, sellDisplayPrice } from '../../utils/format';\nimport './orderBook.scss';\n\nclass OrderBookBuy extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {};\n\n        this.getPrice = this.getPrice.bind(this);\n    }\n\n    shouldComponentUpdate(nextProps)\n    {\n        if (equal(nextProps.book, this.props.book) && equal(nextProps.t, this.props.t))\n        {\n            return false;\n        }\n        else\n        {\n            return true;\n        }\n    }\n\n    componentDidUpdate()\n    {\n        const a = document.querySelector('.c_orderBook .sell > div:last-child');\n        if (!this.props.reverse && this.props.type === 'sell' && a)\n        {\n            const ua = navigator.userAgent.toLowerCase();\n            if (ua.indexOf('safari') !== -1)\n            {\n                a.scrollIntoView({ block: 'end' });\n            }\n        }\n    }\n\n    getPrice(data)\n    {\n        const { actions, myTransaction, to, changePrice, toastOpen, t } = this.props;\n\n        // 如果是市價交易 不可以點擊價格\n        const pendingType = document.querySelector('.pending-type .active');\n        if (!pendingType || pendingType.dataset.type === '2') return;\n\n        changePrice(data.displayPrice);\n\n        const { myTransactionChange } = actions.userActions;\n        let price = 0;\n\n        if (myTransaction.act === data.type && myTransaction.act === 'sell')\n        {\n            price = data.price;\n        }\n        else if (myTransaction.act === data.type && myTransaction.act === 'buy')\n        {\n            price = data.price;\n        }\n        else\n        {\n            price = bnTen(tenFill(1, 36)).div(bnHex(data.price)).toString(16);\n        }\n\n        const total = () =>\n        {\n            return myTransaction.act === 'sell' ?\n                bnTen(tenFill(bnHex(myTransaction.amount).mul(bnHex(price)).toString(), -18).split('.')[0]).toString(16) :\n                bnTen(tenFill(bnTen(tenFill(bnHex(myTransaction.amount).toString(), 18)).div(bnHex(price)).toString(), to.decimal - 18)).toString(16);\n        };\n\n\n        const tt = total();\n        const notValidTop = tenFill(bnHex(tt).toString(), -to.decimal) > (10 ** 9);\n        const netValidBottom = tenFill(bnHex(tt).toString(), -to.decimal) < (10 ** -2);\n\n        myTransactionChange({\n            price,\n            amount: myTransaction.amount,\n            able: (myTransaction.amount && !notValidTop && !netValidBottom) ? true : false,\n            total: myTransaction.amount ? tt : '-',\n            act: this.props.myTransaction.act\n        });\n        if (notValidTop) return toastOpen(`Total ${to.token}${t('table.max')}${10 ** 9}`);\n        if (netValidBottom) return toastOpen(`Total ${to.token}${t('table.min')}${10 ** -2}`);\n    }\n\n    renderTable()\n    {\n        const { book, type, t, reverse, from, to } = this.props;\n        let full;\n        let content = null;\n        let rebook = [...book];\n        if (book.length > 0)\n        {\n            const re = /order/;\n            if (!re.test(window.location.hash))\n            {\n                rebook = type === 'buy' ? rebook.slice(0, 7) : rebook.reverse().slice(0, 7);\n            }\n\n            // console.log('rebook', rebook);\n            if (!reverse)\n            {\n                rebook.sort((a, b) =>\n                {\n                    return b.displayPrice - a.displayPrice;\n                });\n            }\n            else\n            {\n                rebook.sort((a, b) =>\n                {\n                    return a.displayPrice - b.displayPrice;\n                });\n            }\n\n            full = rebook.reduce((max, curr) =>\n            {\n                return Number(curr.amount) > max ? Number(curr.amount) : max;\n            }, rebook[0].amount);\n\n            content = rebook.map((data, index) =>\n            {\n                const p = type === 'buy' ? buyDisplayPrice(data.price, from.decimal, to.decimal) : sellDisplayPrice(data.price, from.decimal, to.decimal);\n                return (\n                    <div key={data.index || index} onClick={() => { this.getPrice(data); }}>\n                        <div className={type === 'buy' ? 'type green' : 'type red'}>{type === 'buy' && !reverse ? `${t('table.buy')} ${index + 1}` : `${t('table.sell')} ${reverse ? index + 1 : rebook.length - index}` }</div>\n                        <div className=\"list\">\n                            <div data-tip data-for={`price${data.type}${index}`}>{data.displayPrice}</div>\n                            <ReactTooltip id={`price${data.type}${index}`} place=\"right\">{p}</ReactTooltip>\n\n                            <div className=\"item\" data-tip data-for={`amount${data.type}${index}`}>{formatNumber(8, Number(data.amount))}</div>\n                            <ReactTooltip id={`amount${data.type}${index}`} place=\"right\">{data.amount}</ReactTooltip>\n\n                            <div className=\"item\" data-tip data-for={`value${data.type}${index}`}>{formatNumber(8, Number(data.value))}</div>\n                            <ReactTooltip id={`value${data.type}${index}`} place=\"right\">{data.value}</ReactTooltip>\n                            <div className={type === 'buy' ? ' percent buy' : 'percent sell'} style={{ width: `${((data.amount / full) * 100)}%` }} />\n                        </div>\n                    </div>\n                );\n            });\n        }\n        return (\n            <div className=\"books\">\n                <div className={type === 'sell' ? 'sell order' : 'buy order'}>\n                    {content}\n                </div>\n            </div>\n        );\n    }\n\n    render()\n    {\n        // ReactTooltip.rebuild();\n        return (\n            <div className=\"c_orderBook\">\n                {this.renderTable()}\n            </div>\n        );\n    }\n}\n\nOrderBookBuy.defaultProps = {\n    t: () => {},\n    reverse: false,\n    actions: {},\n    myTransaction: {},\n    from: {},\n    to: {},\n    changePrice: () => {},\n    toastOpen: () => {}\n};\n\nOrderBookBuy.propTypes = {\n    book: PropTypes.array.isRequired,\n    type: PropTypes.string.isRequired,\n    t: PropTypes.func,\n    reverse: PropTypes.bool,\n    actions: PropTypes.object,\n    myTransaction: PropTypes.object,\n    from: PropTypes.object,\n    to: PropTypes.object,\n    changePrice: PropTypes.func,\n    toastOpen: PropTypes.func,\n};\n\nexport default translate()(OrderBookBuy);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { scaleLinear as d3ScaleLinear, } from 'd3-scale';\nimport { line as d3Line, area as d3Area } from 'd3-shape';\nimport { axisBottom as d3AxisBottom, axisRight as d3AxisRight } from 'd3-axis';\nimport { select as d3Select, mouse as d3Mouse } from 'd3-selection';\nimport { bisector as d3Bisector } from 'd3-array';\n// import equal from 'deep-equal';\n\nimport './deepChart.scss';\nimport { formatNumber, times } from '../../utils/format';\n// import { transition as d3Transition } from 'd3-transition';\n// import { easeLinear as d3EaseLinear } from 'd3-ease';\nclass DeepChart extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {};\n        this.middle = '';\n        this.distance = '';\n    }\n\n    componentDidMount()\n    {\n        const $this = this;\n        d3Select(this.graph).on('mousemove', function mouseMoveHandler()\n        {\n            $this.movePoint(d3Mouse(this), $this.total);\n        });\n    }\n\n    // shouldComponentUpdate(nextProps)\n    // {\n    //     if (equal(nextProps, this.props))\n    //     {\n    //         return false;\n    //     }\n    //     else\n    //     {\n    //         return true;\n    //     }\n    // }\n\n    componentWillUnmount()\n    {\n        d3Select(this.graph).on('mousemove', null);\n    }\n\n    chart(mdl, dis)\n    {\n        const { width, height, margin } = this.props;\n        const w = width - margin.left - margin.right;\n        const h = height - margin.bottom - margin.top;\n\n        const xScale = d3ScaleLinear()\n            .domain([mdl - dis, mdl + dis])\n            .range([0, w]);\n\n        const yScale = d3ScaleLinear()\n            .domain([0, this.maxValue * 1.2])\n            .range([h, 0]);\n\n        const line = d3Line()\n            .x(d => xScale(d.displayPrice))\n            .y(d => yScale(d.value));\n\n        const area = d3Area()\n            .x(d => xScale(d.displayPrice))\n            .y0(h)\n            .y1(d => yScale(d.value));\n\n        const xAxis = d3AxisBottom()\n            .scale(xScale)\n            .ticks(7);\n\n        const yAxis = d3AxisRight()\n            .scale(yScale)\n            .ticks(5);\n\n        const xGrid = d3AxisBottom()\n            .scale(xScale)\n            .ticks(7)\n            .tickSize(h)\n            .tickFormat('');\n\n        const yGrid = d3AxisRight()\n            .scale(yScale)\n            .ticks(5)\n            .tickSize(w)\n            .tickFormat('');\n\n        return {\n            w,\n            h,\n            line,\n            area,\n            xScale,\n            yScale,\n            xAxis,\n            yAxis,\n            xGrid,\n            yGrid,\n        };\n    }\n\n    movePoint([mouseX, mouseY], total)\n    {\n        const { xScale, yScale, line } = this.chart(this.middle, this.distance);\n        const { margin } = this.props;\n        let x = xScale.invert(mouseX - margin.left);\n        if (x < total[0].displayPrice) x = total[0].displayPrice;\n        if (x > total[total.length - 1].displayPrice) x = total[total.length - 1].displayPrice;\n        const bisect = d3Bisector(d => d.displayPrice).left;\n        let pos = bisect(total, x, 0, total.length);\n        let matchPoint;\n\n        const detail = (match) =>\n        {\n            if (match.type === 'buy')\n            {\n                if (x > this.left[this.left.length - 1].displayPrice)\n                {\n                    x = this.left[this.left.length - 1].displayPrice;\n                }\n            }\n            if (match.type === 'sell')\n            {\n                if (x < this.right[0].displayPrice)\n                {\n                    x = this.right[0].displayPrice;\n                }\n            }\n\n            if (match.type === 'sell' && match.value === 0)\n            {\n                match.value = this.right[1].value;\n            }\n\n            d3Select(this.circle)\n                .attr('cx', xScale(x))\n                .attr('cy', yScale(match.value));\n\n            d3Select(this.line)\n                .attr('d', line([{ displayPrice: x, value: this.maxValue * 1.2 }, { displayPrice: x, value: 0 }]));\n\n            d3Select(this.t_displayPrice)\n                .attr('fill', '#fff');\n\n            d3Select(this.rect)\n                .attr('fill', 'rgba(0, 0, 0, 0.6)')\n                .attr('stroke', '#E7A977')\n                .attr('stroke-width', 2)\n                .attr('stroke-opacity', 0.7);\n\n            d3Select(this.info_displayPrice)\n                .text(`${formatNumber(7, x)}`);\n\n            d3Select(this.t_amount)\n                .attr('fill', '#fff');\n\n            d3Select(this.info_amount)\n                .text(`${formatNumber(5, match.value)}`);\n\n            d3Select(this.text)\n                .attr('x', xScale(x) - 60)\n                .attr('y', yScale(match.value) - 60);\n\n            if (match.type === 'sell')\n            {\n                d3Select(this.info_displayPrice)\n                    .attr('class', 'red');\n\n                d3Select(this.info_amount)\n                    .attr('class', 'red');\n            }\n            else\n            {\n                d3Select(this.info_displayPrice)\n                    .attr('class', 'green');\n\n                d3Select(this.info_amount)\n                    .attr('class', 'green');\n            }\n        };\n\n        const check = (m) =>\n        {\n            if (m.value === 0)\n            {\n                if (m.type === 'sell')\n                {\n                    matchPoint = this.total[this.total.indexOf(m) + 1];\n                }\n                else\n                {\n                    matchPoint = this.total[this.total.indexOf(m) - 1];\n                }\n            }\n        };\n\n        if (pos > total.length)\n        {\n            matchPoint = total[total.length - 1];\n            detail(matchPoint);\n            return;\n        }\n\n        if (pos === 0)\n        {\n            detail(total[0]);\n            return;\n        }\n\n        // handle out of right space error\n        if (pos === total.length)\n        {\n            matchPoint = total[pos - 1];\n            detail(matchPoint);\n        }\n        else\n        {\n            const smaller = total[pos - 1];\n            const larger = total[pos];\n            matchPoint = x - smaller.displayPrice <= larger.displayPrice - x ? smaller : larger;\n            check(matchPoint);\n            detail(matchPoint);\n        }\n    }\n\n    render()\n    {\n        const { sell, buy, margin } = this.props;\n        if (sell.length === 0 && buy.length === 0)\n        {\n            return (\n                <div className=\"no-result\">\n                    {/* 目前尚無掛單 */}\n                </div>\n            );\n        }\n        const $this = this;\n        let sellbook = [];\n        let buybook = [];\n        this.total = [];\n        this.right = [];\n        this.left = [];\n\n        if (sell.length > 0)\n        {\n            sellbook = [...sell].sort((a, b) => a.displayPrice - b.displayPrice).reduce((prev, curr) =>\n            {\n                let next = prev;\n                let node = next.find((order) =>\n                {\n                    return order.displayPrice === curr.displayPrice;\n                });\n\n                if (node)\n                {\n                    node.amount += curr.amount;\n                }\n                else\n                {\n                    next.push(Object.assign({}, curr));\n                }\n                return next;\n            }, []);\n\n            for (let i = 0; i < sellbook.length; i += 1)\n            {\n                this.right.push(sellbook[i]);\n                if (sellbook[i + 1])\n                {\n                    this.right.push({ ...sellbook[i + 1], value: sellbook[i].value });\n                }\n            }\n\n            this.right.push({ ...this.right[this.right.length - 1], displayPrice: times(String(this.right[this.right.length - 1].displayPrice), String(1.1)) });\n            this.right.unshift({ ...this.right[0], value: 0 });\n        }\n\n        if (buy.length > 0)\n        {\n            const book = [...buy].sort((a, b) => a.displayPrice - b.displayPrice);\n            buybook = book.reduce((prev, curr) =>\n            {\n                const next = prev;\n                const node = next.find((order) =>\n                {\n                    return order.displayPrice === curr.displayPrice;\n                });\n\n                if (node)\n                {\n                    node.amount += curr.amount;\n                }\n                else\n                {\n                    next.push(Object.assign({}, curr));\n                }\n                return next;\n            }, []);\n\n            for (let i = 0; i < buybook.length; i += 1)\n            {\n                this.left.push(buybook[i]);\n                if (buybook[i + 1])\n                {\n                    this.left.push({ ...buybook[i], value: buybook[i + 1].value });\n                }\n            }\n            this.left.unshift({ ...this.left[0], displayPrice: this.left[0].displayPrice * 0.9 });\n            this.left.push({ ...this.left[this.left.length - 1], value: 0 });\n        }\n\n        this.total = this.left.concat(this.right);\n        if (!buy[0])\n        {\n            this.middle = Number(sell[0].displayPrice);\n        }\n        else if (!sell[0])\n        {\n            this.middle = Number(buy[0].displayPrice);\n        }\n        else\n        {\n            this.middle = (Number(buy[0].displayPrice) + Number(sell[sell.length - 1].displayPrice)) / 2;\n        }\n        const max = this.total[this.total.length - 1];\n        const min = this.total[0];\n        this.distance = max.displayPrice - this.middle > this.middle - min.displayPrice ? max.displayPrice - this.middle : this.middle - min.displayPrice;\n        if (min.displayPrice - this.middle <= 0)\n        {\n            this.distance = this.middle;\n            const bk = this.right.indexOf(this.right.find(book => book.displayPrice > (this.middle + this.distance)));\n            if (bk > 0)\n            {\n                this.right.splice(bk + 1, this.right.length - bk);\n            }\n        }\n        if (sellbook.length > 0)\n        {\n            this.right[this.right.length - 1] = { ...this.right[this.right.length - 1], displayPrice: (this.middle + this.distance), value: this.right[this.right.length - 2].value };\n        }\n\n        if (buybook.length > 0)\n        {\n            this.left[0] = { ...this.left[0], displayPrice: (this.middle - this.distance) };\n        }\n\n        this.total = this.left.concat(this.right);\n\n        d3Select(this.graph).on('mousemove', function mouseMoveHandler()\n        {\n            $this.movePoint(d3Mouse(this), $this.total);\n        });\n\n        this.maxValue = this.total[0].value > this.total[this.total.length - 1].value ? this.total[0].value : this.total[this.total.length - 1].value;\n\n        const { w, h, line, area, xAxis, yAxis, xGrid, yGrid } = this.chart(this.middle, this.distance);\n        return (\n            <svg className=\"c_deepChart\" ref={(svg) => { this.graph = svg; }}>\n                <g style={{ transform: `translate(${margin.left}px, ${38 + margin.bottom}px)` }}>\n                    <path className=\"line sell-line\" d={line(this.right)} />\n                    <path className=\"area sell-area\" d={area(this.right)} />\n                    <path className=\"line buy-line\" d={line(this.left)} />\n                    <path className=\"area buy-area\" d={area(this.left)} />\n                    <path className=\"line middle-line\" d={line([{ displayPrice: this.middle, value: this.maxValue * 1.2 }, { displayPrice: this.middle, value: 0 }])} />\n                    <g className=\"grid\" ref={node => d3Select(node).call(yGrid)} />\n                    <g className=\"grid\" ref={node => d3Select(node).call(xGrid)} />\n                    <g className=\"xAxis\" style={{ transform: `translateY(${h}px)` }} ref={node => d3Select(node).call(xAxis)} />\n                    <g className=\"yAxis\" style={{ transform: `translateX(${w}px)` }} ref={node => d3Select(node).call(yAxis)} />\n                    <circle cx=\"-100\" ref={(c) => { this.circle = c; }} className=\"circle\" r=\"5\" />\n                    <path className=\"point-line\" ref={(p) => { this.line = p; }} />\n                    <svg className=\"detail\" ref={(text) => { this.text = text; }} height=\"50\">\n                        <rect ref={(r) => { this.rect = r; }} width=\"120\" height=\"46\" fill=\"transparent\" />\n                        <text y=\"3\" x=\"4\">\n                            <tspan fill=\"transparent\" dy=\"1.2em\" ref={(t) => { this.t_displayPrice = t; }}>Price<tspan ref={(t) => { this.info_displayPrice = t; }} className=\"info\" /></tspan>\n                        </text>\n                        <text y=\"23\" x=\"4\">\n                            <tspan fill=\"transparent\" dy=\"1.2em\" ref={(t) => { this.t_amount = t; }}>Total<tspan ref={(t) => { this.info_amount = t; }} className=\"info\" /></tspan>\n                        </text>\n                    </svg>\n                </g>\n            </svg>\n        );\n    }\n}\n\nDeepChart.propTypes = {\n    sell: PropTypes.array.isRequired,\n    buy: PropTypes.array.isRequired,\n    height: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    margin: PropTypes.object.isRequired\n};\n\nexport default DeepChart;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ChartCanvas, Chart } from 'react-stockcharts';\nimport { BarSeries, CandlestickSeries, LineSeries } from 'react-stockcharts/lib/series';\nimport { XAxis, YAxis } from 'react-stockcharts/lib/axes';\nimport { discontinuousTimeScaleProvider } from 'react-stockcharts/lib/scale';\nimport { fitWidth } from 'react-stockcharts/lib/helper';\nimport { last } from 'react-stockcharts/lib/utils';\nimport { HoverTooltip } from 'react-stockcharts/lib/tooltip';\nimport { timeFormat } from 'd3-time-format';\nimport { translate } from 'react-i18next';\nimport {\n    CurrentCoordinate,\n} from 'react-stockcharts/lib/coordinates';\nimport { formatNumber } from '../../utils/format';\n// import { ema } from \"react-stockcharts/lib/indicator\";\n\nconst dateFormat = timeFormat('%Y-%m-%d-%H:%M:%S');\nclass KChart extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {};\n        this.range = ['10minute', '1hr', '1day', '1month'];\n        this.unit = 0;\n\n        this.tooltipContent = this.tooltipContent.bind(this);\n    }\n\n    tooltipContent()\n    {\n        const { t } = this.props;\n        return ({ currentItem, xAccessor }) =>\n        {\n            return {\n                x: dateFormat(xAccessor(currentItem)),\n                y: [\n                    {\n                        label: `${t('chart.opPrice')} `,\n                        value: formatNumber(9, currentItem.open)\n                    },\n                    {\n                        label: `${t('chart.htPrice')} `,\n                        value: formatNumber(9, currentItem.high)\n                    },\n                    {\n                        label: `${t('chart.ltPrice')} `,\n                        value: formatNumber(9, currentItem.low)\n                    },\n                    {\n                        label: `${t('chart.csPrice')} `,\n                        value: formatNumber(9, currentItem.close)\n                    },\n                    {\n                        label: `${t('chart.amount')} `,\n                        value: formatNumber(9, currentItem.amount)\n                    },\n                    {\n                        label: '10ma ',\n                        value: formatNumber(9, currentItem['10ma']),\n                        stroke: '#f8e71c'\n                    },\n                    {\n                        label: '5ma ',\n                        value: formatNumber(9, currentItem['5ma']),\n                        stroke: '#77479e'\n                    }\n                ]\n            };\n        };\n    }\n\n\n    render()\n    {\n        const { data: initialData, width, height, ratio, margin } = this.props;\n        const xScaleProvider = discontinuousTimeScaleProvider.inputDateAccessor(d => d.timestamp);\n        const { data, xScale, xAccessor, displayXAccessor } = xScaleProvider(initialData);\n\n        if (width < 101 || initialData.length < 1)\n        {\n            return <div />;\n        }\n\n        // const ema50 = ema()\n        // .id(0)\n        // .options({ windowSize: 50 })\n        // .merge((d, c) => { d.ema50 = c; })\n        // .accessor(d => d.ema50);\n\n        const xExtents = [\n            xAccessor(last(data)),\n            xAccessor(data[0])\n        ];\n        const candlesAppearance = {\n            wickStroke: function stroke(d)\n            {\n                return d.close < d.open ? '#f44173' : '#27ca7b';\n            },\n            fill: function fill(d)\n            {\n                return d.close < d.open ? '#f44173' : '#27ca7b';\n            },\n            stroke: function stroke(d)\n            {\n                return d.close < d.open ? '#f44173' : '#27ca7b';\n            },\n            candleStrokeWidth: 1,\n            widthRatio: 0.8,\n            opacity: 1,\n        };\n\n        // const gridHeight = height - margin.top - margin.bottom;\n        const gridWidth = width - margin.left - margin.right;\n        const yGrid = {\n            innerTickSize: -1 * gridWidth,\n            tickStrokeDasharray: 'Dot'\n        };\n\n        const grid = {\n            innerTickSize: -1 * gridWidth,\n            tickStrokeOpacity: 0\n        };\n\n        // const xGrid = { innerTickSize: -1 * gridHeight };\n        return (\n            <ChartCanvas\n                ref={(node) => { this.node = node; }}\n                height={height}\n                ratio={ratio}\n                width={width}\n                margin={margin}\n                seriesName=\"MSFT\"\n                data={data}\n                xScale={xScale}\n                xAccessor={xAccessor}\n                displayXAccessor={displayXAccessor}\n                xExtents={xExtents}\n                clamp={true}\n                pointsPerPxThreshold={1}\n                // zoomEvent={false}\n            >\n                <Chart id={1} yExtents={d => [d.high * 1.05, d.low * 1.3]} height={height - 140}>\n                    <XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6} stroke=\"rgba(255, 255, 255, .5)\" tickStroke=\"rgba(255, 255, 255, .5)\" showTicks={false} />\n                    <YAxis axisAt=\"right\" orient=\"right\" ticks={5} stroke=\"#8a8a8a\" tickStroke=\"#8a8a8a\" {...yGrid} />\n                    <LineSeries yAccessor={d => d['5ma']} stroke=\"#77479e\" />\n                    <LineSeries yAccessor={d => d['10ma']} stroke=\"#f8e71c\" />\n                    <CurrentCoordinate yAccessor={d => d['5ma']} fill=\"#77479e\" />\n                    <CurrentCoordinate yAccessor={d => d['10ma']} fill=\"#f8e71c\" />\n                    <CandlestickSeries {...candlesAppearance} />\n                    <HoverTooltip\n                        tooltipContent={this.tooltipContent()}\n                        fill=\"#000\"\n                        bgFill=\"#D4E2FD\"\n                        bgOpacity={0.5}\n                        stroke=\"#000\"\n                        fontFill=\"#ddd\"\n                        opacity={0.6}\n                        fontSize={14}\n                    />\n                </Chart>\n                <Chart id={2} origin={(w, h) => [0, h - 90]} height={90} yExtents={d => d.amount * 1.2}>\n                    <XAxis axisAt=\"bottom\" orient=\"bottom\" stroke=\"#8a8a8a\" tickStroke=\"#8a8a8a\" {...grid} />\n                    <YAxis axisAt=\"right\" orient=\"right\" ticks={3} stroke=\"#8a8a8a\" tickStroke=\"#8a8a8a\" {...grid} />\n                    <BarSeries yAccessor={d => d.amount} />\n                </Chart>\n            </ChartCanvas>\n        );\n    }\n}\n\nKChart.defaultProps = {\n    t: () => {}\n};\n\nKChart.propTypes = {\n    data: PropTypes.array.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    ratio: PropTypes.number.isRequired,\n    margin: PropTypes.object.isRequired,\n    t: PropTypes.func\n};\n\nexport default translate()(fitWidth(KChart));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport { translate } from 'react-i18next';\nimport equal from 'deep-equal';\nimport DeepChart from '../deepChart/deepChart';\nimport PriceChart from '../priceChart/priceChart';\nimport Prompt from '../prompt/prompt';\nimport './content.scss';\n\nconst pw = 480;\nclass Content extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            width: 600,\n            height: 360,\n            type: 2,\n            margin: { left: 20, right: 60, top: 10, bottom: 20 },\n            open: true,\n            toggle: false,\n            kType: 'hour'\n        };\n\n        this.option = 'hour';\n        this.changeChart = this.changeChart.bind(this);\n        this.changeKType = this.changeKType.bind(this);\n        this.getKChart = this.getKChart.bind(this);\n        this.showChart = this.showChart.bind(this);\n        this.renderSelect = this.renderSelect.bind(this);\n        this.toggleSelect = this.toggleSelect.bind(this);\n        this.clickOutside = this.clickOutside.bind(this);\n    }\n\n    componentDidMount()\n    {\n        setTimeout(() =>\n        {\n            this.setField();\n        }, 100);\n\n        window.addEventListener('resize', this.updateDimensions.bind(this));\n        window.addEventListener('click', this.clickOutside);\n    }\n\n    shouldComponentUpdate(nextProps, nextState)\n    {\n        if (equal(nextProps, this.props) && equal(nextState, this.state))\n        {\n            return false;\n        }\n        else\n        {\n            return true;\n        }\n    }\n\n    componentWillUnmount()\n    {\n        window.removeEventListener('resize', this.updateDimensions.bind(this));\n        window.removeEventListener('click', this.clickOutside);\n    }\n\n    setField()\n    {\n        if (!this.field) return;\n        const width = this.field.offsetWidth - 30;\n        const height = this.field.offsetHeight - 20;\n        this.setState(update(this.state, {\n            width: { $set: width },\n            height: { $set: height }\n        }));\n        if (window.innerWidth < pw)\n        {\n            this.setState(update(this.state, {\n                margin: {\n                    $set: { left: 20, right: 55, top: 20, bottom: 30 }\n                }\n            }));\n        }\n    }\n\n    getKChart(volume)\n    {\n        const { actions } = this.props;\n        const { timeunitChange, kLineGet$ } = actions.bookActions;\n        timeunitChange(volume);\n\n        kLineGet$();\n    }\n\n    clickOutside(e)\n    {\n        const toggle = document.querySelector('.c_content .toggle');\n        const select = document.querySelector('.c_content .select');\n        if (toggle && !select.contains(e.target))\n        {\n            this.setState(update(this.state, {\n                toggle: { $set: false }\n            }));\n        }\n    }\n\n    changeChart(type)\n    {\n        if (type === 1)\n        {\n            this.setState(update(this.state, {\n                margin: {\n                    left: { $set: 60 },\n                    right: { $set: 90 },\n                    bottom: { $set: 40 }\n                },\n                type: { $set: type }\n            }));\n        }\n        else\n        {\n            this.setState(update(this.state, {\n                margin: {\n                    left: { $set: 20 },\n                    right: { $set: 60 },\n                    bottom: { $set: 20 }\n                },\n                type: { $set: type }\n            }));\n        }\n    }\n\n    changeKType(e)\n    {\n        e.stopPropagation();\n        const type = e.currentTarget.dataset.type;\n        switch (type)\n        {\n            case 'minute':\n                this.getKChart(60 * 10 * 1000);\n                break;\n            case 'hour':\n                this.getKChart(60 * 60 * 1000);\n                break;\n            case 'day':\n                this.getKChart(60 * 60 * 24 * 1000);\n                break;\n            case 'month':\n                this.getKChart(60 * 60 * 24 * 30 * 1000);\n                break;\n            default:\n                this.getKChart(60 * 60 * 1000);\n        }\n        this.setState(update(this.state, {\n            toggle: { $set: false },\n            kType: { $set: type }\n        }));\n    }\n\n    showChart()\n    {\n        this.setState(update(this.state, {\n            open: { $set: !this.state.open }\n        }));\n    }\n\n    toggleSelect()\n    {\n        this.setState(update(this.state, {\n            toggle: { $set: !this.state.toggle },\n        }));\n    }\n\n    updateDimensions()\n    {\n        if (this.field)\n        {\n            this.setState({\n                width: this.field.offsetWidth - 30,\n                height: this.field.offsetHeight - 20,\n            });\n\n            if (window.innerWidth < pw)\n            {\n                this.setState(update(this.state, {\n                    margin: {\n                        $set: { left: 20, right: 55, top: 20, bottom: 30 }\n                    }\n                }));\n            }\n            else if (window.innerWidth >= pw && this.state.type === 1)\n            {\n                this.setState(update(this.state, {\n                    margin: {\n                        left: { $set: 50 },\n                        right: { $set: 80 },\n                        bottom: { $set: 40 }\n                    }\n                }));\n            }\n            else\n            {\n                this.setState(update(this.state, {\n                    margin: {\n                        left: { $set: 20 },\n                        right: { $set: 60 },\n                        bottom: { $set: 20 }\n                    }\n                }));\n            }\n        }\n    }\n\n    renderChart()\n    {\n        const { width, height, type, margin } = this.state;\n        const { sell, buy, data } = this.props;\n\n        if (type === 1)\n        {\n            return (\n                <DeepChart margin={margin} sell={sell} buy={buy} width={width} height={height} />\n            );\n        }\n        else\n        {\n            return (\n                <PriceChart margin={margin} data={data} height={height} width={width} />\n            );\n        }\n    }\n\n    renderSelect()\n    {\n        if (this.state.type === 2)\n        {\n            let type;\n            const { t } = this.props;\n            switch (this.state.kType)\n            {\n                case 'minute':\n                    type = t('chart.10minute');\n                    break;\n                case 'hour':\n                    type = t('chart.hour');\n                    break;\n                case 'day':\n                    type = t('chart.day');\n                    break;\n                case 'month':\n                    type = t('chart.month');\n                    break;\n                default:\n                    type = t('chart.hour');\n            }\n            return (\n                <div className=\"unit\">\n                    <div className=\"select\" onClick={this.toggleSelect}>\n                        <span>{type}</span>\n                        <img src=\"/img/icon/ic-dropdown-p.svg\" alt=\"dropdown\" />\n                        <div className={this.state.toggle ? 'toggle' : 'toggle close'}>\n                            <div data-type=\"minute\" onClick={this.changeKType}>{t('chart.10minute')}</div>\n                            <div data-type=\"hour\" onClick={this.changeKType}>{t('chart.hour')}</div>\n                            <div data-type=\"day\" onClick={this.changeKType}>{t('chart.day')}</div>\n                            <div data-type=\"month\" onClick={this.changeKType}>{t('chart.month')}</div>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n        else\n        {\n            return null;\n        }\n    }\n\n    render()\n    {\n        const { t } = this.props;\n        const { type } = this.state;\n        return (\n            <div className=\"c_content\">\n                <div className=\"title\">\n                    <div className=\"control\">\n                        <div>\n                            <a className={type === 1 ? 'switch active' : 'switch'} onClick={() => { this.changeChart(1); }}>\n                                {t('chart.depthChart')}\n                                <Prompt message={t('prompt.depth')} />\n                            </a>\n                            <a className={type === 2 ? 'switch active' : 'switch'} onClick={() => { this.changeChart(2); }}>\n                                {t('chart.priceChart')}\n                                <Prompt message={t('prompt.candlestick')} />\n                            </a>\n                        </div>\n                    </div>\n                </div>\n                <div className={this.state.open ? 'dashboard' : 'dashboard close'}>\n                    {this.renderSelect()}\n                    <div className=\"chart\" ref={(el) => { this.field = el; }}>\n                        {this.renderChart()}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nContent.defaultProps = {\n    t: () => {},\n};\n\nContent.propTypes = {\n    sell: PropTypes.array.isRequired,\n    buy: PropTypes.array.isRequired,\n    data: PropTypes.array.isRequired,\n    t: PropTypes.func,\n    actions: PropTypes.object.isRequired\n};\n\nexport default translate()(Content);\n","/* eslint-disable no-undef */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport { translate } from 'react-i18next';\nimport equal from 'deep-equal';\nimport { tenFill, bnTen, bnHex, formatNumber } from '../../utils/format';\nimport * as rpc from '../../utils/rpc';\nimport './limitTransaction.scss';\n\n\nclass LimitTransaction extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            tmp: -1, // 暫時的新掛單編號\n        };\n\n        this.handleInput = this.handleInput.bind(this);\n        this.openLimitPending = this.openLimitPending.bind(this);\n        this.pending = this.pending.bind(this);\n        this.clickFocus = this.clickFocus.bind(this);\n        this.renderButton = this.renderButton.bind(this);\n\n        this.timeout = null;\n    }\n\n    componentDidMount()\n    {\n        window.addEventListener('click', this.clickOutside);\n    }\n\n    shouldComponentUpdate(nextProps, nextState)\n    {\n        if (equal(nextProps, this.props) && equal(nextState, this.state))\n        {\n            return false;\n        }\n        else\n        {\n            return true;\n        }\n    }\n\n    componentWillUnmount()\n    {\n        window.removeEventListener('click', this.clickOutside);\n        this.timeout = null;\n    }\n\n    // 在div上新增樣式 並在inpu新增focus事件\n    clickFocus(e)\n    {\n        const type = e.currentTarget.dataset.input;\n\n        this[type].focus();\n        this.props.handleFocus(type);\n    }\n\n    handleInput(e)\n    {\n        const name = e.target.name;\n        const value = e.target.value;\n        this.props.handleInput(name, value);\n        // 輸入完500毫秒後執行\n        clearTimeout(this.timeout);\n        this.timeout = setTimeout(() =>\n        {\n            const { from, to, t, toastOpen, handlePreview, actions, myTransaction, price, amount } = this.props;\n            const { myTransactionUpdate } = actions.userActions;\n\n            const disable = () =>\n            {\n                myTransactionUpdate({ type: 'able', value: false });\n                myTransactionUpdate({ type: 'total', value: '-' });\n            };\n\n            // 輸入值不可大於 10 ** 9\n            if (amount.value > 0 && amount.value > (10 ** 9))\n            {\n                disable();\n                return toastOpen(`${from.token} ${t('max')}${10 ** 9}`);\n            }\n            // 輸入值不可小於 10 ** -2\n            else if (amount.value && amount.value < (10 ** -2))\n            {\n                disable();\n                return toastOpen(`${from.token} ${t('min')}${10 ** -2}`);\n            }\n            // 必須是數字\n            else if (Number(amount.value))\n            {\n                myTransactionUpdate({\n                    type: 'amount',\n                    value: bnTen(tenFill(amount.value, from.decimal)).toString(16)\n                });\n            }\n            else\n            {\n                myTransactionUpdate({\n                    type: 'amount',\n                    value: ''\n                });\n            }\n\n            if (price.value && price.value > 0)\n            {\n                const buyPrice = () =>\n                {\n                    let tmp = tenFill(bnTen(tenFill(1, 36)).div(bnTen(tenFill(price.value, 18))).toString(), from.decimal - to.decimal);\n                    return bnTen(tmp.split('.')[0]).toString(16);\n                };\n                myTransactionUpdate({\n                    type: 'price',\n                    value: myTransaction.act === 'sell' ? bnTen(tenFill(price.value, (18 + to.decimal) - from.decimal)).toString(16) : buyPrice(),\n                });\n            }\n            else if (name === 'price')\n            {\n                myTransactionUpdate({\n                    type: 'price',\n                    value: ''\n                });\n            }\n            if (Number(amount.value) && Number(price.value))\n            {\n                const tmpPrice = tenFill(price.value, 18);\n                const tmpAmount = tenFill(amount.value, from.decimal);\n                const tv = tenFill(bnTen(tmpAmount).mul(bnTen(tmpPrice)).toString(), -18 - from.decimal);\n                if (tv >= (10 ** 9)) // 產生值不可大於 10 ** 9\n                {\n                    disable();\n                    return toastOpen(`Total ${to.token} ${t('max')}1000000000`);\n                }\n                else if (tv < (10 ** -2)) // 產生值不可小於 10 ** -2\n                {\n                    disable();\n                    return toastOpen(`Total ${to.token} ${t('min')}0.01`);\n                }\n                else\n                {\n                    const hexTotal = bnTen(tenFill(tv, to.decimal)).toString(16);\n                    myTransactionUpdate({ type: 'total', value: hexTotal });\n                    myTransactionUpdate({ type: 'able', value: true });\n                    handlePreview(amount.value, tv);\n                }\n            }\n            else\n            {\n                disable();\n            }\n        }, 500);\n    }\n\n    // 打開交易彈窗\n    async openLimitPending()\n    {\n        const {\n            account,\n            to,\n            from,\n            t,\n            user,\n            sellbook,\n            buybook,\n            tokenList,\n            actions,\n            toastOpen,\n            myTransaction,\n            amount\n        } = this.props;\n\n        const agent = '';\n\n        if (!user.wallet) return toastOpen(`${t('importAlert')}`);\n        if (myTransaction.act === 'sell')\n        {\n            const target = account.find(l => l.address === from.address);\n            const a = bnHex(target.usable);\n            const b = bnTen((amount.value * (10 ** from.decimal)).toFixed(0));\n            if (a.lt(b)) return toastOpen(`${from.token}${t('out')}`);\n        }\n        else\n        {\n            const target = account.find(l => l.address === to.address);\n            const a = bnHex(target.usable);\n            const b = bnHex(myTransaction.total);\n            if (a.lt(b)) return toastOpen(`${to.token}${t('out')}`);\n        }\n\n\n        // 取得可交易掛單邏輯\n        const fToken = tokenList.find(l => l.address === from.address);\n        const tToken = tokenList.find(l => l.address === to.address);\n        let fromToken;\n        let toToken;\n\n        let arr = [];\n        let long = null;\n\n        // 可交易掛單長度\n        if (myTransaction.act === 'buy')\n        {\n            long = 0;\n            const tmpSellBook = [...sellbook].reverse();\n            const p = bnTen(tenFill(1, 36)).div(bnHex(myTransaction.price));\n            for (let i = 0; i < tmpSellBook.length; i += 1)\n            {\n                if (bnHex(tmpSellBook[i].price).lte(p) || Number(bnHex(tmpSellBook[i].price).toString()) - Number(p.toString()) < 10 ** 7)\n                {\n                    long += 1;\n                    break;\n                }\n            }\n\n            if (long > 0)\n            {\n                arr = tmpSellBook.slice(0, long);\n            }\n            fromToken = {\n                token: tToken.token,\n                address: tToken.address,\n                amount: myTransaction.total,\n                price: myTransaction.price,\n            };\n            toToken = {\n                token: fToken.token,\n                address: fToken.address,\n                amount: myTransaction.amount,\n            };\n        }\n        else\n        {\n            for (let i = 0; i < buybook.length; i += 1)\n            {\n                if (bnHex(buybook[i].price).lte(bnTen(tenFill(1, 36)).div(bnHex(myTransaction.price))))\n                {\n                    long = i + 1;\n                }\n            }\n\n            if (long)\n            {\n                arr = buybook.slice(0, long);\n            }\n\n            fromToken = {\n                token: fToken.token,\n                address: fToken.address,\n                amount: myTransaction.amount,\n                price: myTransaction.price,\n            };\n            toToken = {\n                token: tToken.token,\n                address: tToken.address,\n                amount: myTransaction.total,\n            };\n        }\n\n        actions.modalActions.updateLoading(true);\n        actions.modalActions.updateMessage(t('gettingTx'));\n\n        let fee;\n        if (arr.length > 0)\n        {\n            fee = await rpc.calcFee(user.wallet.address, toToken);\n        }\n        else\n        {\n            fee = 0;\n        }\n\n        const checkETH = (gas) =>\n        {\n            const eth = account.find(d => d.address === finalConfig.ethAddress);\n            let fromBalance = Number(tenFill(bnHex(eth.usable).toString(), -18));\n            if (fromToken.address === finalConfig.ethAddress)\n            {\n                fromBalance -= tenFill(bnHex(fromToken.amount).toString(), -to.decimal);\n            }\n\n            if (fromBalance < Number(gas))\n            {\n                return false;\n            }\n            else\n            {\n                return true;\n            }\n        };\n\n        if (!user.observer)\n        {\n            const tx = await rpc.estimateGas(fromToken, toToken, user.wallet.address, user.key, agent);\n\n            if (tx)\n            {\n                actions.modalActions.updateLoading(false);\n                const gas = tx.userAddress ? Number(tenFill(tx.gasPrice * tx.gasLimit, -18)) + ((arr.length + 1) * Number(tenFill(1500000, -18))) + Number(tenFill(50000, -18)) : tenFill(tx.gasPrice * tx.gasLimit, -18);\n\n                if (!checkETH(gas))\n                {\n                    return toastOpen(`ETH${t('out')}`);\n                }\n\n                this.props.modalControl.open('transaction', {\n                    type: myTransaction.act,\n                    fromToken,\n                    toToken,\n                    fromDecimal: tx.fromDecimal,\n                    toDecimal: tx.toDecimal,\n                    gas,\n                    fee,\n                    exec: () =>\n                    {\n                        this.pending(myTransaction.act, tx);\n                    }\n                });\n            }\n            else\n            {\n                actions.modalActions.updateLoading(false);\n                toastOpen(t('failMessage'));\n                console.warn('Error');\n            }\n        }\n        else\n        {\n            actions.userActions.changeKeep(true);\n            let allowance = await rpc.observerAllowance(fromToken, user.wallet.address);\n            actions.modalActions.updateLoading(false);\n\n            const estimate = async (skip) =>\n            {\n                const tx = await rpc.observerEstimatGas(fromToken, toToken, user.wallet.address, agent);\n                if (skip)\n                {\n                    tx.skip = true;\n                }\n                this.pending(myTransaction.act, tx);\n            };\n\n            if (allowance === '0x') allowance = '0';\n            if (bnHex(allowance.replace('0x', '')).lt(bnHex(fromToken.amount)) && (allowance / (10 ** 18)) !== 0)\n            {\n                const pass = await rpc.observerApprove({ ...fromToken, amount: '0' });\n                if (pass)\n                {\n                    // estimate();\n                    this.props.modalControl.open('observerQr', { type: 'approveZero', qrcode: pass, exec: () => { this.props.modalControl.close(); estimate(); }, fromToken, message: t('observerWaiting') });\n                }\n            }\n            else if (bnHex(allowance.replace('0x', '')).gte(bnHex(fromToken.amount)))\n            {\n                estimate(true);\n            }\n            else\n            {\n                this.props.modalControl.close();\n                estimate();\n            }\n        }\n    }\n\n    async pending(type, tx)\n    {\n        const { from, to, t, user, createQuery, toastOpen, actions, price, amount, handleInput } = this.props;\n        const { myBooksAdd, myTransactionChange } = actions.userActions;\n        // 送出中掛單\n        let book = {\n            no: this.state.tmp,\n            desc: `${to.token}/${from.token}`,\n            status: 'active',\n            timestamp: t('sending'),\n            displayPrice: price.value,\n            type,\n            fill: 0,\n            amount: amount.value,\n            from: to.token,\n            to: from.token\n        };\n\n        actions.modalActions.updateLoading(true);\n        actions.modalActions.updateMessage(user.observer ? t('dataGenerating') : t('success'));\n        // if (type === 'sell')\n        // {\n        //     book = { ...book, from: to.token, to: from.token, amount: Number(this.from.value) };\n        // }\n        // else\n        // {\n        //     book = { ...book, from: from.token, to: to.token, amount: Number(volume) };\n        // }\n\n        // 如果是觀察者模式\n        if (user.observer)\n        {\n            rpc.createStream(tx).then((res) =>\n            {\n                if (tx.skip)\n                {\n                    res.approve = '';\n                }\n                createQuery(type, res.raw, res.approve, tx.from, tx.data);\n                actions.modalActions.updateLoading(false);\n            });\n        }\n        else\n        {\n            // 編號 -1 避免重複\n            this.setState(update(this.state, {\n                tmp: { $set: this.state.tmp - 1 }\n            }), () =>\n            {\n                myBooksAdd(book);\n            });\n\n            const receipt = await rpc.transaction(tx);\n\n            if (receipt)\n            {\n                actions.modalActions.updateLoading(false);\n                // toastOpen(t('sent'));\n                this.props.modalControl.open('receipt', { receipt });\n            }\n            else\n            {\n                toastOpen(t('notSent'));\n                actions.modalActions.updateLoading(false);\n            }\n        }\n\n        // 清除input和交易資料\n        handleInput('price', '');\n        handleInput('amount', '');\n        myTransactionChange({\n            price: '',\n            amount: '',\n            able: false,\n            total: '-',\n            act: type\n        });\n    }\n\n    renderButton()\n    {\n        const { t, from, mouseEnterPending, mouseLeavePending, myTransaction } = this.props;\n\n        return (\n            <div className=\"submit\">\n                <button\n                    className={myTransaction.act === 'buy' ? 'green' : 'red'}\n                    onClick={this.openLimitPending}\n                    onMouseEnter={() => mouseEnterPending(myTransaction.act)}\n                    onMouseLeave={() => mouseLeavePending()}\n                    disabled={!myTransaction.able}\n                >{t(myTransaction.act)} {from.token}\n                </button>\n            </div>\n        );\n    }\n\n    render()\n    {\n        const { from, to, t, myTransaction, price, amount } = this.props;\n\n        return (\n            <div className=\"c_limitTransaction\">\n                <div className=\"input-field\">\n                    <div>{t('price')}</div>\n                    <div className={price.active ? 'enter active' : 'enter'} data-input=\"price\" onClick={this.clickFocus}>\n                        <input\n                            id=\"price\"\n                            type=\"text\"\n                            name=\"price\"\n                            onChange={this.handleInput}\n                            value={price.value}\n                            ref={(input) =>\n                            {\n                                this.price = input;\n                            }}\n                        />\n                        <div className=\"type\">{to.token}</div>\n                    </div>\n                </div>\n\n                <div className=\"input-field\">\n                    <div>{t('amount')}</div>\n                    <div className={amount.active ? 'enter active' : 'enter'} data-input=\"amount\" onClick={this.clickFocus}>\n                        <input\n                            id=\"amount\"\n                            type=\"text\"\n                            name=\"amount\"\n                            onChange={this.handleInput}\n                            value={amount.value}\n                            ref={(input) =>\n                            {\n                                this.amount = input;\n                            }}\n                        />\n                        <div className=\"type from\">{from.token}</div>\n                    </div>\n                </div>\n\n                <div className=\"submit-field\">\n                    <div className=\"volume\">\n                        <div>TOTAL</div>\n                        <div>\n                            <div className=\"total\">{myTransaction.total !== '-' ? formatNumber(8, tenFill(bnHex(myTransaction.total, 16).toString(), -to.decimal)) : '-'}</div>\n                            <div>{to.token}</div>\n                        </div>\n                    </div>\n                    {this.renderButton()}\n                </div>\n            </div>\n        );\n    }\n}\n\nLimitTransaction.defaultProps = {\n    t: () => {}\n};\n\nLimitTransaction.propTypes = {\n    from: PropTypes.object.isRequired,\n    to: PropTypes.object.isRequired,\n    account: PropTypes.array.isRequired,\n    user: PropTypes.object.isRequired,\n    tokenList: PropTypes.array.isRequired,\n    buybook: PropTypes.array.isRequired,\n    sellbook: PropTypes.array.isRequired,\n    t: PropTypes.func,\n    myTransaction: PropTypes.object.isRequired,\n    actions: PropTypes.object.isRequired,\n    mouseEnterPending: PropTypes.func.isRequired,\n    mouseLeavePending: PropTypes.func.isRequired,\n    createQuery: PropTypes.func.isRequired,\n    handlePreview: PropTypes.func.isRequired,\n    modalControl: PropTypes.object.isRequired,\n    toastOpen: PropTypes.func.isRequired,\n    price: PropTypes.object.isRequired,\n    amount: PropTypes.object.isRequired,\n    handleInput: PropTypes.func.isRequired,\n    handleFocus: PropTypes.func.isRequired\n};\n\nexport default translate('account', { wait: true })(LimitTransaction);\n","/* eslint-disable no-undef */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport equal from 'deep-equal';\nimport { bnHex, bnTen, tenFill, formatNumber } from '../../utils/format';\nimport * as rpc from '../../utils/rpc';\nimport './marketTransaction.scss';\n\n\nclass MarketTransaction extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {};\n\n        this.openMarketTrans = this.openMarketTrans.bind(this);\n        this.immTrans = this.immTrans.bind(this);\n        this.enterMarket = this.enterMarket.bind(this);\n        this.clickFocus = this.clickFocus.bind(this);\n\n        this.timeout = null;\n        this.length = 0;\n    }\n\n    componentDidMount()\n    {\n        window.addEventListener('click', this.clickOutside);\n    }\n\n    shouldComponentUpdate(nextProps, nextState)\n    {\n        if (equal(nextProps, this.props) && equal(nextState, this.state))\n        {\n            return false;\n        }\n        else\n        {\n            return true;\n        }\n    }\n\n    componentWillUnmount()\n    {\n        window.removeEventListener('click', this.clickOutside);\n        this.timeout = null;\n    }\n\n    clickFocus(e)\n    {\n        const t = e.currentTarget.dataset.type;\n        this.amount.focus();\n        this.props.handleFocus(t);\n    }\n\n    enterMarket(e)\n    {\n        const value = e.target.value;\n\n        this.props.handleInput('amount', value);\n        clearTimeout(this.timeout);\n        this.timeout = setTimeout(() =>\n        {\n            const {\n                sellbook,\n                buybook,\n                actions,\n                from,\n                to,\n                toastOpen,\n                t,\n                myTransaction,\n                handlePreview,\n                amount\n            } = this.props;\n\n            const { myTransactionChange } = actions.userActions;\n            const disable = () =>\n            {\n                myTransactionChange({\n                    price: '',\n                    amount: '',\n                    able: false,\n                    act: myTransaction.act,\n                    total: '-'\n                });\n            };\n\n            if (value < (10 ** -6))\n            {\n                disable();\n                return toastOpen(`${from.token} ${t('min')}${10 ** -6}`);\n            }\n            else if (value > (10 ** 9))\n            {\n                disable();\n                return toastOpen(`${from.token} ${t('max')}${10 ** 9}`);\n            }\n\n            let total;\n            if (myTransaction.act === 'buy')\n            {\n                const sellArray = [...sellbook].reverse();\n                const p = sellArray.find(d => d.value >= value);\n                if (p)\n                {\n                    const price = bnTen(tenFill(1, 36)).div(bnHex(p.price)).toString(16);\n                    const tmpAmount = bnTen(tenFill(value, from.decimal)).toString(16);\n\n                    total = bnTen(tenFill(bnHex(tmpAmount).toString(), 18)).div(bnHex(price)).toString(16);\n                    this.length = sellArray.indexOf(p) + 1;\n                    myTransactionChange({\n                        price,\n                        amount: tmpAmount,\n                        able: true,\n                        act: myTransaction.act,\n                        total\n                    });\n                }\n                else\n                {\n                    disable();\n                }\n            }\n            else\n            {\n                // act = 'sell'\n                // find buybook\n                const p = buybook.find(d => d.value >= value);\n                if (p)\n                {\n                    const price = bnTen(tenFill(1, 36)).div(bnHex(p.price)).toString(16);\n                    const tmpAmount = bnTen(tenFill(value, from.decimal)).toString(16);\n                    total = bnTen(tenFill(bnHex(tmpAmount).mul(bnHex(price)).toString(), -18).split('.')[0]).toString(16);\n                    this.length = buybook.indexOf(p) + 1;\n\n                    myTransactionChange({\n                        price,\n                        amount: tmpAmount,\n                        able: true,\n                        act: myTransaction.act,\n                        total\n                    });\n                }\n                else\n                {\n                    disable();\n                }\n            }\n\n            handlePreview(amount.value, tenFill(bnHex(total).toString(), -to.decimal));\n        }, 500);\n    }\n\n    async immTrans(type, tx)\n    {\n        const { user, actions, createQuery, t, toastOpen, handleInput } = this.props;\n        const { myTransactionChange } = actions.userActions;\n\n        actions.modalActions.updateLoading(true);\n        actions.modalActions.updateMessage(user.observer ? t('dataGenerating') : t('success'));\n\n        if (user.observer)\n        {\n            rpc.createStream(tx).then((res) =>\n            {\n                // console.log(res);\n                actions.modalActions.updateLoading(false);\n                if (tx.skip)\n                {\n                    res.approve = '';\n                }\n                createQuery(type, res.raw, res.approve, tx.from, tx.data);\n            });\n        }\n        else\n        {\n            const receipt = await rpc.transaction(tx);\n            if (receipt)\n            {\n                this.props.modalControl.open('receipt', { receipt });\n                actions.modalActions.updateLoading(false);\n            }\n            else\n            {\n                toastOpen(t('notSent'));\n                actions.modalActions.updateLoading(false);\n            }\n        }\n\n        this.length = 0;\n        handleInput('amount', '');\n        myTransactionChange({\n            price: '',\n            amount: '',\n            able: false,\n            total: '-',\n            act: type\n        });\n    }\n\n    async openMarketTrans()\n    {\n        const {\n            from,\n            to,\n            tokenList,\n            myTransaction,\n            account,\n            t,\n            user,\n            actions,\n            toastOpen,\n            amount\n        } = this.props;\n        const agent = '';\n        let fromToken;\n        let toToken;\n\n        if (!user.wallet) return toastOpen(`${t('importAlert')}`);\n        if (amount.value > (10 ** 9)) return toastOpen(`${from.token}${t('max')}${10 ** 9}`);\n        if (amount.value < (10 ** -2)) return toastOpen(`${from.token}${t('min')}${10 ** -2}`);\n        if (tenFill(bnHex(myTransaction.total).toString(), -to.decimal) > (10 ** 9)) return toastOpen(`Total ${to.token}${t('max')}${10 ** 9}`);\n        if (tenFill(bnHex(myTransaction.total).toString(), -to.decimal) < (10 ** -2)) return toastOpen(`Total ${to.token}${t('min')}${10 ** -2}`);\n\n        const fToken = tokenList.find(tk => tk.address === from.address);\n        const tToken = tokenList.find(tk => tk.address === to.address);\n\n        if (myTransaction.act === 'sell')\n        {\n            const target = account.find(l => l.address === from.address);\n            const a = bnHex(target.usable);\n            const b = bnTen(tenFill(amount.value, from.decimal));\n            if (a.lt(b)) return toastOpen(`${from.token}${t('out')}`);\n\n            fromToken = {\n                token: fToken.token,\n                address: fToken.address,\n                price: myTransaction.price,\n                amount: myTransaction.amount,\n            };\n\n            toToken = {\n                token: tToken.token,\n                address: tToken.address,\n                amount: myTransaction.total,\n            };\n        }\n        else\n        {\n            const target = account.find(l => l.address === to.address);\n            const a = bnHex(target.usable);\n            const b = bnHex(myTransaction.total);\n            if (a.lt(b)) return toastOpen(`${to.token}${t('out')}`);\n\n            fromToken = {\n                token: tToken.token,\n                address: tToken.address,\n                price: myTransaction.price,\n                amount: myTransaction.total,\n            };\n\n            toToken = {\n                token: fToken.token,\n                address: fToken.address,\n                amount: myTransaction.amount,\n            };\n        }\n\n        actions.modalActions.updateLoading(true);\n        actions.modalActions.updateMessage(t('gettingTx'));\n\n        const checkETH = (gas) =>\n        {\n            const eth = account.find(d => d.address === finalConfig.ethAddress);\n            let fromBalance = Number(tenFill(bnHex(eth.usable).toString(), -18));\n            if (fromToken.address === finalConfig.ethAddress)\n            {\n                fromBalance -= tenFill(bnHex(fromToken.amount).toString(), -to.decimal);\n            }\n\n            if (fromBalance < Number(gas))\n            {\n                return false;\n            }\n            else\n            {\n                return true;\n            }\n        };\n\n\n        let fee = 0;\n        if (this.length > 0)\n        {\n            fee = await rpc.calcFee(user.wallet.address, toToken);\n        }\n\n        if (!user.observer)\n        {\n            const tx = await rpc.estimateGas(fromToken, toToken, user.wallet.address, user.key, agent, true);\n\n            if (tx)\n            {\n                actions.modalActions.updateLoading(false);\n                const gas = tx.userAddress ? ((tx.gasPrice * tx.gasLimit) / (10 ** 18)) + ((this.length + 1) * (1500000 / (10 ** 18))) + (50000 / (10 ** 18)) : (tx.gasPrice * tx.gasLimit) / (10 ** 18);\n                if (!checkETH(gas))\n                {\n                    return toastOpen(`ETH${t('out')}`);\n                }\n\n                this.props.modalControl.open('transaction', {\n                    type: myTransaction.act,\n                    fromToken,\n                    toToken,\n                    gas,\n                    fee,\n                    fromDecimal: tx.fromDecimal,\n                    toDecimal: tx.toDecimal,\n                    exec: () =>\n                    {\n                        this.immTrans(myTransaction.act, tx);\n                    }\n                });\n            }\n            else\n            {\n                actions.modalActions.updateLoading(false);\n                toastOpen(t('failMessage'));\n                console.warn('Error');\n            }\n        }\n        else\n        {\n            actions.userActions.changeKeep(true);\n            let allowance = await rpc.observerAllowance(fromToken, user.wallet.address);\n            actions.modalActions.updateLoading(false);\n\n            const estimate = async (skip) =>\n            {\n                const tx = await rpc.observerEstimatGas(fromToken, toToken, user.wallet.address, agent, true);\n                if (skip)\n                {\n                    tx.skip = true;\n                }\n\n                this.immTrans(myTransaction.act, tx);\n            };\n\n            if (allowance === '0x') allowance = '0';\n\n            if (bnHex(allowance.replace('0x', '')).lt(bnHex(fromToken.amount)) && (allowance / (10 ** 18)) !== 0)\n            {\n                const pass = await rpc.observerApprove({ ...fromToken, amount: '0' });\n                if (pass)\n                {\n                    // estimate();\n                    this.props.modalControl.open('observerQr', { type: 'approve', qrcode: pass, exec: () => { this.props.modalControl.close(); estimate(); }, fromToken, message: '請完成交易再關閉視窗' });\n                }\n            }\n            else if (bnHex(allowance.replace('0x', '')).gte(bnHex(fromToken.amount)))\n            {\n                estimate(true);\n            }\n            else\n            {\n                this.props.modalControl.close();\n                estimate();\n            }\n        }\n    }\n\n    renderButton()\n    {\n        const { from, t, mouseEnterPending, mouseLeavePending, myTransaction } = this.props;\n        const { act, able } = myTransaction;\n        return (\n            <div className=\"submit\">\n                <button\n                    className={act === 'buy' ? 'green' : 'red'}\n                    onClick={this.openMarketTrans}\n                    onMouseEnter={() => mouseEnterPending(act)}\n                    onMouseLeave={() => mouseLeavePending()}\n                    disabled={!able}\n                >{t(act)} {from.token}\n                </button>\n            </div>\n        );\n    }\n\n    render()\n    {\n        const { from, to, t, myTransaction, amount } = this.props;\n\n        return (\n            <div className=\"c_marketTransaction\">\n                <div className=\"input-field\">\n                    <div>{t('amount')}</div>\n                    <div className={amount.active ? 'enter active' : 'enter'} data-type=\"amount\" onClick={this.clickFocus}>\n                        <input\n                            type=\"text\"\n                            onChange={this.enterMarket}\n                            value={amount.value}\n                            ref={(input) =>\n                            {\n                                this.amount = input;\n                            }}\n                        />\n                        <div className=\"type from\">{from.token}</div>\n                    </div>\n                </div>\n\n                <div className=\"submit-field\">\n                    <div className=\"volume\">\n                        <div>TOTAL</div>\n                        <div>\n                            <div className=\"total\">≈ {myTransaction.total === '-' ? '-' : formatNumber(8, tenFill(bnHex(myTransaction.total).toString(), -to.decimal))}</div>\n                            <div>{to.token}</div>\n                        </div>\n                    </div>\n                    {this.renderButton()}\n                </div>\n            </div>\n        );\n    }\n}\n\nMarketTransaction.defaultProps = {\n    t: () => {}\n};\n\nMarketTransaction.propTypes = {\n    from: PropTypes.object.isRequired,\n    to: PropTypes.object.isRequired,\n    account: PropTypes.array.isRequired,\n    user: PropTypes.object.isRequired,\n    tokenList: PropTypes.array.isRequired,\n    buybook: PropTypes.array.isRequired,\n    sellbook: PropTypes.array.isRequired,\n    t: PropTypes.func,\n    myTransaction: PropTypes.object.isRequired,\n    actions: PropTypes.object.isRequired,\n    mouseEnterPending: PropTypes.func.isRequired,\n    mouseLeavePending: PropTypes.func.isRequired,\n    createQuery: PropTypes.func.isRequired,\n    handlePreview: PropTypes.func.isRequired,\n    modalControl: PropTypes.object.isRequired,\n    toastOpen: PropTypes.func.isRequired,\n    amount: PropTypes.object.isRequired,\n    handleFocus: PropTypes.func.isRequired,\n    handleInput: PropTypes.func.isRequired\n};\n\nexport default translate('account', { wait: true })(MarketTransaction);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport { translate } from 'react-i18next';\nimport equal from 'deep-equal';\nimport './account.scss';\nimport { formatNumber, bnHex, bnTen, tenFill } from '../../utils/format';\nimport Login from '../login/login';\nimport LimitTransaction from '../limitTransaction/limitTransaction';\nimport MarketTransaction from '../marketTransaction/marketTransaction';\n\nclass Account extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            pendingType: 1, // 1 = 掛單交易 | 2 = 即時交易\n            preview: { add: '', less: '' }, // 紀錄那個 token 是增加和減少\n            toggle: false,\n            calc: { add: '', less: '' }, // preview 加減的數字\n            price: {\n                active: false,\n                value: ''\n            },\n            amount: {\n                active: false,\n                value: ''\n            }\n        };\n\n        this.btn = '';\n\n        this.selectPending = this.selectPending.bind(this);\n        this.mouseEnterPending = this.mouseEnterPending.bind(this);\n        this.mouseLeavePending = this.mouseLeavePending.bind(this);\n        this.createQuery = this.createQuery.bind(this);\n        this.toggleSelect = this.toggleSelect.bind(this);\n        this.changeSelect = this.changeSelect.bind(this);\n        this.clickOutside = this.clickOutside.bind(this);\n        this.handlePreview = this.handlePreview.bind(this);\n        this.copyAddress = this.copyAddress.bind(this);\n        this.preview = this.preview.bind(this);\n        this.handleInput = this.handleInput.bind(this);\n        this.handleFocus = this.handleFocus.bind(this);\n    }\n\n    componentDidMount()\n    {\n        window.addEventListener('click', this.clickOutside);\n        this.props.onRef(this);\n    }\n\n    shouldComponentUpdate(nextProps, nextState)\n    {\n        if (equal(nextProps, this.props) && equal(nextState, this.state))\n        {\n            return false;\n        }\n        else\n        {\n            return true;\n        }\n    }\n\n    componentWillUnmount()\n    {\n        window.removeEventListener('click', this.clickOutside);\n        this.props.onRef(null);\n    }\n\n\n    // 在 containers/index.js 會使用，勿刪\n    changeInput(p, a)\n    {\n        this.setState(update(this.state, {\n            price: { value: { $set: p } },\n            amount: { value: { $set: a === null ? this.state.amount.value : '' } }\n        }));\n    }\n\n    // 按 toggle 以外的地方時關閉 toggle\n    clickOutside(e)\n    {\n        const toggle = document.querySelector('.c_account .toggle');\n        const select = document.querySelector('.c_account .select');\n        if (toggle && !select.contains(e.target))\n        {\n            this.setState(update(this.state, {\n                toggle: { $set: false }\n            }));\n        }\n\n        const active = document.querySelector('.enter.active');\n        if (active && !active.contains(e.target))\n        {\n            // active.className = 'enter';\n            this.setState(update(this.state, {\n                price: {\n                    active: { $set: false }\n                },\n                amount: {\n                    active: { $set: false }\n                }\n            }));\n        }\n    }\n\n    changeSelect(e)\n    {\n        e.stopPropagation();\n        const type = e.target.dataset.type;\n        // 如果toggle是關閉的就打開\n        if (this.state.toggle === false)\n        {\n            this.setState(update(this.state, {\n                toggle: { $set: true }\n            }));\n        }\n        else\n        {\n            const { myTransaction, actions, from, to } = this.props;\n            const { pendingType } = this.state;\n\n            // 如果是限價交易，切換買賣單時價格必須變倒數\n            if (pendingType === 1 && myTransaction.act !== type && myTransaction.price)\n            {\n                const { price } = this.state;\n                actions.userActions.myTransactionUpdate({\n                    type: 'price',\n                    value: type === 'sell' ?\n                        bnTen(tenFill(price.value, (18 + to.decimal) - from.decimal)).toString(16) :\n                        bnTen(tenFill(bnTen(tenFill(1, 36)).div(bnTen(tenFill(price.value, 18))).toString(), from.decimal - to.decimal)).toString(16)\n                });\n            }\n            else if (pendingType !== 1) // 如果是市價交易，切換賣賣單時清空所有內容\n            {\n                actions.userActions.myTransactionChange({\n                    price: '',\n                    amount: '',\n                    total: '-',\n                    able: false,\n                    act: type\n                });\n            }\n            this.setState(update(this.state, {\n                toggle: { $set: false },\n                amount: { value: { $set: pendingType !== 1 ? '' : this.state.amount.value } }\n            }));\n\n            actions.userActions.myTransactionUpdate({\n                type: 'act',\n                value: type\n            });\n        }\n    }\n\n    handleFocus(type)\n    {\n        this.setState(update(this.state, {\n            price: {\n                active: { $set: type === 'price' ? true : false }\n            },\n            amount: {\n                active: { $set: type === 'price' ? false : true }\n            }\n        }));\n    }\n\n    handleInput(name, value)\n    {\n        // 限制只能輸入到小數以下8位\n        if (value.split('.')[1] && value.split('.')[1].length > 8)\n        {\n            if (Number(value))\n            {\n                this.setState(update(this.state, {\n                    [name]: {\n                        value: { $set: Number(value) === 0 ? '' : Number(value).toFixed(9).substr(0, value.length - 1) }\n                    }\n                }));\n            }\n        }\n        else\n        {\n            this.setState(update(this.state, {\n                [name]: {\n                    value: { $set: value }\n                }\n            }));\n        }\n    }\n\n    copyAddress()\n    {\n        document.querySelector('.wallet-address textarea').select();\n        document.execCommand('copy');\n        this.props.toastOpen(this.props.t('copied'));\n    }\n\n    // 產生 tidewallet connect的qrcode\n    createQuery(type, raw, approve, fromToken, data)\n    {\n        const { modalControl, actions, t } = this.props;\n\n        // 如果需要 approve 的話，產生 approve 彈窗\n        if (approve)\n        {\n            const exec = () =>\n            {\n                setTimeout(() =>\n                {\n                    modalControl.close();\n                    modalControl.open('observerQr', { type: 'sign', qrcode: raw, fromToken, message: t('observerWaiting'), data });\n                }, 100);\n            };\n            modalControl.open('observerQr', { type: 'approve', qrcode: approve, exec, fromToken, message: t('observerWaiting'), data });\n            actions.modalActions.updateLoading(false);\n        }\n        else\n        {\n            // 如果已經 approve 過了，直接產生簽署彈窗\n            modalControl.open('observerQr', { type: 'sign', qrcode: raw, fromToken, message: t('observerWaiting'), data });\n            actions.modalActions.updateLoading(false);\n        }\n    }\n\n    mouseEnterPending(button)\n    {\n        const { from, to, myTransaction } = this.props;\n        const { able } = myTransaction;\n        // const { pendingType } = this.state;\n        this.btn = button;\n\n        // if (pendingType === 1)\n        // {\n        //     if (button === 'buy' && able)\n        //     {\n        //         this.setState(update(this.state, {\n        //             preview: {\n        //                 add: { $set: from.token },\n        //                 less: { $set: to.token }\n        //             }\n        //         }));\n        //     }\n        //     else if (button === 'sell' && able)\n        //     {\n        //         this.setState(update(this.state, {\n        //             preview: {\n        //                 add: { $set: to.token },\n        //                 less: { $set: from.token }\n        //             }\n        //         }));\n        //     }\n        // }\n\n        // 如果是賣單，to 會減少、from 會增加\n        if (button === 'sell' && able)\n        {\n            this.setState(update(this.state, {\n                preview: {\n                    add: { $set: to.token },\n                    less: { $set: from.token }\n                }\n            }));\n        }\n        // 如果是買單，from 會減少、to 會增加\n        else if (button === 'buy' && able)\n        {\n            this.setState(update(this.state, {\n                preview: {\n                    add: { $set: from.token },\n                    less: { $set: to.token }\n                }\n            }));\n        }\n    }\n\n    mouseLeavePending()\n    {\n        this.setState(update(this.state, {\n            preview: {\n                add: { $set: '' },\n                less: { $set: '' }\n            }\n        }));\n        this.btn = '';\n    }\n\n    handlePreview(add, less)\n    {\n        this.setState(update(this.state, {\n            calc: {\n                add: { $set: add },\n                less: { $set: less }\n            }\n        }));\n    }\n\n    logout()\n    {\n        window.location.reload();\n        // const { t, actions } = this.props;\n        // const { setUser, updateMyBooks } = actions.userActions;\n        // setUser({});\n        // updateMyBooks([]);\n        // clearTimeInterval();\n        // actions.mortgageActions.mortgageLogout();\n        // actions.userActions.updateHistory([]);\n        // setTimeout(() =>\n        // {\n        //     this.props.toastOpen(t('logoutSuccess'));\n        // }, 300);\n    }\n\n    preview(data)\n    {\n        let style = '';\n        let value = '';\n        const { preview, pendingType, calc } = this.state;\n\n        if (data.token === preview.add)\n        {\n            style = 'add';\n            try\n            {\n                if (pendingType === 1)\n                {\n                    if (this.btn === 'buy')\n                    {\n                        value = calc.add;\n                    }\n                    else\n                    {\n                        value = calc.less;\n                    }\n                }\n                else if (pendingType !== 1 && this.btn === 'sell')\n                {\n                    value = calc.less;\n                }\n                else\n                {\n                    value = calc.add;\n                }\n\n                value = `+${formatNumber(7, Number(value))}`;\n            }\n            catch (err)\n            {\n                style = '';\n                value = '';\n            }\n        }\n        else if (data.token === preview.less)\n        {\n            style = 'less';\n            try\n            {\n                if (pendingType === 1)\n                {\n                    if (this.btn === 'buy')\n                    {\n                        value = calc.less;\n                    }\n                    else\n                    {\n                        value = calc.add;\n                    }\n                }\n                else if (this.btn === 'buy')\n                {\n                    value = calc.less;\n                }\n                else\n                {\n                    value = calc.add;\n                }\n\n                value = `-${formatNumber(7, Number(value))}`;\n            }\n            catch (err)\n            {\n                style = '';\n                value = '';\n            }\n        }\n\n        return { style, value };\n    }\n\n    selectPending(e)\n    {\n        const { actions, myTransaction } = this.props;\n        const { myTransactionChange } = actions.userActions;\n\n        this.setState(update(this.state, {\n            pendingType: { $set: Number(e.target.dataset.type) },\n            price: { value: { $set: '' } },\n            amount: { value: { $set: '' } }\n        }));\n        myTransactionChange({\n            amount: '',\n            total: '-',\n            able: false,\n            price: '',\n            act: myTransaction.act\n        });\n    }\n\n    toggleSelect()\n    {\n        this.setState(update(this.state, {\n            toggle: { $set: !this.state.toggle },\n        }));\n    }\n\n    renderAccount()\n    {\n        const {\n            user, actions, tokenList, t, loading, modalControl\n        } = this.props;\n\n        if (!user.wallet)\n        {\n            return (\n                <Login\n                    wallet={user.wallet || {}}\n                    actions={actions}\n                    tokenList={tokenList}\n                    loading={loading}\n                    modalControl={modalControl}\n                    exportLink={this.exportLink}\n                />\n            );\n        }\n        else\n        {\n            const data = `data:text/json;charset=utf-8,${encodeURIComponent(JSON.stringify(user.wallet))}`;\n            return (\n                <div className=\"table\">\n                    <div className=\"t-header\">\n                        <span>{t('balance')}</span>\n                    </div>\n\n                    {this.renderTable()}\n\n                    <div className=\"wallet-address\">\n                        <div className=\"address\">\n                            <div className=\"wallet-title\">\n                                {t('yourWallet')}\n                            </div>\n                            <div>\n                                <textarea value={user.wallet ? `0x${user.wallet.address.replace('0x', '')}` : ''} readOnly />\n                                <img src=\"/img/icon/ic-copy.svg\" alt=\"copy\" onClick={this.copyAddress} />\n                            </div>\n                        </div>\n                        {!user.observer ?\n                            <div className=\"wallet-export\">\n                                <a\n                                    className=\"button\"\n                                    href={data}\n                                    download=\"keyStore.json\"\n                                    target={/iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream ? '_blank' : ''}\n                                >\n                                    <span>{t('downloadWallet')}</span>\n                                </a>\n                            </div>\n                            : ''}\n                    </div>\n                </div>\n            );\n        }\n    }\n\n    renderTable()\n    {\n        let content;\n        const { from, to, account, tokenList } = this.props;\n\n        if (account && account.length > 0)\n        {\n            content = account.map((data, index) =>\n            {\n                // 如果地址不是from跟to才回傳\n                if (data.address !== from.address && data.address !== to.address)\n                {\n                    const unit = tokenList.find(d => d.address === data.address).decimal;\n                    const usable = tenFill(bnHex(data.usable).toString(), -unit);\n                    return (\n                        <div key={data.index || index}>\n                            <span>{data.token}</span>\n                            <span>{usable}</span>\n                            <span />\n                        </div>\n                    );\n                }\n                else\n                {\n                    return null;\n                }\n            });\n\n            // 用來回傳form to\n            const top = (param) =>\n            {\n                const item = account.find(data => data.address === param);\n                const pre = this.preview(item);\n\n                const unit = tokenList.find(d => d.address === param).decimal;\n                const usable = tenFill(bnHex(item.usable).toString(), -unit);\n\n                return (\n                    <div key={item.address} className={param === to.address ? 'active' : ''}>\n                        <span>{item.token}</span>\n                        <span>{usable}</span>\n                        <span className={pre.style}>{pre.value}</span>\n                    </div>\n                );\n            };\n\n            return (\n                <div className=\"t-body\">\n                    {top(to.address)}\n                    {top(from.address)}\n                    {content}\n                </div>\n            );\n        }\n\n        return null;\n    }\n\n    renderToggle()\n    {\n        const { from, t } = this.props;\n\n        return (\n            <div className={this.state.toggle ? 'toggle' : 'toggle close'}>\n                <div data-type=\"buy\" onClick={this.changeSelect}>{t('buy')}{from.token}</div>\n                <div data-type=\"sell\" onClick={this.changeSelect}>{t('sell')}{from.token}</div>\n            </div>\n        );\n    }\n\n    renderTransaction()\n    {\n        const {\n            from, to, myTransaction, actions, user, account, tokenList, sellbook, buybook, modalControl, toastOpen\n        } = this.props;\n        const { price, amount, pendingType } = this.state;\n\n        if (pendingType === 1)\n        {\n            return (\n                <LimitTransaction\n                    from={from}\n                    to={to}\n                    myTransaction={myTransaction}\n                    user={user}\n                    account={account}\n                    tokenList={tokenList}\n                    buybook={buybook}\n                    sellbook={sellbook}\n                    actions={actions}\n                    mouseEnterPending={this.mouseEnterPending}\n                    mouseLeavePending={this.mouseLeavePending}\n                    createQuery={this.createQuery}\n                    handlePreview={this.handlePreview}\n                    modalControl={modalControl}\n                    toastOpen={toastOpen}\n                    price={price}\n                    amount={amount}\n                    handleInput={this.handleInput}\n                    handleFocus={(type) =>\n                    {\n                        this.handleFocus(type);\n                    }}\n                />\n            );\n        }\n        else\n        {\n            return (\n                <MarketTransaction\n                    from={from}\n                    to={to}\n                    myTransaction={myTransaction}\n                    user={user}\n                    account={account}\n                    tokenList={tokenList}\n                    buybook={buybook}\n                    sellbook={sellbook}\n                    actions={actions}\n                    mouseEnterPending={this.mouseEnterPending}\n                    mouseLeavePending={this.mouseLeavePending}\n                    createQuery={this.createQuery}\n                    handlePreview={this.handlePreview}\n                    modalControl={modalControl}\n                    toastOpen={toastOpen}\n                    amount={amount}\n                    handleInput={this.handleInput}\n                    handleFocus={(type) =>\n                    {\n                        this.handleFocus(type);\n                    }}\n                />\n            );\n        }\n    }\n\n    render()\n    {\n        const { pendingType } = this.state;\n        const { t, to, from, user, myTransaction } = this.props;\n\n        return (\n            <div className={user.wallet ? 'c_account login' : 'c_account'}>\n                <div className=\"title\">{t('transaction')}\n                    {user.wallet ?\n                        <div className=\"logout\">\n                            <span onClick={this.logout}>{t('logoutWallet')}</span>\n                        </div>\n                        : null\n                    }\n                </div>\n\n                {this.renderAccount()}\n\n                <div className=\"buySell\">\n                    <div className=\"pending-type\">\n                        <a className={pendingType === 1 ? 'active' : ''} data-type=\"1\" onClick={this.selectPending}>{t('pendingTrade')}</a>\n                        <a className={pendingType === 2 ? 'active' : ''} data-type=\"2\" onClick={this.selectPending}>{t('instantTrade')}</a>\n                    </div>\n\n                    <div className=\"buy-sell\">\n                        <div className=\"select\" onClick={this.toggleSelect}>\n                            <span>{myTransaction.act === 'buy' ? `${t('buy')}${from.token}` : `${t('sell')}${from.token}`}</span>\n                            <img src=\"/img/icon/ic-dropdown-p.svg\" alt=\"dropdown\" />\n\n                            {this.renderToggle()}\n\n                        </div>\n\n                        <div className=\"store\">\n                            <img src=\"/img/icon/ic-wallet.svg\" alt=\"wallet\" />\n                            <span>\n                                <span>-</span>\n                                {myTransaction.act === 'buy' ? to.token : from.token}\n                            </span>\n                        </div>\n                    </div>\n\n                    <div>\n                        {this.renderTransaction()}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAccount.defaultProps = {\n    t: () => {}\n};\n\nAccount.propTypes = {\n    from: PropTypes.object.isRequired,\n    to: PropTypes.object.isRequired,\n    account: PropTypes.array.isRequired,\n    tokenList: PropTypes.array.isRequired,\n    sellbook: PropTypes.array.isRequired,\n    buybook: PropTypes.array.isRequired,\n    myTransaction: PropTypes.object.isRequired,\n    actions: PropTypes.object.isRequired,\n    t: PropTypes.func,\n    user: PropTypes.object.isRequired,\n    loading: PropTypes.bool.isRequired,\n    modalControl: PropTypes.object.isRequired,\n    toastOpen: PropTypes.func.isRequired,\n    onRef: PropTypes.func.isRequired\n};\n\nexport default translate('account', { wait: true })(Account);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport equal from 'deep-equal';\nimport { translate } from 'react-i18next';\nimport { formatNumber, formatTime } from '../../utils/format';\nimport './recentTransaction.scss';\n\nclass RecentTransaction extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            toggle: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState)\n    {\n        if (equal(nextProps, this.props) && equal(nextState, this.state))\n        {\n            return false;\n        }\n        else\n        {\n            return true;\n        }\n    }\n\n    renderTable()\n    {\n        const { transaction, t, from, to } = this.props;\n        const content = transaction.map((data, index) =>\n        {\n            // const priceClass = data.isRising ? 'up' : 'down';\n            return (\n                <div key={data.index || index} className=\"info\">\n                    <div className={data.type === 'buy' ? 'green' : 'red'}>\n                        {data.type === 'buy' ? t('table.buy') : t('table.sell')}\n                    </div>\n                    <div className=\"amount\">{formatNumber(8, data.displayPrice)}</div>\n                    <div>{formatNumber(7, data.amount)}</div>\n                    <div className=\"time\">{formatTime(data.timestamp, 'time')}</div>\n                </div>\n            );\n        });\n        return (\n            <div>\n                <div className=\"title\">\n                    {t('table.recentTranssaction')}\n                </div>\n                <div className={this.state.toggle ? 'table' : 'table close'}>\n                    <div className=\"t-header\">\n                        <span />\n                        <span>{t('table.price')}({to.token})</span>\n                        <span>{t('table.volume')}({from.token})</span>\n                        <span>{t('table.time')}</span>\n                    </div>\n                    <div className=\"t-body\">\n                        {content}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    render()\n    {\n        return (\n            <div className=\"c_recentTransaction\">\n                {this.renderTable()}\n            </div>\n        );\n    }\n}\n\nRecentTransaction.defaultProps = {\n    t: () => {}\n};\n\nRecentTransaction.propTypes = {\n    transaction: PropTypes.array.isRequired,\n    t: PropTypes.func,\n    from: PropTypes.object.isRequired,\n    to: PropTypes.object.isRequired\n};\n\nexport default translate()(RecentTransaction);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport equal from 'deep-equal';\nimport { translate } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport OrderBook from '../orderBook/orderBook';\nimport './orders.scss';\n\nclass Order extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.state = {\n            toggle: false,\n            pendingFilter: 8,\n            sell: props.sell,\n            buy: props.buy\n        };\n\n        this.toggleSelect = this.toggleSelect.bind(this);\n        this.clickOutside = this.clickOutside.bind(this);\n        this.fliter = [8, 7, 6, 5];\n    }\n\n    componentDidMount()\n    {\n        window.addEventListener('click', this.clickOutside);\n    }\n\n    // componentWillReceiveProps()\n    // {\n    //     this.setState(update(this.state, {\n    //         sell: { $set: this.props.sell },\n    //         buy: { $set: this.props.buy },\n    //         pendingFilter: { $set: 8 }\n    //     }));\n    // }\n\n    componentWillReceiveProps(nextProps)\n    {\n        const sell = [];\n        const buy = [];\n\n        nextProps.sell.forEach((order) =>\n        {\n            sell.push({ ...order, displayPrice: Number(order.displayPrice).toFixed(this.state.pendingFilter) });\n        });\n\n        nextProps.buy.forEach((order) =>\n        {\n            buy.push({ ...order, displayPrice: Number(order.displayPrice).toFixed(this.state.pendingFilter) });\n        });\n\n        this.setState(update(this.state, {\n            sell: { $set: sell },\n            buy: { $set: buy },\n        }));\n    }\n\n\n    // shouldComponentUpdate(nextProps, nextState)\n    // {\n    //     if (equal(nextProps, this.props) && equal(nextState, this.state))\n    //     {\n    //         return false;\n    //     }\n    //     else\n    //     {\n    //         return true;\n    //     }\n    // }\n    shouldComponentUpdate(nextProps, nextState)\n    {\n        if (\n            !equal(nextState, this.state) ||\n            !equal(nextProps.from, this.props.from) ||\n            !equal(nextProps.to, this.props.to) ||\n            !equal(nextProps.buy, this.props.buy) ||\n            !equal(nextProps.sell, this.props.sell) ||\n            !equal(nextProps.myTransaction, this.props.myTransaction) ||\n            !equal(nextProps.t, this.props.t)\n        )\n        {\n            return true;\n        }\n        else\n        {\n            return false;\n        }\n    }\n\n    componentWillUnmount()\n    {\n        window.removeEventListener('click', this.clickOutside);\n    }\n\n    clickOutside(e)\n    {\n        if (this.state.toggle === true)\n        {\n            if (!this.select.contains(e.target))\n            {\n                this.setState(update(this.state, {\n                    toggle: { $set: false }\n                }));\n            }\n        }\n    }\n\n    changeSelect(value)\n    {\n        const sell = [];\n        const buy = [];\n\n        this.props.sell.forEach((order) =>\n        {\n            sell.push({ ...order, displayPrice: Number(order.displayPrice).toFixed(value) });\n        });\n\n        this.props.buy.forEach((order) =>\n        {\n            buy.push({ ...order, displayPrice: Number(order.displayPrice).toFixed(value) });\n        });\n\n        this.setState(update(this.state, {\n            sell: { $set: sell },\n            buy: { $set: buy },\n            pendingFilter: { $set: value },\n            toggle: { $set: false }\n        }));\n    }\n\n    toggleSelect()\n    {\n        this.setState(update(this.state, {\n            toggle: { $set: !this.state.toggle },\n        }));\n    }\n\n    render()\n    {\n        const { t, from, to, actions, myTransaction, changePrice, toastOpen } = this.props;\n        const { pendingFilter, toggle, sell, buy } = this.state;\n        sell.forEach((v) =>\n        {\n            if (typeof v.displayPrice === 'number')\n            {\n                v.displayPrice = v.displayPrice.toFixed(pendingFilter);\n            }\n        });\n\n        buy.forEach((v) =>\n        {\n            if (typeof v.displayPrice === 'number')\n            {\n                v.displayPrice = v.displayPrice.toFixed(pendingFilter);\n            }\n        });\n\n        return (\n            <div className=\"c_orders\">\n                <div className=\"title\">{t('table.pendingOrders')}</div>\n                <div className=\"books-header\">\n                    <div>{t('table.price')}({to.token})</div>\n                    <div>{t('table.amount')}({from.token})</div>\n                    <div>{t('table.total')}({from.token})</div>\n                </div>\n                <OrderBook book={sell} type=\"sell\" actions={actions} myTransaction={myTransaction} from={from} to={to} changePrice={changePrice} toastOpen={toastOpen} />\n                <div className=\"divid\" />\n                <OrderBook book={buy} type=\"buy\" actions={actions} myTransaction={myTransaction} from={from} to={to} changePrice={changePrice} toastOpen={toastOpen} />\n                <div className=\"filter\">\n                    <div className=\"choose\" onClick={this.toggleSelect} ref={(button) => { this.select = button; }}>\n                        <span>{t('table.decimal', { des: pendingFilter })}</span>\n                        <img src=\"/img/icon/ic-dropdown-p.svg\" alt=\"dropdown\" />\n                        <div className={toggle ? 'toggle' : 'toggle close'}>\n                            <div onClick={(e) => { e.stopPropagation(); this.changeSelect(this.fliter[0]); }}>{this.fliter[0]}</div>\n                            <div onClick={(e) => { e.stopPropagation(); this.changeSelect(this.fliter[1]); }}>{this.fliter[1]}</div>\n                            <div onClick={(e) => { e.stopPropagation(); this.changeSelect(this.fliter[2]); }}>{this.fliter[2]}</div>\n                            <div onClick={(e) => { e.stopPropagation(); this.changeSelect(this.fliter[3]); }}>{this.fliter[3]}</div>\n                        </div>\n                    </div>\n                    <span className=\"more\"><Link to=\"/order\">{t('table.more')}</Link></span>\n                </div>\n            </div>\n        );\n    }\n}\n\nOrder.defaultProps = {\n    t: () => {},\n    changePrice: () => {},\n};\n\nOrder.propTypes = {\n    from: PropTypes.object.isRequired,\n    to: PropTypes.object.isRequired,\n    t: PropTypes.func,\n    sell: PropTypes.array.isRequired,\n    buy: PropTypes.array.isRequired,\n    actions: PropTypes.object.isRequired,\n    myTransaction: PropTypes.object.isRequired,\n    changePrice: PropTypes.func,\n    toastOpen: PropTypes.func.isRequired,\n};\n\nexport default translate()(Order);\n","import React from 'react';\nimport update from 'immutability-helper';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\nimport * as rpc from '../../utils/rpc';\nimport './myTransaction.scss';\nimport {\n    formatNumber,\n    formatTime,\n    bnHex,\n    tenFill,\n} from '../../utils/format';\n\nclass MyTransaction extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            toggleOrder: '',\n        };\n        this.closeOrder = this.closeOrder.bind(this);\n    }\n\n    async closeOrder(item)\n    {\n        const { myBooks, user, t, modalControl, toastOpen, from, to, modalActions, actions } = this.props;\n        if (item.no < 0) return toastOpen(t('table.cancelAlert'));\n        const index = myBooks.indexOf(myBooks.find(b => b.no === item.no));\n        const fromToken = {\n            address: from.token === item.from ? from.address : to.address,\n            price: item.price,\n            amount: item.amount,\n            decimal: from.address === item.from ? from.deciaml : to.decimal\n        };\n        const toToken = { address: from.token === item.to ? from.address : to.address };\n\n        const tx = await rpc.estimateCancel(fromToken, toToken, user.wallet.address, user.key, '');\n\n        const confirm = async () =>\n        {\n            modalActions.updateLoading(true);\n            modalActions.updateMessage(t('table.canceling'));\n\n            if (user.observer)\n            {\n                const qrcode = await rpc.cancelStream(tx);\n                modalControl.open('observerQr', { type: 'cancel', qrcode });\n                modalActions.updateLoading(false);\n            }\n            else\n            {\n                actions.userActions.myBooksChange(item.no);\n                const canceled = await rpc.cancelOrder(tx);\n                if (canceled)\n                {\n                    this.props.cancelPending(index);\n                    modalActions.updateLoading(false);\n                    modalControl.open('receipt', { receipt: canceled });\n                }\n            }\n        };\n        modalControl.open('cancelOrder', {\n            desc: item.desc,\n            price: item.displayPrice,\n            fill: item.fill,\n            amount: item.displayAmount,\n            type: item.type,\n            exec: confirm,\n            gas: tenFill((tx.gasLimit * tx.gasPrice), -18)\n        });\n    }\n\n    toggleOrder(type)\n    {\n        if (type !== '')\n        {\n            this.setState(update(this.state, {\n                toggleOrder: { $set: 'close' }\n            }));\n        }\n        else\n        {\n            this.setState(update(this.state, {\n                toggleOrder: { $set: '' }\n            }));\n        }\n    }\n\n    renderThead()\n    {\n        const { t } = this.props;\n        if (this.state.toggleOrder === '')\n        {\n            return (\n                <div className=\"t-header\">\n                    <div>{t('table.desc')}</div>\n                    <div>{t('table.deal')}/{t('table.amount')}</div>\n                    <div>{t('table.ratio')}</div>\n                </div>\n            );\n        }\n        else\n        {\n            return (\n                <div className=\"t-header\">\n                    <div>{t('table.desc')}</div>\n                    <div>{t('table.amount')}</div>\n                    <div>{t('table.ratio')}</div>\n                </div>\n            );\n        }\n    }\n\n    renderBody()\n    {\n        // 掛單\n        const { myBooks, t, from } = this.props;\n        if (this.state.toggleOrder === '')\n        {\n            const data = myBooks.map((item) =>\n            {\n                return (\n                    <div className={!item.cancel ? 'mt-list' : 'mt-list block'} key={item.no}>\n                        <div>\n                            <div className=\"info\">\n                                <div className=\"desc\">\n                                    <div>\n                                        <span className={item.type === 'buy' ? 'buy' : 'sell'}>{/buy/.test(item.type) ? 'B' : 'S'}</span>\n                                        <span>\n                                            <span className=\"from\">{item.desc.split('/')[0]}</span><span className=\"base\">/{item.desc.split('/')[1]}</span>\n                                        </span>\n                                    </div>\n                                    <div className=\"time\">{typeof item.timestamp === 'number' ? formatTime(item.timestamp, 'date') : item.timestamp}</div>\n                                </div>\n                                <div className=\"item\">\n                                    <div>{formatNumber(8, tenFill(bnHex(item.fill).toString(), -from.decimal))}</div>\n                                    <div>{formatNumber(8, item.displayAmount)}</div>\n                                </div>\n                                <div className=\"price\">{formatNumber(6, item.displayPrice)}</div>\n                                <div className=\"cancel\">\n                                    <img src=\"/img/icon/ic-del.svg\" alt=\"cancel\" onClick={() => { this.closeOrder(item); }} />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                );\n            });\n\n            if (data.length === 0)\n            {\n                return (\n                    <div className=\"no-result\" key=\"1\">{t('table.noHistory')}</div>\n                );\n            }\n            return data;\n        }\n        else // 紀錄\n        {\n            const data = this.props.myHistory.map((item, i) =>\n            {\n                const style = (type) =>\n                {\n                    switch (type)\n                    {\n                        case 'cbuy':\n                            return 'buy';\n                        case 'csell':\n                            return 'sell';\n                        case 'cancel':\n                            return 'cancel';\n                        case 'tbuy':\n                            return 'buy';\n                        case 'tsell':\n                            return 'sell';\n                        default:\n                            return 'trade';\n                    }\n                };\n                if (item.type === 'take')\n                {\n                    return null;\n                }\n                else\n                {\n                    return (\n                        <a href={`https://etherscan.io/tx/0x${item.no.split('0x')[2]}`} target=\"_blank\" key={item.hash || i}>\n                            <div className={/c/.test(item.type) ? 'mt-list canceled' : 'mt-list'}>\n                                <div>\n                                    <div className=\"info\">\n                                        <div className=\"desc\">\n                                            <div>\n                                                <span className={style(item.type)}>{/buy/.test(item.type) ? 'B' : 'S'}</span>\n                                                <span>\n                                                    <span className=\"from\"> {item.desc.split('/')[0]}</span><span className=\"base\">/{item.desc.split('/')[1]}</span>\n                                                </span>\n                                            </div>\n                                            <div className=\"time\">{typeof item.timestamp === 'number' ? formatTime(item.timestamp, 'date') : item.timestamp}</div>\n                                        </div>\n                                        <div className=\"item\">\n                                            <div>{formatNumber(8, item.amount)}</div>\n                                        </div>\n                                        <div className=\"price\">\n                                            {formatNumber(10, item.displayPrice)}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </a>\n\n                    );\n                }\n            });\n\n            if (data.length === 0)\n            {\n                return (\n                    <div className=\"no-result\" key=\"1\">{t('table.noHistory')}</div>\n                );\n            }\n            return data;\n        }\n    }\n\n    render()\n    {\n        const { t, myBooks, myHistory } = this.props;\n\n        return (\n            <div className=\"c_myTransaction\">\n                <div className=\"title\">\n                    {t('table.pendingOrder')}\n                </div>\n                <div className=\"order\">\n                    <div className={this.state.toggleOrder === '' ? 'active' : ''} onClick={() => this.toggleOrder('')}>\n                        {t('table.pendingOrder')}\n                        <span className=\"volume\">{myBooks.length}</span>\n                    </div>\n                    <div className={this.state.toggleOrder !== '' ? 'active' : ''} onClick={() => this.toggleOrder('close')}>\n                        {t('table.closed')}\n                        <span className=\"volume\">{myHistory.filter(item => item.type !== 'take').length}</span>\n                    </div>\n                </div>\n                <div className=\"table\">\n                    {this.renderThead()}\n                    <div className=\"t-body\">{this.renderBody()}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMyTransaction.defaultProps = {\n    t: () => {}\n};\n\nMyTransaction.propTypes = {\n    myBooks: PropTypes.array.isRequired,\n    cancelPending: PropTypes.func.isRequired,\n    user: PropTypes.object.isRequired,\n    from: PropTypes.object.isRequired,\n    to: PropTypes.object.isRequired,\n    t: PropTypes.func,\n    modalControl: PropTypes.object.isRequired,\n    toastOpen: PropTypes.func.isRequired,\n    myHistory: PropTypes.array.isRequired,\n    modalActions: PropTypes.object.isRequired,\n    actions: PropTypes.object.isRequired\n};\n\nexport default translate()(MyTransaction);\n","/* eslint-disable no-undef */\nimport React from 'react';\nimport QRCode from 'qrcode.react';\nimport { translate } from 'react-i18next';\nimport PropTypes from 'prop-types';\n\nimport './tideWallet.scss';\n\nclass TideWallet extends React.Component\n{\n    constructor(props)\n    {\n        super(props);\n        this.state = {};\n    }\n\n    render()\n    {\n        const { t } = this.props;\n        return (\n            <div className=\"c_tideWallet\">\n                <div className=\"title\">\n                    <img src=\"/img/logo-white-notext.svg\" alt=\"TW\" />\n                    <p>Tide<span>Wallet</span></p>\n                    <p>{t('tideWallet.slogan')}</p>\n                </div>\n                <div>\n                    <div className=\"store\">\n                        <div className=\"qrcode\">\n                            <QRCode value={finalConfig.tideWalletiOS} size={64} />\n                        </div>\n                        <p>iOS</p>\n                    </div>\n                    <div className=\"store\">\n                        <div className=\"qrcode\">\n                            <QRCode value={finalConfig.tideWalletAndroid} size={64} />\n                        </div>\n                        <p>Android</p>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nTideWallet.defaultProps = {\n    t: () => {}\n};\n\nTideWallet.propTypes = {\n    t: PropTypes.func\n};\n\nexport default translate()(TideWallet);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { translate } from 'react-i18next';\n\nimport './tab.scss';\n\nconst Tab = (props) =>\n{\n    const { t } = props;\n\n    return (\n        <nav className=\"co_tab\">\n            {/* <div className=\"button\" onClick={() => { props.switch(0); }}>\n                <span>{t('table.token')}</span>\n            </div> */}\n            <div className=\"button\" onClick={() => { props.switch(1); }}>\n                <span>{t('header.chart')}</span>\n            </div>\n            <div className=\"button\" onClick={() => { props.switch(2); }}>\n                <span>{t('header.transaction')}</span>\n            </div>\n            <div className=\"button\" onClick={() => { props.switch(3); }}>\n                <span>{t('table.order')}</span>\n            </div>\n        </nav>\n    );\n};\n\nTab.defaultProps = {\n    t: () => {}\n};\n\nTab.propTypes = {\n    switch: PropTypes.func.isRequired,\n    t: PropTypes.func\n};\n\nexport default translate()(Tab);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { translate } from 'react-i18next';\n\nimport './mortgageLink.scss';\n\nconst MortgageLink = (props) =>\n{\n    const { t } = props;\n    return (\n        <div className=\"c_mortgageLink\">\n            <h3>\n                <p>{t('mortgageP1')}</p>\n                <p>{t('mortgageP2')}</p>\n            </h3>\n\n            <Link to=\"/mortgage\">\n                <p>XPA.Exchange {t('header.mortgage')}</p>\n                <i className=\"fa fa-angle-right\" aria-hidden=\"true\" />\n            </Link>\n        </div>\n    );\n};\n\nMortgageLink.defaultProps = {\n    t: () => {}\n};\n\nMortgageLink.propTypes = {\n    t: PropTypes.func\n};\n\nexport default translate()(MortgageLink);\n","import React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport { translate } from 'react-i18next';\n\nimport Header from '../../components/header/header';\nimport Content from '../../components/content/content';\nimport Account from '../../components/account/account';\nimport RecentTransaction from '../../components/recentTransaction/recentTransaction';\nimport Orders from '../../components/orders/orders';\nimport MyTransaction from '../../components/myTransaction/myTransaction';\nimport Footer from '../../components/footer/footer';\nimport TideWallet from '../../components/tideWallet/tideWallet';\nimport connectFirebase from '../../hoc/connectFirebase';\nimport WithPopup from '../../components/withPopup/withPopup';\nimport Tab from '../../components/tab/tab';\nimport TokenList from '../../components/tokenList/tokenList';\nimport MortgageLink from '../../components/mortgageLink/mortgageLink';\n\nimport * as bookActions from '../../actions/book';\nimport * as userActions from '../../actions/user';\nimport * as modalActions from '../../actions/modal';\nimport * as newsActions from '../../actions/news';\nimport * as mortgageActions from '../../actions/mortgage';\n\nimport './index.scss';\n\nfunction mapStateToProps(state)\n{\n    return {\n        from: state.book.from,\n        to: state.book.to,\n        sell: state.book.sell,\n        buy: state.book.buy,\n        tokenList: state.book.tokenList,\n        summary: state.book.summary,\n        tradeList: state.book.tradeList,\n        transaction: state.book.transaction,\n        kData: state.book.kLine,\n        myBooks: state.user.myBooks,\n        account: state.user.account,\n        user: state.user.user,\n        myTransaction: state.user.myTransaction,\n        keep: state.user.keep,\n        loading: state.modal.loading,\n        message: state.modal.message,\n        news: state.news,\n        myHistory: state.user.myHistory\n    };\n}\n\nfunction mapDispatchToProps(dispatch)\n{\n    return {\n        actions: {\n            bookActions: bindActionCreators(bookActions, dispatch),\n            userActions: bindActionCreators(userActions, dispatch),\n            modalActions: bindActionCreators(modalActions, dispatch),\n            newsActions: bindActionCreators(newsActions, dispatch),\n            mortgageActions: bindActionCreators(mortgageActions, dispatch)\n        }\n    };\n}\n\nclass Index extends React.Component\n{\n    constructor()\n    {\n        super();\n        this.state = {\n            user: {},\n            nav: 1,\n        };\n\n        this.cancelPending = this.cancelPending.bind(this);\n        this.select = this.select.bind(this);\n        this.changeNav = this.changeNav.bind(this);\n\n        this.modalControl = {\n            open: this.modalOpen,\n            close: this.modalClose\n        };\n    }\n\n    // 切換 from, to\n    select(obj)\n    {\n        const { from, to, tokenList, tradeList, user, actions, myTransaction } = this.props;\n        let f = from;\n        let t = to;\n\n        if (obj)\n        {\n            const { type, baseAddress, id, decimal } = obj;\n            const address = tradeList[type].find(d => d.id === id).address;\n            const re = tokenList.find(d => d.address === address);\n            t = { token: type, address: baseAddress, decimal };\n            f = { token: re.token, address: re.address, decimal: re.decimal };\n        }\n\n        actions.bookActions.changeFrom(f);\n        actions.bookActions.changeTo(t);\n\n        // \b重新抓取掛單\n        actions.modalActions.updateLoading(true);\n        this.props.actions.bookActions.bookGet$();\n        // window.dbObj.ref('orderBooks').once('value', (snapshot) =>\n        // {\n        //     actions.bookActions.bookGet$(Object.values(snapshot.val()));\n        //     if (user.wallet)\n        //     {\n        //         actions.userActions.myBooksGet$(snapshot);\n        //     }\n        // });\n\n        window.dbObj.ref('priceBooks').once('value', (snapshot) =>\n        {\n            actions.bookActions.recentTransactionGet$(Object.values(snapshot.val()));\n        });\n\n        if (user.wallet)\n        {\n            window.dbObj.ref('operatorBooks').orderByChild('user').equalTo(`0x${user.wallet.address}`).once('value', (snapshot) =>\n            {\n                userActions.historyGet$(Object.values(snapshot.val() || []));\n            });\n        }\n\n        // 清除 myTransaction\b\n        userActions.myTransactionChange({\n            price: '',\n            amount: '',\n            able: false,\n            total: '-',\n            act: myTransaction.act\n        });\n\n        this.child.changeInput('', '');\n    }\n\n    // 小螢幕時\b, 切換 Nav\n    changeNav(type)\n    {\n        // const chart = document.querySelector('.chart');\n        // if (chart && type !== 1)\n        // {\n        //     chart.style.display = 'none';\n        // }\n        // else if (chart && type === 1)\n        // {\n        //     chart.style.display = 'flex';\n        // }\n        this.setState(update(this.state, {\n            nav: { $set: type }\n        }));\n    }\n\n    // 取消掛單\n    cancelPending(index)\n    {\n        const { t, actions, myBooks } = this.props;\n        if (!myBooks[index]) return;\n\n        // 如果掛單還在 pending 中, \b就不能取消\n        if (myBooks[index].no < 0) return this.toastOpen(t('table.cancelAlert'));\n        actions.userActions.myBooksCancel(index);\n    }\n\n    render()\n    {\n        const {\n            from,\n            to,\n            sell,\n            buy,\n            account,\n            actions,\n            myBooks,\n            user,\n            myTransaction,\n            tokenList,\n            tradeList,\n            transaction,\n            kData,\n            loading,\n            myHistory\n        } = this.props;\n\n        const { nav } = this.state;\n\n        // const tokenData = data.find(d => d.address.toLowerCase() === from.address.toLowerCase());\n\n        return (\n            <WithPopup\n                actions={this.props.actions}\n                loading={this.props.loading}\n                tokenList={this.props.tokenList}\n                keep={this.props.keep}\n                message={this.props.message}\n                user={user}\n            >\n                {(modal, toastOpen) => (\n                    <div className=\"co_index\">\n                        <Header\n                            from={from}\n                            to={to}\n                            dash={true}\n                            tradeList={tradeList}\n                            actions={actions}\n                            tokenList={tokenList}\n                            select={this.select}\n                            myTransaction={myTransaction}\n                        />\n                        <main>\n                            <TokenList tradeList={tradeList} select={this.select} actions={actions} tokenList={tokenList} />\n                            <Tab switch={(type) =>\n                            {\n                                this.changeNav(type);\n                            }}\n                            />\n                            <div className={nav === 2 ? 'sidebar rwd-show' : 'sidebar'}>\n                                <Account\n                                    account={account}\n                                    from={from}\n                                    to={to}\n                                    sellbook={sell}\n                                    buybook={buy}\n                                    tokenList={tokenList}\n                                    myTransaction={myTransaction}\n                                    actions={actions}\n                                    user={user}\n                                    loading={loading}\n                                    modalControl={modal}\n                                    toastOpen={toastOpen}\n                                    onRef={(ref) =>\n                                    {\n                                        this.child = ref;\n                                    }}\n                                />\n                                <MyTransaction\n                                    myBooks={myBooks}\n                                    cancelPending={this.cancelPending}\n                                    user={user}\n                                    tokenList={tokenList}\n                                    from={from}\n                                    to={to}\n                                    myHistory={myHistory}\n                                    modalControl={modal}\n                                    toastOpen={toastOpen}\n                                    modalActions={actions.modalActions}\n                                    actions={actions}\n                                />\n\n                                <TideWallet />\n                            </div>\n                            <div className={nav > 0 ? 'content rwd-show' : 'content'}>\n                                <div className={nav === 1 ? 'chart rwd-show' : 'chart'} >\n                                    <Content\n                                        sell={sell}\n                                        buy={buy}\n                                        data={kData}\n                                        from={from}\n                                        to={to}\n                                        tokenList={tokenList}\n                                        actions={actions}\n                                    />\n                                </div>\n                                <div className={nav === 3 ? 'transaction rwd-show' : 'transaction'} >\n                                    <section className={nav === 2 ? 'rwd-show' : ''} >\n                                        <Orders\n                                            from={from}\n                                            to={to}\n                                            sell={sell}\n                                            buy={buy}\n                                            actions={actions}\n                                            myTransaction={myTransaction}\n                                            toastOpen={toastOpen}\n                                            changePrice={(v) =>\n                                            {\n                                                this.child.changeInput(v, null);\n                                            }}\n                                        />\n                                    </section>\n                                    <section className={nav === 3 ? 'rwd-show' : ''} >\n                                        <RecentTransaction transaction={transaction} from={from} to={to} />\n                                    </section>\n                                </div>\n                                <div className=\"transaction\">\n                                    <section>\n                                        <MortgageLink />\n                                    </section>\n                                    <section />\n                                </div>\n                            </div>\n                        </main>\n                        <Footer />\n                    </div>\n                )}\n            </WithPopup>\n        );\n    }\n}\n\nIndex.defaultProps = {\n    t: () => {},\n};\n\nIndex.propTypes = {\n    from: PropTypes.object.isRequired,\n    to: PropTypes.object.isRequired,\n    sell: PropTypes.array.isRequired,\n    buy: PropTypes.array.isRequired,\n    tokenList: PropTypes.array.isRequired,\n    tradeList: PropTypes.object.isRequired,\n    transaction: PropTypes.array.isRequired,\n    kData: PropTypes.array.isRequired,\n    account: PropTypes.array.isRequired,\n    myBooks: PropTypes.array.isRequired,\n    actions: PropTypes.object.isRequired,\n    user: PropTypes.object.isRequired,\n    myTransaction: PropTypes.object.isRequired,\n    keep: PropTypes.bool.isRequired,\n    t: PropTypes.func,\n    loading: PropTypes.bool.isRequired,\n    message: PropTypes.string.isRequired,\n    myHistory: PropTypes.array.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(connectFirebase(translate()(Index)));\n"],"sourceRoot":""}